#name "new_complex.cool"
 OBJECTID class
 MAIN
 OBJECTID inherits
 IO
 OBJECTID main
 SELF
 TYPE
 OBJECTID let
 OBJECTID c
 COMPLEX
 ASSIGN
 OBJECTID new
 COMPLEX
 OBJECTID init
 INT_CONST 1
 INT_CONST 1
 OBJECTID in
 OBJECTID trivially
 OBJECTID equal
 OBJECTID see
 COOLAID
 OBJECTID if
 OBJECTID c
 OBJECTID reflect_X
 OBJECTID c
 OBJECTID reflect_0
 OBJECTID then
 OBJECTID out_string
 OBJECTID n
 OBJECTID else
 OBJECTID out_string
 OBJECTID n
 OBJECTID fi
 OBJECTID equal
 OBJECTID if
 OBJECTID c
 OBJECTID reflect_X
 OBJECTID reflect_Y
 OBJECTID equal
 OBJECTID c
 OBJECTID reflect_0
 OBJECTID then
 OBJECTID out_string
 OBJECTID n
 OBJECTID else
 OBJECTID out_string
 OBJECTID n
 OBJECTID fi
 OBJECTID class
 COMPLEX
 OBJECTID inherits
 IO
 OBJECTID x
 INT
 OBJECTID y
 INT
 OBJECTID init
 OBJECTID a
 INT
 OBJECTID b
 INT
 COMPLEX
 OBJECTID x
 OBJECTID a
 OBJECTID y
 OBJECTID b
 OBJECTID self
 OBJECTID print
 OBJECT
 OBJECTID if
 OBJECTID y
 INT_CONST 0
 OBJECTID then
 OBJECTID out_int
 OBJECTID x
 OBJECTID else
 OBJECTID out_int
 OBJECTID x
 OBJECTID out_string
 OBJECTID out_int
 OBJECTID y
 OBJECTID out_string
 I
 OBJECTID fi
 OBJECTID reflect_0
 COMPLEX
 OBJECTID x
 OBJECTID x
 OBJECTID y
 OBJECTID y
 OBJECTID self
 OBJECTID reflect_X
 COMPLEX
 OBJECTID y
 OBJECTID y
 OBJECTID self
 OBJECTID reflect_Y
 COMPLEX
 OBJECTID x
 OBJECTID x
 OBJECTID self
 OBJECTID equal
 OBJECTID d
 COMPLEX
 BOOL
 OBJECTID if
 OBJECTID x
 OBJECTID d
 OBJECTID x_value
 OBJECTID then
 OBJECTID if
 OBJECTID y
 OBJECTID d
 OBJECTID y_value
 OBJECTID then
 OBJECTID true
 OBJECTID else
 OBJECTID false
 OBJECTID fi
 OBJECTID else
 OBJECTID false
 OBJECTID fi
 OBJECTID x_value
 INT
 OBJECTID x
 OBJECTID y_value
 INT
 OBJECTID y