Grammar:

Rule 0     S' -> Programa
Rule 1     Programa -> Clases
Rule 2     Clases -> Clase Clases
Rule 3     Clases -> Clase
Rule 4     Clase -> CLASS TYPEID SuperClassDeclaration error ;
Rule 5     Clase -> CLASS error ;
Rule 6     Clase -> CLASS TYPEID SuperClassDeclaration BlockCaracteristicas ;
Rule 7     BlockCaracteristicas -> { error }
Rule 8     BlockCaracteristicas -> { Caracteristicas error }
Rule 9     BlockCaracteristicas -> { Caracteristicas }
Rule 10    SuperClassDeclaration -> INHERITS TYPEID
Rule 11    SuperClassDeclaration -> <empty>
Rule 12    Caracteristicas -> Caracteristica Caracteristicas
Rule 13    Caracteristicas -> <empty>
Rule 14    Caracteristica -> Metodo
Rule 15    Caracteristica -> Atributo
Rule 16    Atributo -> OBJECTID : TYPEID ASSIGN error ;
Rule 17    Atributo -> OBJECTID : TYPEID error ;
Rule 18    Atributo -> OBJECTID : error ;
Rule 19    Atributo -> OBJECTID : TYPEID ASSIGN Expresion ;
Rule 20    Atributo -> OBJECTID : TYPEID
Rule 21    Atributo -> OBJECTID : TYPEID ;
Rule 22    Metodo -> OBJECTID ParFormales : TYPEID BlockExpresion ;
Rule 23    ParFormales -> ( error )
Rule 24    ParFormales -> ( Formales )
Rule 25    ParFormales -> ( )
Rule 26    BlockExpresion -> { }
Rule 27    BlockExpresion -> { error }
Rule 28    BlockExpresion -> { Expresion }
Rule 29    Formales -> Formal , Formales
Rule 30    Formales -> Formal
Rule 31    Formal -> OBJECTID : TYPEID
Rule 32    Expresion -> BOOL_CONST
Rule 33    Expresion -> STR_CONST
Rule 34    Expresion -> INT_CONST
Rule 35    Expresion -> OBJECTID
Rule 36    Expresion -> { error }
Rule 37    Expresion -> { Expresiones }
Rule 38    Expresion -> NEW TYPEID
Rule 39    Expresion -> CASE error OF RamasCase ESAC
Rule 40    Expresion -> CASE OF RamasCase ESAC
Rule 41    Expresion -> CASE Expresion OF RamasCase ESAC
Rule 42    Expresion -> LET Declaraciones IN Expresion  [precedence=left, level=3]
Rule 43    Expresion -> WHILE Expresion LOOP Expresion POOL
Rule 44    Expresion -> IF Expresion THEN Expresion ELSE Expresion FI
Rule 45    Expresion -> OBJECTID ParOptArgumentos
Rule 46    Expresion -> Expresion . OBJECTID ParOptArgumentos
Rule 47    Expresion -> Expresion @ TYPEID . OBJECTID ParOptArgumentos
Rule 48    Expresion -> ~ Expresion  [precedence=right, level=7]
Rule 49    Expresion -> ISVOID Expresion  [precedence=right, level=7]
Rule 50    Expresion -> NOT Expresion  [precedence=right, level=1]
Rule 51    Expresion -> ( Expresion )
Rule 52    Expresion -> Expresion = Expresion  [precedence=nonassoc, level=4]
Rule 53    Expresion -> Expresion LE Expresion  [precedence=nonassoc, level=4]
Rule 54    Expresion -> Expresion < Expresion  [precedence=nonassoc, level=4]
Rule 55    Expresion -> Expresion / Expresion  [precedence=left, level=6]
Rule 56    Expresion -> Expresion * Expresion  [precedence=left, level=6]
Rule 57    Expresion -> Expresion - Expresion  [precedence=left, level=5]
Rule 58    Expresion -> Expresion + Expresion  [precedence=left, level=5]
Rule 59    Expresion -> OBJECTID ASSIGN Expresion  [precedence=left, level=2]
Rule 60    ParOptArgumentos -> ( Argumentos error )
Rule 61    ParOptArgumentos -> ( error )
Rule 62    ParOptArgumentos -> ( OptArgumentos )
Rule 63    OptArgumentos -> Argumentos
Rule 64    OptArgumentos -> <empty>
Rule 65    Argumentos -> Expresion , Argumentos
Rule 66    Argumentos -> Expresion
Rule 67    Declaraciones -> error , Declaraciones
Rule 68    Declaraciones -> Declaracion , Declaraciones
Rule 69    Declaraciones -> Declaracion
Rule 70    Declaracion -> OBJECTID : TYPEID ASSIGN Expresion  [precedence=left, level=2]
Rule 71    Declaracion -> OBJECTID : TYPEID
Rule 72    RamasCase -> RamaCase RamasCase
Rule 73    RamasCase -> RamaCase
Rule 74    RamaCase -> OBJECTID : TYPEID DARROW Expresion ;
Rule 75    Expresiones -> error ; Expresiones
Rule 76    Expresiones -> error ;
Rule 77    Expresiones -> Expresion ; Expresiones
Rule 78    Expresiones -> Expresion ;

Terminals, with rules where they appear:

(                    : 23 24 25 51 60 61 62
)                    : 23 24 25 51 60 61 62
*                    : 56
+                    : 58
,                    : 29 65 67 68
-                    : 57
.                    : 46 47
/                    : 55
:                    : 16 17 18 19 20 21 22 31 70 71 74
;                    : 4 5 6 16 17 18 19 21 22 74 75 76 77 78
<                    : 54
=                    : 52
@                    : 47
ASSIGN               : 16 19 59 70
BOOL_CONST           : 32
CASE                 : 39 40 41
CLASS                : 4 5 6
DARROW               : 74
ELSE                 : 44
ESAC                 : 39 40 41
FI                   : 44
IF                   : 44
IN                   : 42
INHERITS             : 10
INT_CONST            : 34
ISVOID               : 49
LE                   : 53
LET                  : 42
LOOP                 : 43
NEW                  : 38
NOT                  : 50
OBJECTID             : 16 17 18 19 20 21 22 31 35 45 46 47 59 70 71 74
OF                   : 39 40 41
POOL                 : 43
STR_CONST            : 33
THEN                 : 44
TYPEID               : 4 6 10 16 17 19 20 21 22 31 38 47 70 71 74
WHILE                : 43
error                : 4 5 7 8 16 17 18 23 27 36 39 60 61 67 75 76
{                    : 7 8 9 26 27 28 36 37
}                    : 7 8 9 26 27 28 36 37
~                    : 48

Nonterminals, with rules where they appear:

Argumentos           : 60 63 65
Atributo             : 15
BlockCaracteristicas : 6
BlockExpresion       : 22
Caracteristica       : 12
Caracteristicas      : 8 9 12
Clase                : 2 3
Clases               : 1 2
Declaracion          : 68 69
Declaraciones        : 42 67 68
Expresion            : 19 28 41 42 43 43 44 44 44 46 47 48 49 50 51 52 52 53 53 54 54 55 55 56 56 57 57 58 58 59 65 66 70 74 77 78
Expresiones          : 37 75 77
Formal               : 29 30
Formales             : 24 29
Metodo               : 14
OptArgumentos        : 62
ParFormales          : 22
ParOptArgumentos     : 45 46 47
Programa             : 0
RamaCase             : 72 73
RamasCase            : 39 40 41 72
SuperClassDeclaration : 4 6


state 0

    (0) S' -> . Programa
    (1) Programa -> . Clases
    (2) Clases -> . Clase Clases
    (3) Clases -> . Clase
    (4) Clase -> . CLASS TYPEID SuperClassDeclaration error ;
    (5) Clase -> . CLASS error ;
    (6) Clase -> . CLASS TYPEID SuperClassDeclaration BlockCaracteristicas ;
    CLASS           shift and go to state 4

    Programa                       shift and go to state 1
    Clases                         shift and go to state 2
    Clase                          shift and go to state 3

state 1

    (0) S' -> Programa .


state 2

    (1) Programa -> Clases .
    $end            reduce using rule 1 (Programa -> Clases .)


state 3

    (2) Clases -> Clase . Clases
    (3) Clases -> Clase .
    (2) Clases -> . Clase Clases
    (3) Clases -> . Clase
    (4) Clase -> . CLASS TYPEID SuperClassDeclaration error ;
    (5) Clase -> . CLASS error ;
    (6) Clase -> . CLASS TYPEID SuperClassDeclaration BlockCaracteristicas ;
    $end            reduce using rule 3 (Clases -> Clase .)
    CLASS           shift and go to state 4

    Clase                          shift and go to state 3
    Clases                         shift and go to state 5

state 4

    (4) Clase -> CLASS . TYPEID SuperClassDeclaration error ;
    (5) Clase -> CLASS . error ;
    (6) Clase -> CLASS . TYPEID SuperClassDeclaration BlockCaracteristicas ;
    TYPEID          shift and go to state 6
    error           shift and go to state 7


state 5

    (2) Clases -> Clase Clases .
    $end            reduce using rule 2 (Clases -> Clase Clases .)


state 6

    (4) Clase -> CLASS TYPEID . SuperClassDeclaration error ;
    (6) Clase -> CLASS TYPEID . SuperClassDeclaration BlockCaracteristicas ;
    (10) SuperClassDeclaration -> . INHERITS TYPEID
    (11) SuperClassDeclaration -> .
    INHERITS        shift and go to state 9
    error           reduce using rule 11 (SuperClassDeclaration -> .)
    {               reduce using rule 11 (SuperClassDeclaration -> .)

    SuperClassDeclaration          shift and go to state 8

state 7

    (5) Clase -> CLASS error . ;
    ;               shift and go to state 10


state 8

    (4) Clase -> CLASS TYPEID SuperClassDeclaration . error ;
    (6) Clase -> CLASS TYPEID SuperClassDeclaration . BlockCaracteristicas ;
    (7) BlockCaracteristicas -> . { error }
    (8) BlockCaracteristicas -> . { Caracteristicas error }
    (9) BlockCaracteristicas -> . { Caracteristicas }
    error           shift and go to state 11
    {               shift and go to state 13

    BlockCaracteristicas           shift and go to state 12

state 9

    (10) SuperClassDeclaration -> INHERITS . TYPEID
    TYPEID          shift and go to state 14


state 10

    (5) Clase -> CLASS error ; .
    CLASS           reduce using rule 5 (Clase -> CLASS error ; .)
    $end            reduce using rule 5 (Clase -> CLASS error ; .)


state 11

    (4) Clase -> CLASS TYPEID SuperClassDeclaration error . ;
    ;               shift and go to state 15


state 12

    (6) Clase -> CLASS TYPEID SuperClassDeclaration BlockCaracteristicas . ;
    ;               shift and go to state 16


state 13

    (7) BlockCaracteristicas -> { . error }
    (8) BlockCaracteristicas -> { . Caracteristicas error }
    (9) BlockCaracteristicas -> { . Caracteristicas }
    (12) Caracteristicas -> . Caracteristica Caracteristicas
    (13) Caracteristicas -> .
    (14) Caracteristica -> . Metodo
    (15) Caracteristica -> . Atributo
    (22) Metodo -> . OBJECTID ParFormales : TYPEID BlockExpresion ;
    (16) Atributo -> . OBJECTID : TYPEID ASSIGN error ;
    (17) Atributo -> . OBJECTID : TYPEID error ;
    (18) Atributo -> . OBJECTID : error ;
    (19) Atributo -> . OBJECTID : TYPEID ASSIGN Expresion ;
    (20) Atributo -> . OBJECTID : TYPEID
    (21) Atributo -> . OBJECTID : TYPEID ;
  ! shift/reduce conflict for error resolved as shift
    error           shift and go to state 17
    }               reduce using rule 13 (Caracteristicas -> .)
    OBJECTID        shift and go to state 22

    Caracteristicas                shift and go to state 18
    Caracteristica                 shift and go to state 19
    Metodo                         shift and go to state 20
    Atributo                       shift and go to state 21

state 14

    (10) SuperClassDeclaration -> INHERITS TYPEID .
    error           reduce using rule 10 (SuperClassDeclaration -> INHERITS TYPEID .)
    {               reduce using rule 10 (SuperClassDeclaration -> INHERITS TYPEID .)


state 15

    (4) Clase -> CLASS TYPEID SuperClassDeclaration error ; .
    CLASS           reduce using rule 4 (Clase -> CLASS TYPEID SuperClassDeclaration error ; .)
    $end            reduce using rule 4 (Clase -> CLASS TYPEID SuperClassDeclaration error ; .)


state 16

    (6) Clase -> CLASS TYPEID SuperClassDeclaration BlockCaracteristicas ; .
    CLASS           reduce using rule 6 (Clase -> CLASS TYPEID SuperClassDeclaration BlockCaracteristicas ; .)
    $end            reduce using rule 6 (Clase -> CLASS TYPEID SuperClassDeclaration BlockCaracteristicas ; .)


state 17

    (7) BlockCaracteristicas -> { error . }
    }               shift and go to state 23


state 18

    (8) BlockCaracteristicas -> { Caracteristicas . error }
    (9) BlockCaracteristicas -> { Caracteristicas . }
    error           shift and go to state 24
    }               shift and go to state 25


state 19

    (12) Caracteristicas -> Caracteristica . Caracteristicas
    (12) Caracteristicas -> . Caracteristica Caracteristicas
    (13) Caracteristicas -> .
    (14) Caracteristica -> . Metodo
    (15) Caracteristica -> . Atributo
    (22) Metodo -> . OBJECTID ParFormales : TYPEID BlockExpresion ;
    (16) Atributo -> . OBJECTID : TYPEID ASSIGN error ;
    (17) Atributo -> . OBJECTID : TYPEID error ;
    (18) Atributo -> . OBJECTID : error ;
    (19) Atributo -> . OBJECTID : TYPEID ASSIGN Expresion ;
    (20) Atributo -> . OBJECTID : TYPEID
    (21) Atributo -> . OBJECTID : TYPEID ;
    error           reduce using rule 13 (Caracteristicas -> .)
    }               reduce using rule 13 (Caracteristicas -> .)
    OBJECTID        shift and go to state 22

    Caracteristica                 shift and go to state 19
    Caracteristicas                shift and go to state 26
    Metodo                         shift and go to state 20
    Atributo                       shift and go to state 21

state 20

    (14) Caracteristica -> Metodo .
    OBJECTID        reduce using rule 14 (Caracteristica -> Metodo .)
    error           reduce using rule 14 (Caracteristica -> Metodo .)
    }               reduce using rule 14 (Caracteristica -> Metodo .)


state 21

    (15) Caracteristica -> Atributo .
    OBJECTID        reduce using rule 15 (Caracteristica -> Atributo .)
    error           reduce using rule 15 (Caracteristica -> Atributo .)
    }               reduce using rule 15 (Caracteristica -> Atributo .)


state 22

    (22) Metodo -> OBJECTID . ParFormales : TYPEID BlockExpresion ;
    (16) Atributo -> OBJECTID . : TYPEID ASSIGN error ;
    (17) Atributo -> OBJECTID . : TYPEID error ;
    (18) Atributo -> OBJECTID . : error ;
    (19) Atributo -> OBJECTID . : TYPEID ASSIGN Expresion ;
    (20) Atributo -> OBJECTID . : TYPEID
    (21) Atributo -> OBJECTID . : TYPEID ;
    (23) ParFormales -> . ( error )
    (24) ParFormales -> . ( Formales )
    (25) ParFormales -> . ( )
    :               shift and go to state 28
    (               shift and go to state 29

    ParFormales                    shift and go to state 27

state 23

    (7) BlockCaracteristicas -> { error } .
    ;               reduce using rule 7 (BlockCaracteristicas -> { error } .)


state 24

    (8) BlockCaracteristicas -> { Caracteristicas error . }
    }               shift and go to state 30


state 25

    (9) BlockCaracteristicas -> { Caracteristicas } .
    ;               reduce using rule 9 (BlockCaracteristicas -> { Caracteristicas } .)


state 26

    (12) Caracteristicas -> Caracteristica Caracteristicas .
    error           reduce using rule 12 (Caracteristicas -> Caracteristica Caracteristicas .)
    }               reduce using rule 12 (Caracteristicas -> Caracteristica Caracteristicas .)


state 27

    (22) Metodo -> OBJECTID ParFormales . : TYPEID BlockExpresion ;
    :               shift and go to state 31


state 28

    (16) Atributo -> OBJECTID : . TYPEID ASSIGN error ;
    (17) Atributo -> OBJECTID : . TYPEID error ;
    (18) Atributo -> OBJECTID : . error ;
    (19) Atributo -> OBJECTID : . TYPEID ASSIGN Expresion ;
    (20) Atributo -> OBJECTID : . TYPEID
    (21) Atributo -> OBJECTID : . TYPEID ;
    TYPEID          shift and go to state 32
    error           shift and go to state 33


state 29

    (23) ParFormales -> ( . error )
    (24) ParFormales -> ( . Formales )
    (25) ParFormales -> ( . )
    (29) Formales -> . Formal , Formales
    (30) Formales -> . Formal
    (31) Formal -> . OBJECTID : TYPEID
    error           shift and go to state 34
    )               shift and go to state 35
    OBJECTID        shift and go to state 38

    Formales                       shift and go to state 36
    Formal                         shift and go to state 37

state 30

    (8) BlockCaracteristicas -> { Caracteristicas error } .
    ;               reduce using rule 8 (BlockCaracteristicas -> { Caracteristicas error } .)


state 31

    (22) Metodo -> OBJECTID ParFormales : . TYPEID BlockExpresion ;
    TYPEID          shift and go to state 39


state 32

    (16) Atributo -> OBJECTID : TYPEID . ASSIGN error ;
    (17) Atributo -> OBJECTID : TYPEID . error ;
    (19) Atributo -> OBJECTID : TYPEID . ASSIGN Expresion ;
    (20) Atributo -> OBJECTID : TYPEID .
    (21) Atributo -> OBJECTID : TYPEID . ;
  ! shift/reduce conflict for error resolved as shift
    ASSIGN          shift and go to state 40
    error           shift and go to state 41
    OBJECTID        reduce using rule 20 (Atributo -> OBJECTID : TYPEID .)
    }               reduce using rule 20 (Atributo -> OBJECTID : TYPEID .)
    ;               shift and go to state 42


state 33

    (18) Atributo -> OBJECTID : error . ;
    ;               shift and go to state 43


state 34

    (23) ParFormales -> ( error . )
    )               shift and go to state 44


state 35

    (25) ParFormales -> ( ) .
    :               reduce using rule 25 (ParFormales -> ( ) .)


state 36

    (24) ParFormales -> ( Formales . )
    )               shift and go to state 45


state 37

    (29) Formales -> Formal . , Formales
    (30) Formales -> Formal .
    ,               shift and go to state 46
    )               reduce using rule 30 (Formales -> Formal .)


state 38

    (31) Formal -> OBJECTID . : TYPEID
    :               shift and go to state 47


state 39

    (22) Metodo -> OBJECTID ParFormales : TYPEID . BlockExpresion ;
    (26) BlockExpresion -> . { }
    (27) BlockExpresion -> . { error }
    (28) BlockExpresion -> . { Expresion }
    {               shift and go to state 49

    BlockExpresion                 shift and go to state 48

state 40

    (16) Atributo -> OBJECTID : TYPEID ASSIGN . error ;
    (19) Atributo -> OBJECTID : TYPEID ASSIGN . Expresion ;
    (32) Expresion -> . BOOL_CONST
    (33) Expresion -> . STR_CONST
    (34) Expresion -> . INT_CONST
    (35) Expresion -> . OBJECTID
    (36) Expresion -> . { error }
    (37) Expresion -> . { Expresiones }
    (38) Expresion -> . NEW TYPEID
    (39) Expresion -> . CASE error OF RamasCase ESAC
    (40) Expresion -> . CASE OF RamasCase ESAC
    (41) Expresion -> . CASE Expresion OF RamasCase ESAC
    (42) Expresion -> . LET Declaraciones IN Expresion
    (43) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (44) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (45) Expresion -> . OBJECTID ParOptArgumentos
    (46) Expresion -> . Expresion . OBJECTID ParOptArgumentos
    (47) Expresion -> . Expresion @ TYPEID . OBJECTID ParOptArgumentos
    (48) Expresion -> . ~ Expresion
    (49) Expresion -> . ISVOID Expresion
    (50) Expresion -> . NOT Expresion
    (51) Expresion -> . ( Expresion )
    (52) Expresion -> . Expresion = Expresion
    (53) Expresion -> . Expresion LE Expresion
    (54) Expresion -> . Expresion < Expresion
    (55) Expresion -> . Expresion / Expresion
    (56) Expresion -> . Expresion * Expresion
    (57) Expresion -> . Expresion - Expresion
    (58) Expresion -> . Expresion + Expresion
    (59) Expresion -> . OBJECTID ASSIGN Expresion
    error           shift and go to state 51
    BOOL_CONST      shift and go to state 53
    STR_CONST       shift and go to state 54
    INT_CONST       shift and go to state 55
    OBJECTID        shift and go to state 50
    {               shift and go to state 56
    NEW             shift and go to state 57
    CASE            shift and go to state 58
    LET             shift and go to state 59
    WHILE           shift and go to state 60
    IF              shift and go to state 61
    ~               shift and go to state 62
    ISVOID          shift and go to state 63
    NOT             shift and go to state 64
    (               shift and go to state 65

    Expresion                      shift and go to state 52

state 41

    (17) Atributo -> OBJECTID : TYPEID error . ;
    ;               shift and go to state 66


state 42

    (21) Atributo -> OBJECTID : TYPEID ; .
    OBJECTID        reduce using rule 21 (Atributo -> OBJECTID : TYPEID ; .)
    error           reduce using rule 21 (Atributo -> OBJECTID : TYPEID ; .)
    }               reduce using rule 21 (Atributo -> OBJECTID : TYPEID ; .)


state 43

    (18) Atributo -> OBJECTID : error ; .
    OBJECTID        reduce using rule 18 (Atributo -> OBJECTID : error ; .)
    error           reduce using rule 18 (Atributo -> OBJECTID : error ; .)
    }               reduce using rule 18 (Atributo -> OBJECTID : error ; .)


state 44

    (23) ParFormales -> ( error ) .
    :               reduce using rule 23 (ParFormales -> ( error ) .)


state 45

    (24) ParFormales -> ( Formales ) .
    :               reduce using rule 24 (ParFormales -> ( Formales ) .)


state 46

    (29) Formales -> Formal , . Formales
    (29) Formales -> . Formal , Formales
    (30) Formales -> . Formal
    (31) Formal -> . OBJECTID : TYPEID
    OBJECTID        shift and go to state 38

    Formal                         shift and go to state 37
    Formales                       shift and go to state 67

state 47

    (31) Formal -> OBJECTID : . TYPEID
    TYPEID          shift and go to state 68


state 48

    (22) Metodo -> OBJECTID ParFormales : TYPEID BlockExpresion . ;
    ;               shift and go to state 69


state 49

    (26) BlockExpresion -> { . }
    (27) BlockExpresion -> { . error }
    (28) BlockExpresion -> { . Expresion }
    (32) Expresion -> . BOOL_CONST
    (33) Expresion -> . STR_CONST
    (34) Expresion -> . INT_CONST
    (35) Expresion -> . OBJECTID
    (36) Expresion -> . { error }
    (37) Expresion -> . { Expresiones }
    (38) Expresion -> . NEW TYPEID
    (39) Expresion -> . CASE error OF RamasCase ESAC
    (40) Expresion -> . CASE OF RamasCase ESAC
    (41) Expresion -> . CASE Expresion OF RamasCase ESAC
    (42) Expresion -> . LET Declaraciones IN Expresion
    (43) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (44) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (45) Expresion -> . OBJECTID ParOptArgumentos
    (46) Expresion -> . Expresion . OBJECTID ParOptArgumentos
    (47) Expresion -> . Expresion @ TYPEID . OBJECTID ParOptArgumentos
    (48) Expresion -> . ~ Expresion
    (49) Expresion -> . ISVOID Expresion
    (50) Expresion -> . NOT Expresion
    (51) Expresion -> . ( Expresion )
    (52) Expresion -> . Expresion = Expresion
    (53) Expresion -> . Expresion LE Expresion
    (54) Expresion -> . Expresion < Expresion
    (55) Expresion -> . Expresion / Expresion
    (56) Expresion -> . Expresion * Expresion
    (57) Expresion -> . Expresion - Expresion
    (58) Expresion -> . Expresion + Expresion
    (59) Expresion -> . OBJECTID ASSIGN Expresion
    }               shift and go to state 70
    error           shift and go to state 71
    BOOL_CONST      shift and go to state 53
    STR_CONST       shift and go to state 54
    INT_CONST       shift and go to state 55
    OBJECTID        shift and go to state 50
    {               shift and go to state 56
    NEW             shift and go to state 57
    CASE            shift and go to state 58
    LET             shift and go to state 59
    WHILE           shift and go to state 60
    IF              shift and go to state 61
    ~               shift and go to state 62
    ISVOID          shift and go to state 63
    NOT             shift and go to state 64
    (               shift and go to state 65

    Expresion                      shift and go to state 72

state 50

    (35) Expresion -> OBJECTID .
    (45) Expresion -> OBJECTID . ParOptArgumentos
    (59) Expresion -> OBJECTID . ASSIGN Expresion
    (60) ParOptArgumentos -> . ( Argumentos error )
    (61) ParOptArgumentos -> . ( error )
    (62) ParOptArgumentos -> . ( OptArgumentos )
    ;               reduce using rule 35 (Expresion -> OBJECTID .)
    .               reduce using rule 35 (Expresion -> OBJECTID .)
    @               reduce using rule 35 (Expresion -> OBJECTID .)
    =               reduce using rule 35 (Expresion -> OBJECTID .)
    LE              reduce using rule 35 (Expresion -> OBJECTID .)
    <               reduce using rule 35 (Expresion -> OBJECTID .)
    /               reduce using rule 35 (Expresion -> OBJECTID .)
    *               reduce using rule 35 (Expresion -> OBJECTID .)
    -               reduce using rule 35 (Expresion -> OBJECTID .)
    +               reduce using rule 35 (Expresion -> OBJECTID .)
    }               reduce using rule 35 (Expresion -> OBJECTID .)
    OF              reduce using rule 35 (Expresion -> OBJECTID .)
    LOOP            reduce using rule 35 (Expresion -> OBJECTID .)
    THEN            reduce using rule 35 (Expresion -> OBJECTID .)
    )               reduce using rule 35 (Expresion -> OBJECTID .)
    ,               reduce using rule 35 (Expresion -> OBJECTID .)
    error           reduce using rule 35 (Expresion -> OBJECTID .)
    POOL            reduce using rule 35 (Expresion -> OBJECTID .)
    ELSE            reduce using rule 35 (Expresion -> OBJECTID .)
    IN              reduce using rule 35 (Expresion -> OBJECTID .)
    FI              reduce using rule 35 (Expresion -> OBJECTID .)
    ASSIGN          shift and go to state 74
    (               shift and go to state 75

    ParOptArgumentos               shift and go to state 73

state 51

    (16) Atributo -> OBJECTID : TYPEID ASSIGN error . ;
    ;               shift and go to state 76


state 52

    (19) Atributo -> OBJECTID : TYPEID ASSIGN Expresion . ;
    (46) Expresion -> Expresion . . OBJECTID ParOptArgumentos
    (47) Expresion -> Expresion . @ TYPEID . OBJECTID ParOptArgumentos
    (52) Expresion -> Expresion . = Expresion
    (53) Expresion -> Expresion . LE Expresion
    (54) Expresion -> Expresion . < Expresion
    (55) Expresion -> Expresion . / Expresion
    (56) Expresion -> Expresion . * Expresion
    (57) Expresion -> Expresion . - Expresion
    (58) Expresion -> Expresion . + Expresion
    ;               shift and go to state 77
    .               shift and go to state 78
    @               shift and go to state 79
    =               shift and go to state 80
    LE              shift and go to state 81
    <               shift and go to state 82
    /               shift and go to state 83
    *               shift and go to state 84
    -               shift and go to state 85
    +               shift and go to state 86


state 53

    (32) Expresion -> BOOL_CONST .
    ;               reduce using rule 32 (Expresion -> BOOL_CONST .)
    .               reduce using rule 32 (Expresion -> BOOL_CONST .)
    @               reduce using rule 32 (Expresion -> BOOL_CONST .)
    =               reduce using rule 32 (Expresion -> BOOL_CONST .)
    LE              reduce using rule 32 (Expresion -> BOOL_CONST .)
    <               reduce using rule 32 (Expresion -> BOOL_CONST .)
    /               reduce using rule 32 (Expresion -> BOOL_CONST .)
    *               reduce using rule 32 (Expresion -> BOOL_CONST .)
    -               reduce using rule 32 (Expresion -> BOOL_CONST .)
    +               reduce using rule 32 (Expresion -> BOOL_CONST .)
    }               reduce using rule 32 (Expresion -> BOOL_CONST .)
    OF              reduce using rule 32 (Expresion -> BOOL_CONST .)
    LOOP            reduce using rule 32 (Expresion -> BOOL_CONST .)
    THEN            reduce using rule 32 (Expresion -> BOOL_CONST .)
    )               reduce using rule 32 (Expresion -> BOOL_CONST .)
    ,               reduce using rule 32 (Expresion -> BOOL_CONST .)
    error           reduce using rule 32 (Expresion -> BOOL_CONST .)
    POOL            reduce using rule 32 (Expresion -> BOOL_CONST .)
    ELSE            reduce using rule 32 (Expresion -> BOOL_CONST .)
    IN              reduce using rule 32 (Expresion -> BOOL_CONST .)
    FI              reduce using rule 32 (Expresion -> BOOL_CONST .)


state 54

    (33) Expresion -> STR_CONST .
    ;               reduce using rule 33 (Expresion -> STR_CONST .)
    .               reduce using rule 33 (Expresion -> STR_CONST .)
    @               reduce using rule 33 (Expresion -> STR_CONST .)
    =               reduce using rule 33 (Expresion -> STR_CONST .)
    LE              reduce using rule 33 (Expresion -> STR_CONST .)
    <               reduce using rule 33 (Expresion -> STR_CONST .)
    /               reduce using rule 33 (Expresion -> STR_CONST .)
    *               reduce using rule 33 (Expresion -> STR_CONST .)
    -               reduce using rule 33 (Expresion -> STR_CONST .)
    +               reduce using rule 33 (Expresion -> STR_CONST .)
    }               reduce using rule 33 (Expresion -> STR_CONST .)
    OF              reduce using rule 33 (Expresion -> STR_CONST .)
    LOOP            reduce using rule 33 (Expresion -> STR_CONST .)
    THEN            reduce using rule 33 (Expresion -> STR_CONST .)
    )               reduce using rule 33 (Expresion -> STR_CONST .)
    ,               reduce using rule 33 (Expresion -> STR_CONST .)
    error           reduce using rule 33 (Expresion -> STR_CONST .)
    POOL            reduce using rule 33 (Expresion -> STR_CONST .)
    ELSE            reduce using rule 33 (Expresion -> STR_CONST .)
    IN              reduce using rule 33 (Expresion -> STR_CONST .)
    FI              reduce using rule 33 (Expresion -> STR_CONST .)


state 55

    (34) Expresion -> INT_CONST .
    ;               reduce using rule 34 (Expresion -> INT_CONST .)
    .               reduce using rule 34 (Expresion -> INT_CONST .)
    @               reduce using rule 34 (Expresion -> INT_CONST .)
    =               reduce using rule 34 (Expresion -> INT_CONST .)
    LE              reduce using rule 34 (Expresion -> INT_CONST .)
    <               reduce using rule 34 (Expresion -> INT_CONST .)
    /               reduce using rule 34 (Expresion -> INT_CONST .)
    *               reduce using rule 34 (Expresion -> INT_CONST .)
    -               reduce using rule 34 (Expresion -> INT_CONST .)
    +               reduce using rule 34 (Expresion -> INT_CONST .)
    }               reduce using rule 34 (Expresion -> INT_CONST .)
    OF              reduce using rule 34 (Expresion -> INT_CONST .)
    LOOP            reduce using rule 34 (Expresion -> INT_CONST .)
    THEN            reduce using rule 34 (Expresion -> INT_CONST .)
    )               reduce using rule 34 (Expresion -> INT_CONST .)
    ,               reduce using rule 34 (Expresion -> INT_CONST .)
    error           reduce using rule 34 (Expresion -> INT_CONST .)
    POOL            reduce using rule 34 (Expresion -> INT_CONST .)
    ELSE            reduce using rule 34 (Expresion -> INT_CONST .)
    IN              reduce using rule 34 (Expresion -> INT_CONST .)
    FI              reduce using rule 34 (Expresion -> INT_CONST .)


state 56

    (36) Expresion -> { . error }
    (37) Expresion -> { . Expresiones }
    (75) Expresiones -> . error ; Expresiones
    (76) Expresiones -> . error ;
    (77) Expresiones -> . Expresion ; Expresiones
    (78) Expresiones -> . Expresion ;
    (32) Expresion -> . BOOL_CONST
    (33) Expresion -> . STR_CONST
    (34) Expresion -> . INT_CONST
    (35) Expresion -> . OBJECTID
    (36) Expresion -> . { error }
    (37) Expresion -> . { Expresiones }
    (38) Expresion -> . NEW TYPEID
    (39) Expresion -> . CASE error OF RamasCase ESAC
    (40) Expresion -> . CASE OF RamasCase ESAC
    (41) Expresion -> . CASE Expresion OF RamasCase ESAC
    (42) Expresion -> . LET Declaraciones IN Expresion
    (43) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (44) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (45) Expresion -> . OBJECTID ParOptArgumentos
    (46) Expresion -> . Expresion . OBJECTID ParOptArgumentos
    (47) Expresion -> . Expresion @ TYPEID . OBJECTID ParOptArgumentos
    (48) Expresion -> . ~ Expresion
    (49) Expresion -> . ISVOID Expresion
    (50) Expresion -> . NOT Expresion
    (51) Expresion -> . ( Expresion )
    (52) Expresion -> . Expresion = Expresion
    (53) Expresion -> . Expresion LE Expresion
    (54) Expresion -> . Expresion < Expresion
    (55) Expresion -> . Expresion / Expresion
    (56) Expresion -> . Expresion * Expresion
    (57) Expresion -> . Expresion - Expresion
    (58) Expresion -> . Expresion + Expresion
    (59) Expresion -> . OBJECTID ASSIGN Expresion
    error           shift and go to state 87
    BOOL_CONST      shift and go to state 53
    STR_CONST       shift and go to state 54
    INT_CONST       shift and go to state 55
    OBJECTID        shift and go to state 50
    {               shift and go to state 56
    NEW             shift and go to state 57
    CASE            shift and go to state 58
    LET             shift and go to state 59
    WHILE           shift and go to state 60
    IF              shift and go to state 61
    ~               shift and go to state 62
    ISVOID          shift and go to state 63
    NOT             shift and go to state 64
    (               shift and go to state 65

    Expresiones                    shift and go to state 88
    Expresion                      shift and go to state 89

state 57

    (38) Expresion -> NEW . TYPEID
    TYPEID          shift and go to state 90


state 58

    (39) Expresion -> CASE . error OF RamasCase ESAC
    (40) Expresion -> CASE . OF RamasCase ESAC
    (41) Expresion -> CASE . Expresion OF RamasCase ESAC
    (32) Expresion -> . BOOL_CONST
    (33) Expresion -> . STR_CONST
    (34) Expresion -> . INT_CONST
    (35) Expresion -> . OBJECTID
    (36) Expresion -> . { error }
    (37) Expresion -> . { Expresiones }
    (38) Expresion -> . NEW TYPEID
    (39) Expresion -> . CASE error OF RamasCase ESAC
    (40) Expresion -> . CASE OF RamasCase ESAC
    (41) Expresion -> . CASE Expresion OF RamasCase ESAC
    (42) Expresion -> . LET Declaraciones IN Expresion
    (43) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (44) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (45) Expresion -> . OBJECTID ParOptArgumentos
    (46) Expresion -> . Expresion . OBJECTID ParOptArgumentos
    (47) Expresion -> . Expresion @ TYPEID . OBJECTID ParOptArgumentos
    (48) Expresion -> . ~ Expresion
    (49) Expresion -> . ISVOID Expresion
    (50) Expresion -> . NOT Expresion
    (51) Expresion -> . ( Expresion )
    (52) Expresion -> . Expresion = Expresion
    (53) Expresion -> . Expresion LE Expresion
    (54) Expresion -> . Expresion < Expresion
    (55) Expresion -> . Expresion / Expresion
    (56) Expresion -> . Expresion * Expresion
    (57) Expresion -> . Expresion - Expresion
    (58) Expresion -> . Expresion + Expresion
    (59) Expresion -> . OBJECTID ASSIGN Expresion
    error           shift and go to state 91
    OF              shift and go to state 92
    BOOL_CONST      shift and go to state 53
    STR_CONST       shift and go to state 54
    INT_CONST       shift and go to state 55
    OBJECTID        shift and go to state 50
    {               shift and go to state 56
    NEW             shift and go to state 57
    CASE            shift and go to state 58
    LET             shift and go to state 59
    WHILE           shift and go to state 60
    IF              shift and go to state 61
    ~               shift and go to state 62
    ISVOID          shift and go to state 63
    NOT             shift and go to state 64
    (               shift and go to state 65

    Expresion                      shift and go to state 93

state 59

    (42) Expresion -> LET . Declaraciones IN Expresion
    (67) Declaraciones -> . error , Declaraciones
    (68) Declaraciones -> . Declaracion , Declaraciones
    (69) Declaraciones -> . Declaracion
    (70) Declaracion -> . OBJECTID : TYPEID ASSIGN Expresion
    (71) Declaracion -> . OBJECTID : TYPEID
    error           shift and go to state 95
    OBJECTID        shift and go to state 97

    Declaraciones                  shift and go to state 94
    Declaracion                    shift and go to state 96

state 60

    (43) Expresion -> WHILE . Expresion LOOP Expresion POOL
    (32) Expresion -> . BOOL_CONST
    (33) Expresion -> . STR_CONST
    (34) Expresion -> . INT_CONST
    (35) Expresion -> . OBJECTID
    (36) Expresion -> . { error }
    (37) Expresion -> . { Expresiones }
    (38) Expresion -> . NEW TYPEID
    (39) Expresion -> . CASE error OF RamasCase ESAC
    (40) Expresion -> . CASE OF RamasCase ESAC
    (41) Expresion -> . CASE Expresion OF RamasCase ESAC
    (42) Expresion -> . LET Declaraciones IN Expresion
    (43) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (44) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (45) Expresion -> . OBJECTID ParOptArgumentos
    (46) Expresion -> . Expresion . OBJECTID ParOptArgumentos
    (47) Expresion -> . Expresion @ TYPEID . OBJECTID ParOptArgumentos
    (48) Expresion -> . ~ Expresion
    (49) Expresion -> . ISVOID Expresion
    (50) Expresion -> . NOT Expresion
    (51) Expresion -> . ( Expresion )
    (52) Expresion -> . Expresion = Expresion
    (53) Expresion -> . Expresion LE Expresion
    (54) Expresion -> . Expresion < Expresion
    (55) Expresion -> . Expresion / Expresion
    (56) Expresion -> . Expresion * Expresion
    (57) Expresion -> . Expresion - Expresion
    (58) Expresion -> . Expresion + Expresion
    (59) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 53
    STR_CONST       shift and go to state 54
    INT_CONST       shift and go to state 55
    OBJECTID        shift and go to state 50
    {               shift and go to state 56
    NEW             shift and go to state 57
    CASE            shift and go to state 58
    LET             shift and go to state 59
    WHILE           shift and go to state 60
    IF              shift and go to state 61
    ~               shift and go to state 62
    ISVOID          shift and go to state 63
    NOT             shift and go to state 64
    (               shift and go to state 65

    Expresion                      shift and go to state 98

state 61

    (44) Expresion -> IF . Expresion THEN Expresion ELSE Expresion FI
    (32) Expresion -> . BOOL_CONST
    (33) Expresion -> . STR_CONST
    (34) Expresion -> . INT_CONST
    (35) Expresion -> . OBJECTID
    (36) Expresion -> . { error }
    (37) Expresion -> . { Expresiones }
    (38) Expresion -> . NEW TYPEID
    (39) Expresion -> . CASE error OF RamasCase ESAC
    (40) Expresion -> . CASE OF RamasCase ESAC
    (41) Expresion -> . CASE Expresion OF RamasCase ESAC
    (42) Expresion -> . LET Declaraciones IN Expresion
    (43) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (44) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (45) Expresion -> . OBJECTID ParOptArgumentos
    (46) Expresion -> . Expresion . OBJECTID ParOptArgumentos
    (47) Expresion -> . Expresion @ TYPEID . OBJECTID ParOptArgumentos
    (48) Expresion -> . ~ Expresion
    (49) Expresion -> . ISVOID Expresion
    (50) Expresion -> . NOT Expresion
    (51) Expresion -> . ( Expresion )
    (52) Expresion -> . Expresion = Expresion
    (53) Expresion -> . Expresion LE Expresion
    (54) Expresion -> . Expresion < Expresion
    (55) Expresion -> . Expresion / Expresion
    (56) Expresion -> . Expresion * Expresion
    (57) Expresion -> . Expresion - Expresion
    (58) Expresion -> . Expresion + Expresion
    (59) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 53
    STR_CONST       shift and go to state 54
    INT_CONST       shift and go to state 55
    OBJECTID        shift and go to state 50
    {               shift and go to state 56
    NEW             shift and go to state 57
    CASE            shift and go to state 58
    LET             shift and go to state 59
    WHILE           shift and go to state 60
    IF              shift and go to state 61
    ~               shift and go to state 62
    ISVOID          shift and go to state 63
    NOT             shift and go to state 64
    (               shift and go to state 65

    Expresion                      shift and go to state 99

state 62

    (48) Expresion -> ~ . Expresion
    (32) Expresion -> . BOOL_CONST
    (33) Expresion -> . STR_CONST
    (34) Expresion -> . INT_CONST
    (35) Expresion -> . OBJECTID
    (36) Expresion -> . { error }
    (37) Expresion -> . { Expresiones }
    (38) Expresion -> . NEW TYPEID
    (39) Expresion -> . CASE error OF RamasCase ESAC
    (40) Expresion -> . CASE OF RamasCase ESAC
    (41) Expresion -> . CASE Expresion OF RamasCase ESAC
    (42) Expresion -> . LET Declaraciones IN Expresion
    (43) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (44) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (45) Expresion -> . OBJECTID ParOptArgumentos
    (46) Expresion -> . Expresion . OBJECTID ParOptArgumentos
    (47) Expresion -> . Expresion @ TYPEID . OBJECTID ParOptArgumentos
    (48) Expresion -> . ~ Expresion
    (49) Expresion -> . ISVOID Expresion
    (50) Expresion -> . NOT Expresion
    (51) Expresion -> . ( Expresion )
    (52) Expresion -> . Expresion = Expresion
    (53) Expresion -> . Expresion LE Expresion
    (54) Expresion -> . Expresion < Expresion
    (55) Expresion -> . Expresion / Expresion
    (56) Expresion -> . Expresion * Expresion
    (57) Expresion -> . Expresion - Expresion
    (58) Expresion -> . Expresion + Expresion
    (59) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 53
    STR_CONST       shift and go to state 54
    INT_CONST       shift and go to state 55
    OBJECTID        shift and go to state 50
    {               shift and go to state 56
    NEW             shift and go to state 57
    CASE            shift and go to state 58
    LET             shift and go to state 59
    WHILE           shift and go to state 60
    IF              shift and go to state 61
    ~               shift and go to state 62
    ISVOID          shift and go to state 63
    NOT             shift and go to state 64
    (               shift and go to state 65

    Expresion                      shift and go to state 100

state 63

    (49) Expresion -> ISVOID . Expresion
    (32) Expresion -> . BOOL_CONST
    (33) Expresion -> . STR_CONST
    (34) Expresion -> . INT_CONST
    (35) Expresion -> . OBJECTID
    (36) Expresion -> . { error }
    (37) Expresion -> . { Expresiones }
    (38) Expresion -> . NEW TYPEID
    (39) Expresion -> . CASE error OF RamasCase ESAC
    (40) Expresion -> . CASE OF RamasCase ESAC
    (41) Expresion -> . CASE Expresion OF RamasCase ESAC
    (42) Expresion -> . LET Declaraciones IN Expresion
    (43) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (44) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (45) Expresion -> . OBJECTID ParOptArgumentos
    (46) Expresion -> . Expresion . OBJECTID ParOptArgumentos
    (47) Expresion -> . Expresion @ TYPEID . OBJECTID ParOptArgumentos
    (48) Expresion -> . ~ Expresion
    (49) Expresion -> . ISVOID Expresion
    (50) Expresion -> . NOT Expresion
    (51) Expresion -> . ( Expresion )
    (52) Expresion -> . Expresion = Expresion
    (53) Expresion -> . Expresion LE Expresion
    (54) Expresion -> . Expresion < Expresion
    (55) Expresion -> . Expresion / Expresion
    (56) Expresion -> . Expresion * Expresion
    (57) Expresion -> . Expresion - Expresion
    (58) Expresion -> . Expresion + Expresion
    (59) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 53
    STR_CONST       shift and go to state 54
    INT_CONST       shift and go to state 55
    OBJECTID        shift and go to state 50
    {               shift and go to state 56
    NEW             shift and go to state 57
    CASE            shift and go to state 58
    LET             shift and go to state 59
    WHILE           shift and go to state 60
    IF              shift and go to state 61
    ~               shift and go to state 62
    ISVOID          shift and go to state 63
    NOT             shift and go to state 64
    (               shift and go to state 65

    Expresion                      shift and go to state 101

state 64

    (50) Expresion -> NOT . Expresion
    (32) Expresion -> . BOOL_CONST
    (33) Expresion -> . STR_CONST
    (34) Expresion -> . INT_CONST
    (35) Expresion -> . OBJECTID
    (36) Expresion -> . { error }
    (37) Expresion -> . { Expresiones }
    (38) Expresion -> . NEW TYPEID
    (39) Expresion -> . CASE error OF RamasCase ESAC
    (40) Expresion -> . CASE OF RamasCase ESAC
    (41) Expresion -> . CASE Expresion OF RamasCase ESAC
    (42) Expresion -> . LET Declaraciones IN Expresion
    (43) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (44) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (45) Expresion -> . OBJECTID ParOptArgumentos
    (46) Expresion -> . Expresion . OBJECTID ParOptArgumentos
    (47) Expresion -> . Expresion @ TYPEID . OBJECTID ParOptArgumentos
    (48) Expresion -> . ~ Expresion
    (49) Expresion -> . ISVOID Expresion
    (50) Expresion -> . NOT Expresion
    (51) Expresion -> . ( Expresion )
    (52) Expresion -> . Expresion = Expresion
    (53) Expresion -> . Expresion LE Expresion
    (54) Expresion -> . Expresion < Expresion
    (55) Expresion -> . Expresion / Expresion
    (56) Expresion -> . Expresion * Expresion
    (57) Expresion -> . Expresion - Expresion
    (58) Expresion -> . Expresion + Expresion
    (59) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 53
    STR_CONST       shift and go to state 54
    INT_CONST       shift and go to state 55
    OBJECTID        shift and go to state 50
    {               shift and go to state 56
    NEW             shift and go to state 57
    CASE            shift and go to state 58
    LET             shift and go to state 59
    WHILE           shift and go to state 60
    IF              shift and go to state 61
    ~               shift and go to state 62
    ISVOID          shift and go to state 63
    NOT             shift and go to state 64
    (               shift and go to state 65

    Expresion                      shift and go to state 102

state 65

    (51) Expresion -> ( . Expresion )
    (32) Expresion -> . BOOL_CONST
    (33) Expresion -> . STR_CONST
    (34) Expresion -> . INT_CONST
    (35) Expresion -> . OBJECTID
    (36) Expresion -> . { error }
    (37) Expresion -> . { Expresiones }
    (38) Expresion -> . NEW TYPEID
    (39) Expresion -> . CASE error OF RamasCase ESAC
    (40) Expresion -> . CASE OF RamasCase ESAC
    (41) Expresion -> . CASE Expresion OF RamasCase ESAC
    (42) Expresion -> . LET Declaraciones IN Expresion
    (43) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (44) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (45) Expresion -> . OBJECTID ParOptArgumentos
    (46) Expresion -> . Expresion . OBJECTID ParOptArgumentos
    (47) Expresion -> . Expresion @ TYPEID . OBJECTID ParOptArgumentos
    (48) Expresion -> . ~ Expresion
    (49) Expresion -> . ISVOID Expresion
    (50) Expresion -> . NOT Expresion
    (51) Expresion -> . ( Expresion )
    (52) Expresion -> . Expresion = Expresion
    (53) Expresion -> . Expresion LE Expresion
    (54) Expresion -> . Expresion < Expresion
    (55) Expresion -> . Expresion / Expresion
    (56) Expresion -> . Expresion * Expresion
    (57) Expresion -> . Expresion - Expresion
    (58) Expresion -> . Expresion + Expresion
    (59) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 53
    STR_CONST       shift and go to state 54
    INT_CONST       shift and go to state 55
    OBJECTID        shift and go to state 50
    {               shift and go to state 56
    NEW             shift and go to state 57
    CASE            shift and go to state 58
    LET             shift and go to state 59
    WHILE           shift and go to state 60
    IF              shift and go to state 61
    ~               shift and go to state 62
    ISVOID          shift and go to state 63
    NOT             shift and go to state 64
    (               shift and go to state 65

    Expresion                      shift and go to state 103

state 66

    (17) Atributo -> OBJECTID : TYPEID error ; .
    OBJECTID        reduce using rule 17 (Atributo -> OBJECTID : TYPEID error ; .)
    error           reduce using rule 17 (Atributo -> OBJECTID : TYPEID error ; .)
    }               reduce using rule 17 (Atributo -> OBJECTID : TYPEID error ; .)


state 67

    (29) Formales -> Formal , Formales .
    )               reduce using rule 29 (Formales -> Formal , Formales .)


state 68

    (31) Formal -> OBJECTID : TYPEID .
    ,               reduce using rule 31 (Formal -> OBJECTID : TYPEID .)
    )               reduce using rule 31 (Formal -> OBJECTID : TYPEID .)


state 69

    (22) Metodo -> OBJECTID ParFormales : TYPEID BlockExpresion ; .
    OBJECTID        reduce using rule 22 (Metodo -> OBJECTID ParFormales : TYPEID BlockExpresion ; .)
    error           reduce using rule 22 (Metodo -> OBJECTID ParFormales : TYPEID BlockExpresion ; .)
    }               reduce using rule 22 (Metodo -> OBJECTID ParFormales : TYPEID BlockExpresion ; .)


state 70

    (26) BlockExpresion -> { } .
    ;               reduce using rule 26 (BlockExpresion -> { } .)


state 71

    (27) BlockExpresion -> { error . }
    }               shift and go to state 104


state 72

    (28) BlockExpresion -> { Expresion . }
    (46) Expresion -> Expresion . . OBJECTID ParOptArgumentos
    (47) Expresion -> Expresion . @ TYPEID . OBJECTID ParOptArgumentos
    (52) Expresion -> Expresion . = Expresion
    (53) Expresion -> Expresion . LE Expresion
    (54) Expresion -> Expresion . < Expresion
    (55) Expresion -> Expresion . / Expresion
    (56) Expresion -> Expresion . * Expresion
    (57) Expresion -> Expresion . - Expresion
    (58) Expresion -> Expresion . + Expresion
    }               shift and go to state 105
    .               shift and go to state 78
    @               shift and go to state 79
    =               shift and go to state 80
    LE              shift and go to state 81
    <               shift and go to state 82
    /               shift and go to state 83
    *               shift and go to state 84
    -               shift and go to state 85
    +               shift and go to state 86


state 73

    (45) Expresion -> OBJECTID ParOptArgumentos .
    ;               reduce using rule 45 (Expresion -> OBJECTID ParOptArgumentos .)
    .               reduce using rule 45 (Expresion -> OBJECTID ParOptArgumentos .)
    @               reduce using rule 45 (Expresion -> OBJECTID ParOptArgumentos .)
    =               reduce using rule 45 (Expresion -> OBJECTID ParOptArgumentos .)
    LE              reduce using rule 45 (Expresion -> OBJECTID ParOptArgumentos .)
    <               reduce using rule 45 (Expresion -> OBJECTID ParOptArgumentos .)
    /               reduce using rule 45 (Expresion -> OBJECTID ParOptArgumentos .)
    *               reduce using rule 45 (Expresion -> OBJECTID ParOptArgumentos .)
    -               reduce using rule 45 (Expresion -> OBJECTID ParOptArgumentos .)
    +               reduce using rule 45 (Expresion -> OBJECTID ParOptArgumentos .)
    }               reduce using rule 45 (Expresion -> OBJECTID ParOptArgumentos .)
    OF              reduce using rule 45 (Expresion -> OBJECTID ParOptArgumentos .)
    LOOP            reduce using rule 45 (Expresion -> OBJECTID ParOptArgumentos .)
    THEN            reduce using rule 45 (Expresion -> OBJECTID ParOptArgumentos .)
    )               reduce using rule 45 (Expresion -> OBJECTID ParOptArgumentos .)
    ,               reduce using rule 45 (Expresion -> OBJECTID ParOptArgumentos .)
    error           reduce using rule 45 (Expresion -> OBJECTID ParOptArgumentos .)
    POOL            reduce using rule 45 (Expresion -> OBJECTID ParOptArgumentos .)
    ELSE            reduce using rule 45 (Expresion -> OBJECTID ParOptArgumentos .)
    IN              reduce using rule 45 (Expresion -> OBJECTID ParOptArgumentos .)
    FI              reduce using rule 45 (Expresion -> OBJECTID ParOptArgumentos .)


state 74

    (59) Expresion -> OBJECTID ASSIGN . Expresion
    (32) Expresion -> . BOOL_CONST
    (33) Expresion -> . STR_CONST
    (34) Expresion -> . INT_CONST
    (35) Expresion -> . OBJECTID
    (36) Expresion -> . { error }
    (37) Expresion -> . { Expresiones }
    (38) Expresion -> . NEW TYPEID
    (39) Expresion -> . CASE error OF RamasCase ESAC
    (40) Expresion -> . CASE OF RamasCase ESAC
    (41) Expresion -> . CASE Expresion OF RamasCase ESAC
    (42) Expresion -> . LET Declaraciones IN Expresion
    (43) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (44) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (45) Expresion -> . OBJECTID ParOptArgumentos
    (46) Expresion -> . Expresion . OBJECTID ParOptArgumentos
    (47) Expresion -> . Expresion @ TYPEID . OBJECTID ParOptArgumentos
    (48) Expresion -> . ~ Expresion
    (49) Expresion -> . ISVOID Expresion
    (50) Expresion -> . NOT Expresion
    (51) Expresion -> . ( Expresion )
    (52) Expresion -> . Expresion = Expresion
    (53) Expresion -> . Expresion LE Expresion
    (54) Expresion -> . Expresion < Expresion
    (55) Expresion -> . Expresion / Expresion
    (56) Expresion -> . Expresion * Expresion
    (57) Expresion -> . Expresion - Expresion
    (58) Expresion -> . Expresion + Expresion
    (59) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 53
    STR_CONST       shift and go to state 54
    INT_CONST       shift and go to state 55
    OBJECTID        shift and go to state 50
    {               shift and go to state 56
    NEW             shift and go to state 57
    CASE            shift and go to state 58
    LET             shift and go to state 59
    WHILE           shift and go to state 60
    IF              shift and go to state 61
    ~               shift and go to state 62
    ISVOID          shift and go to state 63
    NOT             shift and go to state 64
    (               shift and go to state 65

    Expresion                      shift and go to state 106

state 75

    (60) ParOptArgumentos -> ( . Argumentos error )
    (61) ParOptArgumentos -> ( . error )
    (62) ParOptArgumentos -> ( . OptArgumentos )
    (65) Argumentos -> . Expresion , Argumentos
    (66) Argumentos -> . Expresion
    (63) OptArgumentos -> . Argumentos
    (64) OptArgumentos -> .
    (32) Expresion -> . BOOL_CONST
    (33) Expresion -> . STR_CONST
    (34) Expresion -> . INT_CONST
    (35) Expresion -> . OBJECTID
    (36) Expresion -> . { error }
    (37) Expresion -> . { Expresiones }
    (38) Expresion -> . NEW TYPEID
    (39) Expresion -> . CASE error OF RamasCase ESAC
    (40) Expresion -> . CASE OF RamasCase ESAC
    (41) Expresion -> . CASE Expresion OF RamasCase ESAC
    (42) Expresion -> . LET Declaraciones IN Expresion
    (43) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (44) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (45) Expresion -> . OBJECTID ParOptArgumentos
    (46) Expresion -> . Expresion . OBJECTID ParOptArgumentos
    (47) Expresion -> . Expresion @ TYPEID . OBJECTID ParOptArgumentos
    (48) Expresion -> . ~ Expresion
    (49) Expresion -> . ISVOID Expresion
    (50) Expresion -> . NOT Expresion
    (51) Expresion -> . ( Expresion )
    (52) Expresion -> . Expresion = Expresion
    (53) Expresion -> . Expresion LE Expresion
    (54) Expresion -> . Expresion < Expresion
    (55) Expresion -> . Expresion / Expresion
    (56) Expresion -> . Expresion * Expresion
    (57) Expresion -> . Expresion - Expresion
    (58) Expresion -> . Expresion + Expresion
    (59) Expresion -> . OBJECTID ASSIGN Expresion
    error           shift and go to state 108
    )               reduce using rule 64 (OptArgumentos -> .)
    BOOL_CONST      shift and go to state 53
    STR_CONST       shift and go to state 54
    INT_CONST       shift and go to state 55
    OBJECTID        shift and go to state 50
    {               shift and go to state 56
    NEW             shift and go to state 57
    CASE            shift and go to state 58
    LET             shift and go to state 59
    WHILE           shift and go to state 60
    IF              shift and go to state 61
    ~               shift and go to state 62
    ISVOID          shift and go to state 63
    NOT             shift and go to state 64
    (               shift and go to state 65

    Argumentos                     shift and go to state 107
    OptArgumentos                  shift and go to state 109
    Expresion                      shift and go to state 110

state 76

    (16) Atributo -> OBJECTID : TYPEID ASSIGN error ; .
    OBJECTID        reduce using rule 16 (Atributo -> OBJECTID : TYPEID ASSIGN error ; .)
    error           reduce using rule 16 (Atributo -> OBJECTID : TYPEID ASSIGN error ; .)
    }               reduce using rule 16 (Atributo -> OBJECTID : TYPEID ASSIGN error ; .)


state 77

    (19) Atributo -> OBJECTID : TYPEID ASSIGN Expresion ; .
    OBJECTID        reduce using rule 19 (Atributo -> OBJECTID : TYPEID ASSIGN Expresion ; .)
    error           reduce using rule 19 (Atributo -> OBJECTID : TYPEID ASSIGN Expresion ; .)
    }               reduce using rule 19 (Atributo -> OBJECTID : TYPEID ASSIGN Expresion ; .)


state 78

    (46) Expresion -> Expresion . . OBJECTID ParOptArgumentos
    OBJECTID        shift and go to state 111


state 79

    (47) Expresion -> Expresion @ . TYPEID . OBJECTID ParOptArgumentos
    TYPEID          shift and go to state 112


state 80

    (52) Expresion -> Expresion = . Expresion
    (32) Expresion -> . BOOL_CONST
    (33) Expresion -> . STR_CONST
    (34) Expresion -> . INT_CONST
    (35) Expresion -> . OBJECTID
    (36) Expresion -> . { error }
    (37) Expresion -> . { Expresiones }
    (38) Expresion -> . NEW TYPEID
    (39) Expresion -> . CASE error OF RamasCase ESAC
    (40) Expresion -> . CASE OF RamasCase ESAC
    (41) Expresion -> . CASE Expresion OF RamasCase ESAC
    (42) Expresion -> . LET Declaraciones IN Expresion
    (43) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (44) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (45) Expresion -> . OBJECTID ParOptArgumentos
    (46) Expresion -> . Expresion . OBJECTID ParOptArgumentos
    (47) Expresion -> . Expresion @ TYPEID . OBJECTID ParOptArgumentos
    (48) Expresion -> . ~ Expresion
    (49) Expresion -> . ISVOID Expresion
    (50) Expresion -> . NOT Expresion
    (51) Expresion -> . ( Expresion )
    (52) Expresion -> . Expresion = Expresion
    (53) Expresion -> . Expresion LE Expresion
    (54) Expresion -> . Expresion < Expresion
    (55) Expresion -> . Expresion / Expresion
    (56) Expresion -> . Expresion * Expresion
    (57) Expresion -> . Expresion - Expresion
    (58) Expresion -> . Expresion + Expresion
    (59) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 53
    STR_CONST       shift and go to state 54
    INT_CONST       shift and go to state 55
    OBJECTID        shift and go to state 50
    {               shift and go to state 56
    NEW             shift and go to state 57
    CASE            shift and go to state 58
    LET             shift and go to state 59
    WHILE           shift and go to state 60
    IF              shift and go to state 61
    ~               shift and go to state 62
    ISVOID          shift and go to state 63
    NOT             shift and go to state 64
    (               shift and go to state 65

    Expresion                      shift and go to state 113

state 81

    (53) Expresion -> Expresion LE . Expresion
    (32) Expresion -> . BOOL_CONST
    (33) Expresion -> . STR_CONST
    (34) Expresion -> . INT_CONST
    (35) Expresion -> . OBJECTID
    (36) Expresion -> . { error }
    (37) Expresion -> . { Expresiones }
    (38) Expresion -> . NEW TYPEID
    (39) Expresion -> . CASE error OF RamasCase ESAC
    (40) Expresion -> . CASE OF RamasCase ESAC
    (41) Expresion -> . CASE Expresion OF RamasCase ESAC
    (42) Expresion -> . LET Declaraciones IN Expresion
    (43) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (44) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (45) Expresion -> . OBJECTID ParOptArgumentos
    (46) Expresion -> . Expresion . OBJECTID ParOptArgumentos
    (47) Expresion -> . Expresion @ TYPEID . OBJECTID ParOptArgumentos
    (48) Expresion -> . ~ Expresion
    (49) Expresion -> . ISVOID Expresion
    (50) Expresion -> . NOT Expresion
    (51) Expresion -> . ( Expresion )
    (52) Expresion -> . Expresion = Expresion
    (53) Expresion -> . Expresion LE Expresion
    (54) Expresion -> . Expresion < Expresion
    (55) Expresion -> . Expresion / Expresion
    (56) Expresion -> . Expresion * Expresion
    (57) Expresion -> . Expresion - Expresion
    (58) Expresion -> . Expresion + Expresion
    (59) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 53
    STR_CONST       shift and go to state 54
    INT_CONST       shift and go to state 55
    OBJECTID        shift and go to state 50
    {               shift and go to state 56
    NEW             shift and go to state 57
    CASE            shift and go to state 58
    LET             shift and go to state 59
    WHILE           shift and go to state 60
    IF              shift and go to state 61
    ~               shift and go to state 62
    ISVOID          shift and go to state 63
    NOT             shift and go to state 64
    (               shift and go to state 65

    Expresion                      shift and go to state 114

state 82

    (54) Expresion -> Expresion < . Expresion
    (32) Expresion -> . BOOL_CONST
    (33) Expresion -> . STR_CONST
    (34) Expresion -> . INT_CONST
    (35) Expresion -> . OBJECTID
    (36) Expresion -> . { error }
    (37) Expresion -> . { Expresiones }
    (38) Expresion -> . NEW TYPEID
    (39) Expresion -> . CASE error OF RamasCase ESAC
    (40) Expresion -> . CASE OF RamasCase ESAC
    (41) Expresion -> . CASE Expresion OF RamasCase ESAC
    (42) Expresion -> . LET Declaraciones IN Expresion
    (43) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (44) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (45) Expresion -> . OBJECTID ParOptArgumentos
    (46) Expresion -> . Expresion . OBJECTID ParOptArgumentos
    (47) Expresion -> . Expresion @ TYPEID . OBJECTID ParOptArgumentos
    (48) Expresion -> . ~ Expresion
    (49) Expresion -> . ISVOID Expresion
    (50) Expresion -> . NOT Expresion
    (51) Expresion -> . ( Expresion )
    (52) Expresion -> . Expresion = Expresion
    (53) Expresion -> . Expresion LE Expresion
    (54) Expresion -> . Expresion < Expresion
    (55) Expresion -> . Expresion / Expresion
    (56) Expresion -> . Expresion * Expresion
    (57) Expresion -> . Expresion - Expresion
    (58) Expresion -> . Expresion + Expresion
    (59) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 53
    STR_CONST       shift and go to state 54
    INT_CONST       shift and go to state 55
    OBJECTID        shift and go to state 50
    {               shift and go to state 56
    NEW             shift and go to state 57
    CASE            shift and go to state 58
    LET             shift and go to state 59
    WHILE           shift and go to state 60
    IF              shift and go to state 61
    ~               shift and go to state 62
    ISVOID          shift and go to state 63
    NOT             shift and go to state 64
    (               shift and go to state 65

    Expresion                      shift and go to state 115

state 83

    (55) Expresion -> Expresion / . Expresion
    (32) Expresion -> . BOOL_CONST
    (33) Expresion -> . STR_CONST
    (34) Expresion -> . INT_CONST
    (35) Expresion -> . OBJECTID
    (36) Expresion -> . { error }
    (37) Expresion -> . { Expresiones }
    (38) Expresion -> . NEW TYPEID
    (39) Expresion -> . CASE error OF RamasCase ESAC
    (40) Expresion -> . CASE OF RamasCase ESAC
    (41) Expresion -> . CASE Expresion OF RamasCase ESAC
    (42) Expresion -> . LET Declaraciones IN Expresion
    (43) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (44) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (45) Expresion -> . OBJECTID ParOptArgumentos
    (46) Expresion -> . Expresion . OBJECTID ParOptArgumentos
    (47) Expresion -> . Expresion @ TYPEID . OBJECTID ParOptArgumentos
    (48) Expresion -> . ~ Expresion
    (49) Expresion -> . ISVOID Expresion
    (50) Expresion -> . NOT Expresion
    (51) Expresion -> . ( Expresion )
    (52) Expresion -> . Expresion = Expresion
    (53) Expresion -> . Expresion LE Expresion
    (54) Expresion -> . Expresion < Expresion
    (55) Expresion -> . Expresion / Expresion
    (56) Expresion -> . Expresion * Expresion
    (57) Expresion -> . Expresion - Expresion
    (58) Expresion -> . Expresion + Expresion
    (59) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 53
    STR_CONST       shift and go to state 54
    INT_CONST       shift and go to state 55
    OBJECTID        shift and go to state 50
    {               shift and go to state 56
    NEW             shift and go to state 57
    CASE            shift and go to state 58
    LET             shift and go to state 59
    WHILE           shift and go to state 60
    IF              shift and go to state 61
    ~               shift and go to state 62
    ISVOID          shift and go to state 63
    NOT             shift and go to state 64
    (               shift and go to state 65

    Expresion                      shift and go to state 116

state 84

    (56) Expresion -> Expresion * . Expresion
    (32) Expresion -> . BOOL_CONST
    (33) Expresion -> . STR_CONST
    (34) Expresion -> . INT_CONST
    (35) Expresion -> . OBJECTID
    (36) Expresion -> . { error }
    (37) Expresion -> . { Expresiones }
    (38) Expresion -> . NEW TYPEID
    (39) Expresion -> . CASE error OF RamasCase ESAC
    (40) Expresion -> . CASE OF RamasCase ESAC
    (41) Expresion -> . CASE Expresion OF RamasCase ESAC
    (42) Expresion -> . LET Declaraciones IN Expresion
    (43) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (44) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (45) Expresion -> . OBJECTID ParOptArgumentos
    (46) Expresion -> . Expresion . OBJECTID ParOptArgumentos
    (47) Expresion -> . Expresion @ TYPEID . OBJECTID ParOptArgumentos
    (48) Expresion -> . ~ Expresion
    (49) Expresion -> . ISVOID Expresion
    (50) Expresion -> . NOT Expresion
    (51) Expresion -> . ( Expresion )
    (52) Expresion -> . Expresion = Expresion
    (53) Expresion -> . Expresion LE Expresion
    (54) Expresion -> . Expresion < Expresion
    (55) Expresion -> . Expresion / Expresion
    (56) Expresion -> . Expresion * Expresion
    (57) Expresion -> . Expresion - Expresion
    (58) Expresion -> . Expresion + Expresion
    (59) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 53
    STR_CONST       shift and go to state 54
    INT_CONST       shift and go to state 55
    OBJECTID        shift and go to state 50
    {               shift and go to state 56
    NEW             shift and go to state 57
    CASE            shift and go to state 58
    LET             shift and go to state 59
    WHILE           shift and go to state 60
    IF              shift and go to state 61
    ~               shift and go to state 62
    ISVOID          shift and go to state 63
    NOT             shift and go to state 64
    (               shift and go to state 65

    Expresion                      shift and go to state 117

state 85

    (57) Expresion -> Expresion - . Expresion
    (32) Expresion -> . BOOL_CONST
    (33) Expresion -> . STR_CONST
    (34) Expresion -> . INT_CONST
    (35) Expresion -> . OBJECTID
    (36) Expresion -> . { error }
    (37) Expresion -> . { Expresiones }
    (38) Expresion -> . NEW TYPEID
    (39) Expresion -> . CASE error OF RamasCase ESAC
    (40) Expresion -> . CASE OF RamasCase ESAC
    (41) Expresion -> . CASE Expresion OF RamasCase ESAC
    (42) Expresion -> . LET Declaraciones IN Expresion
    (43) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (44) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (45) Expresion -> . OBJECTID ParOptArgumentos
    (46) Expresion -> . Expresion . OBJECTID ParOptArgumentos
    (47) Expresion -> . Expresion @ TYPEID . OBJECTID ParOptArgumentos
    (48) Expresion -> . ~ Expresion
    (49) Expresion -> . ISVOID Expresion
    (50) Expresion -> . NOT Expresion
    (51) Expresion -> . ( Expresion )
    (52) Expresion -> . Expresion = Expresion
    (53) Expresion -> . Expresion LE Expresion
    (54) Expresion -> . Expresion < Expresion
    (55) Expresion -> . Expresion / Expresion
    (56) Expresion -> . Expresion * Expresion
    (57) Expresion -> . Expresion - Expresion
    (58) Expresion -> . Expresion + Expresion
    (59) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 53
    STR_CONST       shift and go to state 54
    INT_CONST       shift and go to state 55
    OBJECTID        shift and go to state 50
    {               shift and go to state 56
    NEW             shift and go to state 57
    CASE            shift and go to state 58
    LET             shift and go to state 59
    WHILE           shift and go to state 60
    IF              shift and go to state 61
    ~               shift and go to state 62
    ISVOID          shift and go to state 63
    NOT             shift and go to state 64
    (               shift and go to state 65

    Expresion                      shift and go to state 118

state 86

    (58) Expresion -> Expresion + . Expresion
    (32) Expresion -> . BOOL_CONST
    (33) Expresion -> . STR_CONST
    (34) Expresion -> . INT_CONST
    (35) Expresion -> . OBJECTID
    (36) Expresion -> . { error }
    (37) Expresion -> . { Expresiones }
    (38) Expresion -> . NEW TYPEID
    (39) Expresion -> . CASE error OF RamasCase ESAC
    (40) Expresion -> . CASE OF RamasCase ESAC
    (41) Expresion -> . CASE Expresion OF RamasCase ESAC
    (42) Expresion -> . LET Declaraciones IN Expresion
    (43) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (44) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (45) Expresion -> . OBJECTID ParOptArgumentos
    (46) Expresion -> . Expresion . OBJECTID ParOptArgumentos
    (47) Expresion -> . Expresion @ TYPEID . OBJECTID ParOptArgumentos
    (48) Expresion -> . ~ Expresion
    (49) Expresion -> . ISVOID Expresion
    (50) Expresion -> . NOT Expresion
    (51) Expresion -> . ( Expresion )
    (52) Expresion -> . Expresion = Expresion
    (53) Expresion -> . Expresion LE Expresion
    (54) Expresion -> . Expresion < Expresion
    (55) Expresion -> . Expresion / Expresion
    (56) Expresion -> . Expresion * Expresion
    (57) Expresion -> . Expresion - Expresion
    (58) Expresion -> . Expresion + Expresion
    (59) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 53
    STR_CONST       shift and go to state 54
    INT_CONST       shift and go to state 55
    OBJECTID        shift and go to state 50
    {               shift and go to state 56
    NEW             shift and go to state 57
    CASE            shift and go to state 58
    LET             shift and go to state 59
    WHILE           shift and go to state 60
    IF              shift and go to state 61
    ~               shift and go to state 62
    ISVOID          shift and go to state 63
    NOT             shift and go to state 64
    (               shift and go to state 65

    Expresion                      shift and go to state 119

state 87

    (36) Expresion -> { error . }
    (75) Expresiones -> error . ; Expresiones
    (76) Expresiones -> error . ;
    }               shift and go to state 120
    ;               shift and go to state 121


state 88

    (37) Expresion -> { Expresiones . }
    }               shift and go to state 122


state 89

    (77) Expresiones -> Expresion . ; Expresiones
    (78) Expresiones -> Expresion . ;
    (46) Expresion -> Expresion . . OBJECTID ParOptArgumentos
    (47) Expresion -> Expresion . @ TYPEID . OBJECTID ParOptArgumentos
    (52) Expresion -> Expresion . = Expresion
    (53) Expresion -> Expresion . LE Expresion
    (54) Expresion -> Expresion . < Expresion
    (55) Expresion -> Expresion . / Expresion
    (56) Expresion -> Expresion . * Expresion
    (57) Expresion -> Expresion . - Expresion
    (58) Expresion -> Expresion . + Expresion
    ;               shift and go to state 123
    .               shift and go to state 78
    @               shift and go to state 79
    =               shift and go to state 80
    LE              shift and go to state 81
    <               shift and go to state 82
    /               shift and go to state 83
    *               shift and go to state 84
    -               shift and go to state 85
    +               shift and go to state 86


state 90

    (38) Expresion -> NEW TYPEID .
    ;               reduce using rule 38 (Expresion -> NEW TYPEID .)
    .               reduce using rule 38 (Expresion -> NEW TYPEID .)
    @               reduce using rule 38 (Expresion -> NEW TYPEID .)
    =               reduce using rule 38 (Expresion -> NEW TYPEID .)
    LE              reduce using rule 38 (Expresion -> NEW TYPEID .)
    <               reduce using rule 38 (Expresion -> NEW TYPEID .)
    /               reduce using rule 38 (Expresion -> NEW TYPEID .)
    *               reduce using rule 38 (Expresion -> NEW TYPEID .)
    -               reduce using rule 38 (Expresion -> NEW TYPEID .)
    +               reduce using rule 38 (Expresion -> NEW TYPEID .)
    }               reduce using rule 38 (Expresion -> NEW TYPEID .)
    OF              reduce using rule 38 (Expresion -> NEW TYPEID .)
    LOOP            reduce using rule 38 (Expresion -> NEW TYPEID .)
    THEN            reduce using rule 38 (Expresion -> NEW TYPEID .)
    )               reduce using rule 38 (Expresion -> NEW TYPEID .)
    ,               reduce using rule 38 (Expresion -> NEW TYPEID .)
    error           reduce using rule 38 (Expresion -> NEW TYPEID .)
    POOL            reduce using rule 38 (Expresion -> NEW TYPEID .)
    ELSE            reduce using rule 38 (Expresion -> NEW TYPEID .)
    IN              reduce using rule 38 (Expresion -> NEW TYPEID .)
    FI              reduce using rule 38 (Expresion -> NEW TYPEID .)


state 91

    (39) Expresion -> CASE error . OF RamasCase ESAC
    OF              shift and go to state 124


state 92

    (40) Expresion -> CASE OF . RamasCase ESAC
    (72) RamasCase -> . RamaCase RamasCase
    (73) RamasCase -> . RamaCase
    (74) RamaCase -> . OBJECTID : TYPEID DARROW Expresion ;
    OBJECTID        shift and go to state 127

    RamasCase                      shift and go to state 125
    RamaCase                       shift and go to state 126

state 93

    (41) Expresion -> CASE Expresion . OF RamasCase ESAC
    (46) Expresion -> Expresion . . OBJECTID ParOptArgumentos
    (47) Expresion -> Expresion . @ TYPEID . OBJECTID ParOptArgumentos
    (52) Expresion -> Expresion . = Expresion
    (53) Expresion -> Expresion . LE Expresion
    (54) Expresion -> Expresion . < Expresion
    (55) Expresion -> Expresion . / Expresion
    (56) Expresion -> Expresion . * Expresion
    (57) Expresion -> Expresion . - Expresion
    (58) Expresion -> Expresion . + Expresion
    OF              shift and go to state 128
    .               shift and go to state 78
    @               shift and go to state 79
    =               shift and go to state 80
    LE              shift and go to state 81
    <               shift and go to state 82
    /               shift and go to state 83
    *               shift and go to state 84
    -               shift and go to state 85
    +               shift and go to state 86


state 94

    (42) Expresion -> LET Declaraciones . IN Expresion
    IN              shift and go to state 129


state 95

    (67) Declaraciones -> error . , Declaraciones
    ,               shift and go to state 130


state 96

    (68) Declaraciones -> Declaracion . , Declaraciones
    (69) Declaraciones -> Declaracion .
    ,               shift and go to state 131
    IN              reduce using rule 69 (Declaraciones -> Declaracion .)


state 97

    (70) Declaracion -> OBJECTID . : TYPEID ASSIGN Expresion
    (71) Declaracion -> OBJECTID . : TYPEID
    :               shift and go to state 132


state 98

    (43) Expresion -> WHILE Expresion . LOOP Expresion POOL
    (46) Expresion -> Expresion . . OBJECTID ParOptArgumentos
    (47) Expresion -> Expresion . @ TYPEID . OBJECTID ParOptArgumentos
    (52) Expresion -> Expresion . = Expresion
    (53) Expresion -> Expresion . LE Expresion
    (54) Expresion -> Expresion . < Expresion
    (55) Expresion -> Expresion . / Expresion
    (56) Expresion -> Expresion . * Expresion
    (57) Expresion -> Expresion . - Expresion
    (58) Expresion -> Expresion . + Expresion
    LOOP            shift and go to state 133
    .               shift and go to state 78
    @               shift and go to state 79
    =               shift and go to state 80
    LE              shift and go to state 81
    <               shift and go to state 82
    /               shift and go to state 83
    *               shift and go to state 84
    -               shift and go to state 85
    +               shift and go to state 86


state 99

    (44) Expresion -> IF Expresion . THEN Expresion ELSE Expresion FI
    (46) Expresion -> Expresion . . OBJECTID ParOptArgumentos
    (47) Expresion -> Expresion . @ TYPEID . OBJECTID ParOptArgumentos
    (52) Expresion -> Expresion . = Expresion
    (53) Expresion -> Expresion . LE Expresion
    (54) Expresion -> Expresion . < Expresion
    (55) Expresion -> Expresion . / Expresion
    (56) Expresion -> Expresion . * Expresion
    (57) Expresion -> Expresion . - Expresion
    (58) Expresion -> Expresion . + Expresion
    THEN            shift and go to state 134
    .               shift and go to state 78
    @               shift and go to state 79
    =               shift and go to state 80
    LE              shift and go to state 81
    <               shift and go to state 82
    /               shift and go to state 83
    *               shift and go to state 84
    -               shift and go to state 85
    +               shift and go to state 86


state 100

    (48) Expresion -> ~ Expresion .
    (46) Expresion -> Expresion . . OBJECTID ParOptArgumentos
    (47) Expresion -> Expresion . @ TYPEID . OBJECTID ParOptArgumentos
    (52) Expresion -> Expresion . = Expresion
    (53) Expresion -> Expresion . LE Expresion
    (54) Expresion -> Expresion . < Expresion
    (55) Expresion -> Expresion . / Expresion
    (56) Expresion -> Expresion . * Expresion
    (57) Expresion -> Expresion . - Expresion
    (58) Expresion -> Expresion . + Expresion
    ;               reduce using rule 48 (Expresion -> ~ Expresion .)
    =               reduce using rule 48 (Expresion -> ~ Expresion .)
    LE              reduce using rule 48 (Expresion -> ~ Expresion .)
    <               reduce using rule 48 (Expresion -> ~ Expresion .)
    /               reduce using rule 48 (Expresion -> ~ Expresion .)
    *               reduce using rule 48 (Expresion -> ~ Expresion .)
    -               reduce using rule 48 (Expresion -> ~ Expresion .)
    +               reduce using rule 48 (Expresion -> ~ Expresion .)
    }               reduce using rule 48 (Expresion -> ~ Expresion .)
    OF              reduce using rule 48 (Expresion -> ~ Expresion .)
    LOOP            reduce using rule 48 (Expresion -> ~ Expresion .)
    THEN            reduce using rule 48 (Expresion -> ~ Expresion .)
    )               reduce using rule 48 (Expresion -> ~ Expresion .)
    ,               reduce using rule 48 (Expresion -> ~ Expresion .)
    error           reduce using rule 48 (Expresion -> ~ Expresion .)
    POOL            reduce using rule 48 (Expresion -> ~ Expresion .)
    ELSE            reduce using rule 48 (Expresion -> ~ Expresion .)
    IN              reduce using rule 48 (Expresion -> ~ Expresion .)
    FI              reduce using rule 48 (Expresion -> ~ Expresion .)
    .               shift and go to state 78
    @               shift and go to state 79


state 101

    (49) Expresion -> ISVOID Expresion .
    (46) Expresion -> Expresion . . OBJECTID ParOptArgumentos
    (47) Expresion -> Expresion . @ TYPEID . OBJECTID ParOptArgumentos
    (52) Expresion -> Expresion . = Expresion
    (53) Expresion -> Expresion . LE Expresion
    (54) Expresion -> Expresion . < Expresion
    (55) Expresion -> Expresion . / Expresion
    (56) Expresion -> Expresion . * Expresion
    (57) Expresion -> Expresion . - Expresion
    (58) Expresion -> Expresion . + Expresion
    ;               reduce using rule 49 (Expresion -> ISVOID Expresion .)
    =               reduce using rule 49 (Expresion -> ISVOID Expresion .)
    LE              reduce using rule 49 (Expresion -> ISVOID Expresion .)
    <               reduce using rule 49 (Expresion -> ISVOID Expresion .)
    /               reduce using rule 49 (Expresion -> ISVOID Expresion .)
    *               reduce using rule 49 (Expresion -> ISVOID Expresion .)
    -               reduce using rule 49 (Expresion -> ISVOID Expresion .)
    +               reduce using rule 49 (Expresion -> ISVOID Expresion .)
    }               reduce using rule 49 (Expresion -> ISVOID Expresion .)
    OF              reduce using rule 49 (Expresion -> ISVOID Expresion .)
    LOOP            reduce using rule 49 (Expresion -> ISVOID Expresion .)
    THEN            reduce using rule 49 (Expresion -> ISVOID Expresion .)
    )               reduce using rule 49 (Expresion -> ISVOID Expresion .)
    ,               reduce using rule 49 (Expresion -> ISVOID Expresion .)
    error           reduce using rule 49 (Expresion -> ISVOID Expresion .)
    POOL            reduce using rule 49 (Expresion -> ISVOID Expresion .)
    ELSE            reduce using rule 49 (Expresion -> ISVOID Expresion .)
    IN              reduce using rule 49 (Expresion -> ISVOID Expresion .)
    FI              reduce using rule 49 (Expresion -> ISVOID Expresion .)
    .               shift and go to state 78
    @               shift and go to state 79


state 102

    (50) Expresion -> NOT Expresion .
    (46) Expresion -> Expresion . . OBJECTID ParOptArgumentos
    (47) Expresion -> Expresion . @ TYPEID . OBJECTID ParOptArgumentos
    (52) Expresion -> Expresion . = Expresion
    (53) Expresion -> Expresion . LE Expresion
    (54) Expresion -> Expresion . < Expresion
    (55) Expresion -> Expresion . / Expresion
    (56) Expresion -> Expresion . * Expresion
    (57) Expresion -> Expresion . - Expresion
    (58) Expresion -> Expresion . + Expresion
    ;               reduce using rule 50 (Expresion -> NOT Expresion .)
    }               reduce using rule 50 (Expresion -> NOT Expresion .)
    OF              reduce using rule 50 (Expresion -> NOT Expresion .)
    LOOP            reduce using rule 50 (Expresion -> NOT Expresion .)
    THEN            reduce using rule 50 (Expresion -> NOT Expresion .)
    )               reduce using rule 50 (Expresion -> NOT Expresion .)
    ,               reduce using rule 50 (Expresion -> NOT Expresion .)
    error           reduce using rule 50 (Expresion -> NOT Expresion .)
    POOL            reduce using rule 50 (Expresion -> NOT Expresion .)
    ELSE            reduce using rule 50 (Expresion -> NOT Expresion .)
    IN              reduce using rule 50 (Expresion -> NOT Expresion .)
    FI              reduce using rule 50 (Expresion -> NOT Expresion .)
    .               shift and go to state 78
    @               shift and go to state 79
    =               shift and go to state 80
    LE              shift and go to state 81
    <               shift and go to state 82
    /               shift and go to state 83
    *               shift and go to state 84
    -               shift and go to state 85
    +               shift and go to state 86


state 103

    (51) Expresion -> ( Expresion . )
    (46) Expresion -> Expresion . . OBJECTID ParOptArgumentos
    (47) Expresion -> Expresion . @ TYPEID . OBJECTID ParOptArgumentos
    (52) Expresion -> Expresion . = Expresion
    (53) Expresion -> Expresion . LE Expresion
    (54) Expresion -> Expresion . < Expresion
    (55) Expresion -> Expresion . / Expresion
    (56) Expresion -> Expresion . * Expresion
    (57) Expresion -> Expresion . - Expresion
    (58) Expresion -> Expresion . + Expresion
    )               shift and go to state 135
    .               shift and go to state 78
    @               shift and go to state 79
    =               shift and go to state 80
    LE              shift and go to state 81
    <               shift and go to state 82
    /               shift and go to state 83
    *               shift and go to state 84
    -               shift and go to state 85
    +               shift and go to state 86


state 104

    (27) BlockExpresion -> { error } .
    ;               reduce using rule 27 (BlockExpresion -> { error } .)


state 105

    (28) BlockExpresion -> { Expresion } .
    ;               reduce using rule 28 (BlockExpresion -> { Expresion } .)


state 106

    (59) Expresion -> OBJECTID ASSIGN Expresion .
    (46) Expresion -> Expresion . . OBJECTID ParOptArgumentos
    (47) Expresion -> Expresion . @ TYPEID . OBJECTID ParOptArgumentos
    (52) Expresion -> Expresion . = Expresion
    (53) Expresion -> Expresion . LE Expresion
    (54) Expresion -> Expresion . < Expresion
    (55) Expresion -> Expresion . / Expresion
    (56) Expresion -> Expresion . * Expresion
    (57) Expresion -> Expresion . - Expresion
    (58) Expresion -> Expresion . + Expresion
    ;               reduce using rule 59 (Expresion -> OBJECTID ASSIGN Expresion .)
    }               reduce using rule 59 (Expresion -> OBJECTID ASSIGN Expresion .)
    OF              reduce using rule 59 (Expresion -> OBJECTID ASSIGN Expresion .)
    LOOP            reduce using rule 59 (Expresion -> OBJECTID ASSIGN Expresion .)
    THEN            reduce using rule 59 (Expresion -> OBJECTID ASSIGN Expresion .)
    )               reduce using rule 59 (Expresion -> OBJECTID ASSIGN Expresion .)
    ,               reduce using rule 59 (Expresion -> OBJECTID ASSIGN Expresion .)
    error           reduce using rule 59 (Expresion -> OBJECTID ASSIGN Expresion .)
    POOL            reduce using rule 59 (Expresion -> OBJECTID ASSIGN Expresion .)
    ELSE            reduce using rule 59 (Expresion -> OBJECTID ASSIGN Expresion .)
    IN              reduce using rule 59 (Expresion -> OBJECTID ASSIGN Expresion .)
    FI              reduce using rule 59 (Expresion -> OBJECTID ASSIGN Expresion .)
    .               shift and go to state 78
    @               shift and go to state 79
    =               shift and go to state 80
    LE              shift and go to state 81
    <               shift and go to state 82
    /               shift and go to state 83
    *               shift and go to state 84
    -               shift and go to state 85
    +               shift and go to state 86


state 107

    (60) ParOptArgumentos -> ( Argumentos . error )
    (63) OptArgumentos -> Argumentos .
    error           shift and go to state 136
    )               reduce using rule 63 (OptArgumentos -> Argumentos .)


state 108

    (61) ParOptArgumentos -> ( error . )
    )               shift and go to state 137


state 109

    (62) ParOptArgumentos -> ( OptArgumentos . )
    )               shift and go to state 138


state 110

    (65) Argumentos -> Expresion . , Argumentos
    (66) Argumentos -> Expresion .
    (46) Expresion -> Expresion . . OBJECTID ParOptArgumentos
    (47) Expresion -> Expresion . @ TYPEID . OBJECTID ParOptArgumentos
    (52) Expresion -> Expresion . = Expresion
    (53) Expresion -> Expresion . LE Expresion
    (54) Expresion -> Expresion . < Expresion
    (55) Expresion -> Expresion . / Expresion
    (56) Expresion -> Expresion . * Expresion
    (57) Expresion -> Expresion . - Expresion
    (58) Expresion -> Expresion . + Expresion
    ,               shift and go to state 139
    error           reduce using rule 66 (Argumentos -> Expresion .)
    )               reduce using rule 66 (Argumentos -> Expresion .)
    .               shift and go to state 78
    @               shift and go to state 79
    =               shift and go to state 80
    LE              shift and go to state 81
    <               shift and go to state 82
    /               shift and go to state 83
    *               shift and go to state 84
    -               shift and go to state 85
    +               shift and go to state 86


state 111

    (46) Expresion -> Expresion . OBJECTID . ParOptArgumentos
    (60) ParOptArgumentos -> . ( Argumentos error )
    (61) ParOptArgumentos -> . ( error )
    (62) ParOptArgumentos -> . ( OptArgumentos )
    (               shift and go to state 75

    ParOptArgumentos               shift and go to state 140

state 112

    (47) Expresion -> Expresion @ TYPEID . . OBJECTID ParOptArgumentos
    .               shift and go to state 141


state 113

    (52) Expresion -> Expresion = Expresion .
    (46) Expresion -> Expresion . . OBJECTID ParOptArgumentos
    (47) Expresion -> Expresion . @ TYPEID . OBJECTID ParOptArgumentos
    (52) Expresion -> Expresion . = Expresion
    (53) Expresion -> Expresion . LE Expresion
    (54) Expresion -> Expresion . < Expresion
    (55) Expresion -> Expresion . / Expresion
    (56) Expresion -> Expresion . * Expresion
    (57) Expresion -> Expresion . - Expresion
    (58) Expresion -> Expresion . + Expresion
    ;               reduce using rule 52 (Expresion -> Expresion = Expresion .)
    =               reduce using rule 52 (Expresion -> Expresion = Expresion .)
    LE              reduce using rule 52 (Expresion -> Expresion = Expresion .)
    <               reduce using rule 52 (Expresion -> Expresion = Expresion .)
    }               reduce using rule 52 (Expresion -> Expresion = Expresion .)
    OF              reduce using rule 52 (Expresion -> Expresion = Expresion .)
    LOOP            reduce using rule 52 (Expresion -> Expresion = Expresion .)
    THEN            reduce using rule 52 (Expresion -> Expresion = Expresion .)
    )               reduce using rule 52 (Expresion -> Expresion = Expresion .)
    ,               reduce using rule 52 (Expresion -> Expresion = Expresion .)
    error           reduce using rule 52 (Expresion -> Expresion = Expresion .)
    POOL            reduce using rule 52 (Expresion -> Expresion = Expresion .)
    ELSE            reduce using rule 52 (Expresion -> Expresion = Expresion .)
    IN              reduce using rule 52 (Expresion -> Expresion = Expresion .)
    FI              reduce using rule 52 (Expresion -> Expresion = Expresion .)
    .               shift and go to state 78
    @               shift and go to state 79
    /               shift and go to state 83
    *               shift and go to state 84
    -               shift and go to state 85
    +               shift and go to state 86


state 114

    (53) Expresion -> Expresion LE Expresion .
    (46) Expresion -> Expresion . . OBJECTID ParOptArgumentos
    (47) Expresion -> Expresion . @ TYPEID . OBJECTID ParOptArgumentos
    (52) Expresion -> Expresion . = Expresion
    (53) Expresion -> Expresion . LE Expresion
    (54) Expresion -> Expresion . < Expresion
    (55) Expresion -> Expresion . / Expresion
    (56) Expresion -> Expresion . * Expresion
    (57) Expresion -> Expresion . - Expresion
    (58) Expresion -> Expresion . + Expresion
    ;               reduce using rule 53 (Expresion -> Expresion LE Expresion .)
    =               reduce using rule 53 (Expresion -> Expresion LE Expresion .)
    LE              reduce using rule 53 (Expresion -> Expresion LE Expresion .)
    <               reduce using rule 53 (Expresion -> Expresion LE Expresion .)
    }               reduce using rule 53 (Expresion -> Expresion LE Expresion .)
    OF              reduce using rule 53 (Expresion -> Expresion LE Expresion .)
    LOOP            reduce using rule 53 (Expresion -> Expresion LE Expresion .)
    THEN            reduce using rule 53 (Expresion -> Expresion LE Expresion .)
    )               reduce using rule 53 (Expresion -> Expresion LE Expresion .)
    ,               reduce using rule 53 (Expresion -> Expresion LE Expresion .)
    error           reduce using rule 53 (Expresion -> Expresion LE Expresion .)
    POOL            reduce using rule 53 (Expresion -> Expresion LE Expresion .)
    ELSE            reduce using rule 53 (Expresion -> Expresion LE Expresion .)
    IN              reduce using rule 53 (Expresion -> Expresion LE Expresion .)
    FI              reduce using rule 53 (Expresion -> Expresion LE Expresion .)
    .               shift and go to state 78
    @               shift and go to state 79
    /               shift and go to state 83
    *               shift and go to state 84
    -               shift and go to state 85
    +               shift and go to state 86


state 115

    (54) Expresion -> Expresion < Expresion .
    (46) Expresion -> Expresion . . OBJECTID ParOptArgumentos
    (47) Expresion -> Expresion . @ TYPEID . OBJECTID ParOptArgumentos
    (52) Expresion -> Expresion . = Expresion
    (53) Expresion -> Expresion . LE Expresion
    (54) Expresion -> Expresion . < Expresion
    (55) Expresion -> Expresion . / Expresion
    (56) Expresion -> Expresion . * Expresion
    (57) Expresion -> Expresion . - Expresion
    (58) Expresion -> Expresion . + Expresion
    ;               reduce using rule 54 (Expresion -> Expresion < Expresion .)
    =               reduce using rule 54 (Expresion -> Expresion < Expresion .)
    LE              reduce using rule 54 (Expresion -> Expresion < Expresion .)
    <               reduce using rule 54 (Expresion -> Expresion < Expresion .)
    }               reduce using rule 54 (Expresion -> Expresion < Expresion .)
    OF              reduce using rule 54 (Expresion -> Expresion < Expresion .)
    LOOP            reduce using rule 54 (Expresion -> Expresion < Expresion .)
    THEN            reduce using rule 54 (Expresion -> Expresion < Expresion .)
    )               reduce using rule 54 (Expresion -> Expresion < Expresion .)
    ,               reduce using rule 54 (Expresion -> Expresion < Expresion .)
    error           reduce using rule 54 (Expresion -> Expresion < Expresion .)
    POOL            reduce using rule 54 (Expresion -> Expresion < Expresion .)
    ELSE            reduce using rule 54 (Expresion -> Expresion < Expresion .)
    IN              reduce using rule 54 (Expresion -> Expresion < Expresion .)
    FI              reduce using rule 54 (Expresion -> Expresion < Expresion .)
    .               shift and go to state 78
    @               shift and go to state 79
    /               shift and go to state 83
    *               shift and go to state 84
    -               shift and go to state 85
    +               shift and go to state 86


state 116

    (55) Expresion -> Expresion / Expresion .
    (46) Expresion -> Expresion . . OBJECTID ParOptArgumentos
    (47) Expresion -> Expresion . @ TYPEID . OBJECTID ParOptArgumentos
    (52) Expresion -> Expresion . = Expresion
    (53) Expresion -> Expresion . LE Expresion
    (54) Expresion -> Expresion . < Expresion
    (55) Expresion -> Expresion . / Expresion
    (56) Expresion -> Expresion . * Expresion
    (57) Expresion -> Expresion . - Expresion
    (58) Expresion -> Expresion . + Expresion
    ;               reduce using rule 55 (Expresion -> Expresion / Expresion .)
    =               reduce using rule 55 (Expresion -> Expresion / Expresion .)
    LE              reduce using rule 55 (Expresion -> Expresion / Expresion .)
    <               reduce using rule 55 (Expresion -> Expresion / Expresion .)
    /               reduce using rule 55 (Expresion -> Expresion / Expresion .)
    *               reduce using rule 55 (Expresion -> Expresion / Expresion .)
    -               reduce using rule 55 (Expresion -> Expresion / Expresion .)
    +               reduce using rule 55 (Expresion -> Expresion / Expresion .)
    }               reduce using rule 55 (Expresion -> Expresion / Expresion .)
    OF              reduce using rule 55 (Expresion -> Expresion / Expresion .)
    LOOP            reduce using rule 55 (Expresion -> Expresion / Expresion .)
    THEN            reduce using rule 55 (Expresion -> Expresion / Expresion .)
    )               reduce using rule 55 (Expresion -> Expresion / Expresion .)
    ,               reduce using rule 55 (Expresion -> Expresion / Expresion .)
    error           reduce using rule 55 (Expresion -> Expresion / Expresion .)
    POOL            reduce using rule 55 (Expresion -> Expresion / Expresion .)
    ELSE            reduce using rule 55 (Expresion -> Expresion / Expresion .)
    IN              reduce using rule 55 (Expresion -> Expresion / Expresion .)
    FI              reduce using rule 55 (Expresion -> Expresion / Expresion .)
    .               shift and go to state 78
    @               shift and go to state 79


state 117

    (56) Expresion -> Expresion * Expresion .
    (46) Expresion -> Expresion . . OBJECTID ParOptArgumentos
    (47) Expresion -> Expresion . @ TYPEID . OBJECTID ParOptArgumentos
    (52) Expresion -> Expresion . = Expresion
    (53) Expresion -> Expresion . LE Expresion
    (54) Expresion -> Expresion . < Expresion
    (55) Expresion -> Expresion . / Expresion
    (56) Expresion -> Expresion . * Expresion
    (57) Expresion -> Expresion . - Expresion
    (58) Expresion -> Expresion . + Expresion
    ;               reduce using rule 56 (Expresion -> Expresion * Expresion .)
    =               reduce using rule 56 (Expresion -> Expresion * Expresion .)
    LE              reduce using rule 56 (Expresion -> Expresion * Expresion .)
    <               reduce using rule 56 (Expresion -> Expresion * Expresion .)
    /               reduce using rule 56 (Expresion -> Expresion * Expresion .)
    *               reduce using rule 56 (Expresion -> Expresion * Expresion .)
    -               reduce using rule 56 (Expresion -> Expresion * Expresion .)
    +               reduce using rule 56 (Expresion -> Expresion * Expresion .)
    }               reduce using rule 56 (Expresion -> Expresion * Expresion .)
    OF              reduce using rule 56 (Expresion -> Expresion * Expresion .)
    LOOP            reduce using rule 56 (Expresion -> Expresion * Expresion .)
    THEN            reduce using rule 56 (Expresion -> Expresion * Expresion .)
    )               reduce using rule 56 (Expresion -> Expresion * Expresion .)
    ,               reduce using rule 56 (Expresion -> Expresion * Expresion .)
    error           reduce using rule 56 (Expresion -> Expresion * Expresion .)
    POOL            reduce using rule 56 (Expresion -> Expresion * Expresion .)
    ELSE            reduce using rule 56 (Expresion -> Expresion * Expresion .)
    IN              reduce using rule 56 (Expresion -> Expresion * Expresion .)
    FI              reduce using rule 56 (Expresion -> Expresion * Expresion .)
    .               shift and go to state 78
    @               shift and go to state 79


state 118

    (57) Expresion -> Expresion - Expresion .
    (46) Expresion -> Expresion . . OBJECTID ParOptArgumentos
    (47) Expresion -> Expresion . @ TYPEID . OBJECTID ParOptArgumentos
    (52) Expresion -> Expresion . = Expresion
    (53) Expresion -> Expresion . LE Expresion
    (54) Expresion -> Expresion . < Expresion
    (55) Expresion -> Expresion . / Expresion
    (56) Expresion -> Expresion . * Expresion
    (57) Expresion -> Expresion . - Expresion
    (58) Expresion -> Expresion . + Expresion
    ;               reduce using rule 57 (Expresion -> Expresion - Expresion .)
    =               reduce using rule 57 (Expresion -> Expresion - Expresion .)
    LE              reduce using rule 57 (Expresion -> Expresion - Expresion .)
    <               reduce using rule 57 (Expresion -> Expresion - Expresion .)
    -               reduce using rule 57 (Expresion -> Expresion - Expresion .)
    +               reduce using rule 57 (Expresion -> Expresion - Expresion .)
    }               reduce using rule 57 (Expresion -> Expresion - Expresion .)
    OF              reduce using rule 57 (Expresion -> Expresion - Expresion .)
    LOOP            reduce using rule 57 (Expresion -> Expresion - Expresion .)
    THEN            reduce using rule 57 (Expresion -> Expresion - Expresion .)
    )               reduce using rule 57 (Expresion -> Expresion - Expresion .)
    ,               reduce using rule 57 (Expresion -> Expresion - Expresion .)
    error           reduce using rule 57 (Expresion -> Expresion - Expresion .)
    POOL            reduce using rule 57 (Expresion -> Expresion - Expresion .)
    ELSE            reduce using rule 57 (Expresion -> Expresion - Expresion .)
    IN              reduce using rule 57 (Expresion -> Expresion - Expresion .)
    FI              reduce using rule 57 (Expresion -> Expresion - Expresion .)
    .               shift and go to state 78
    @               shift and go to state 79
    /               shift and go to state 83
    *               shift and go to state 84


state 119

    (58) Expresion -> Expresion + Expresion .
    (46) Expresion -> Expresion . . OBJECTID ParOptArgumentos
    (47) Expresion -> Expresion . @ TYPEID . OBJECTID ParOptArgumentos
    (52) Expresion -> Expresion . = Expresion
    (53) Expresion -> Expresion . LE Expresion
    (54) Expresion -> Expresion . < Expresion
    (55) Expresion -> Expresion . / Expresion
    (56) Expresion -> Expresion . * Expresion
    (57) Expresion -> Expresion . - Expresion
    (58) Expresion -> Expresion . + Expresion
    ;               reduce using rule 58 (Expresion -> Expresion + Expresion .)
    =               reduce using rule 58 (Expresion -> Expresion + Expresion .)
    LE              reduce using rule 58 (Expresion -> Expresion + Expresion .)
    <               reduce using rule 58 (Expresion -> Expresion + Expresion .)
    -               reduce using rule 58 (Expresion -> Expresion + Expresion .)
    +               reduce using rule 58 (Expresion -> Expresion + Expresion .)
    }               reduce using rule 58 (Expresion -> Expresion + Expresion .)
    OF              reduce using rule 58 (Expresion -> Expresion + Expresion .)
    LOOP            reduce using rule 58 (Expresion -> Expresion + Expresion .)
    THEN            reduce using rule 58 (Expresion -> Expresion + Expresion .)
    )               reduce using rule 58 (Expresion -> Expresion + Expresion .)
    ,               reduce using rule 58 (Expresion -> Expresion + Expresion .)
    error           reduce using rule 58 (Expresion -> Expresion + Expresion .)
    POOL            reduce using rule 58 (Expresion -> Expresion + Expresion .)
    ELSE            reduce using rule 58 (Expresion -> Expresion + Expresion .)
    IN              reduce using rule 58 (Expresion -> Expresion + Expresion .)
    FI              reduce using rule 58 (Expresion -> Expresion + Expresion .)
    .               shift and go to state 78
    @               shift and go to state 79
    /               shift and go to state 83
    *               shift and go to state 84


state 120

    (36) Expresion -> { error } .
    ;               reduce using rule 36 (Expresion -> { error } .)
    .               reduce using rule 36 (Expresion -> { error } .)
    @               reduce using rule 36 (Expresion -> { error } .)
    =               reduce using rule 36 (Expresion -> { error } .)
    LE              reduce using rule 36 (Expresion -> { error } .)
    <               reduce using rule 36 (Expresion -> { error } .)
    /               reduce using rule 36 (Expresion -> { error } .)
    *               reduce using rule 36 (Expresion -> { error } .)
    -               reduce using rule 36 (Expresion -> { error } .)
    +               reduce using rule 36 (Expresion -> { error } .)
    }               reduce using rule 36 (Expresion -> { error } .)
    OF              reduce using rule 36 (Expresion -> { error } .)
    LOOP            reduce using rule 36 (Expresion -> { error } .)
    THEN            reduce using rule 36 (Expresion -> { error } .)
    )               reduce using rule 36 (Expresion -> { error } .)
    ,               reduce using rule 36 (Expresion -> { error } .)
    error           reduce using rule 36 (Expresion -> { error } .)
    POOL            reduce using rule 36 (Expresion -> { error } .)
    ELSE            reduce using rule 36 (Expresion -> { error } .)
    IN              reduce using rule 36 (Expresion -> { error } .)
    FI              reduce using rule 36 (Expresion -> { error } .)


state 121

    (75) Expresiones -> error ; . Expresiones
    (76) Expresiones -> error ; .
    (75) Expresiones -> . error ; Expresiones
    (76) Expresiones -> . error ;
    (77) Expresiones -> . Expresion ; Expresiones
    (78) Expresiones -> . Expresion ;
    (32) Expresion -> . BOOL_CONST
    (33) Expresion -> . STR_CONST
    (34) Expresion -> . INT_CONST
    (35) Expresion -> . OBJECTID
    (36) Expresion -> . { error }
    (37) Expresion -> . { Expresiones }
    (38) Expresion -> . NEW TYPEID
    (39) Expresion -> . CASE error OF RamasCase ESAC
    (40) Expresion -> . CASE OF RamasCase ESAC
    (41) Expresion -> . CASE Expresion OF RamasCase ESAC
    (42) Expresion -> . LET Declaraciones IN Expresion
    (43) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (44) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (45) Expresion -> . OBJECTID ParOptArgumentos
    (46) Expresion -> . Expresion . OBJECTID ParOptArgumentos
    (47) Expresion -> . Expresion @ TYPEID . OBJECTID ParOptArgumentos
    (48) Expresion -> . ~ Expresion
    (49) Expresion -> . ISVOID Expresion
    (50) Expresion -> . NOT Expresion
    (51) Expresion -> . ( Expresion )
    (52) Expresion -> . Expresion = Expresion
    (53) Expresion -> . Expresion LE Expresion
    (54) Expresion -> . Expresion < Expresion
    (55) Expresion -> . Expresion / Expresion
    (56) Expresion -> . Expresion * Expresion
    (57) Expresion -> . Expresion - Expresion
    (58) Expresion -> . Expresion + Expresion
    (59) Expresion -> . OBJECTID ASSIGN Expresion
    }               reduce using rule 76 (Expresiones -> error ; .)
    error           shift and go to state 142
    BOOL_CONST      shift and go to state 53
    STR_CONST       shift and go to state 54
    INT_CONST       shift and go to state 55
    OBJECTID        shift and go to state 50
    {               shift and go to state 56
    NEW             shift and go to state 57
    CASE            shift and go to state 58
    LET             shift and go to state 59
    WHILE           shift and go to state 60
    IF              shift and go to state 61
    ~               shift and go to state 62
    ISVOID          shift and go to state 63
    NOT             shift and go to state 64
    (               shift and go to state 65

    Expresiones                    shift and go to state 143
    Expresion                      shift and go to state 89

state 122

    (37) Expresion -> { Expresiones } .
    ;               reduce using rule 37 (Expresion -> { Expresiones } .)
    .               reduce using rule 37 (Expresion -> { Expresiones } .)
    @               reduce using rule 37 (Expresion -> { Expresiones } .)
    =               reduce using rule 37 (Expresion -> { Expresiones } .)
    LE              reduce using rule 37 (Expresion -> { Expresiones } .)
    <               reduce using rule 37 (Expresion -> { Expresiones } .)
    /               reduce using rule 37 (Expresion -> { Expresiones } .)
    *               reduce using rule 37 (Expresion -> { Expresiones } .)
    -               reduce using rule 37 (Expresion -> { Expresiones } .)
    +               reduce using rule 37 (Expresion -> { Expresiones } .)
    }               reduce using rule 37 (Expresion -> { Expresiones } .)
    OF              reduce using rule 37 (Expresion -> { Expresiones } .)
    LOOP            reduce using rule 37 (Expresion -> { Expresiones } .)
    THEN            reduce using rule 37 (Expresion -> { Expresiones } .)
    )               reduce using rule 37 (Expresion -> { Expresiones } .)
    ,               reduce using rule 37 (Expresion -> { Expresiones } .)
    error           reduce using rule 37 (Expresion -> { Expresiones } .)
    POOL            reduce using rule 37 (Expresion -> { Expresiones } .)
    ELSE            reduce using rule 37 (Expresion -> { Expresiones } .)
    IN              reduce using rule 37 (Expresion -> { Expresiones } .)
    FI              reduce using rule 37 (Expresion -> { Expresiones } .)


state 123

    (77) Expresiones -> Expresion ; . Expresiones
    (78) Expresiones -> Expresion ; .
    (75) Expresiones -> . error ; Expresiones
    (76) Expresiones -> . error ;
    (77) Expresiones -> . Expresion ; Expresiones
    (78) Expresiones -> . Expresion ;
    (32) Expresion -> . BOOL_CONST
    (33) Expresion -> . STR_CONST
    (34) Expresion -> . INT_CONST
    (35) Expresion -> . OBJECTID
    (36) Expresion -> . { error }
    (37) Expresion -> . { Expresiones }
    (38) Expresion -> . NEW TYPEID
    (39) Expresion -> . CASE error OF RamasCase ESAC
    (40) Expresion -> . CASE OF RamasCase ESAC
    (41) Expresion -> . CASE Expresion OF RamasCase ESAC
    (42) Expresion -> . LET Declaraciones IN Expresion
    (43) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (44) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (45) Expresion -> . OBJECTID ParOptArgumentos
    (46) Expresion -> . Expresion . OBJECTID ParOptArgumentos
    (47) Expresion -> . Expresion @ TYPEID . OBJECTID ParOptArgumentos
    (48) Expresion -> . ~ Expresion
    (49) Expresion -> . ISVOID Expresion
    (50) Expresion -> . NOT Expresion
    (51) Expresion -> . ( Expresion )
    (52) Expresion -> . Expresion = Expresion
    (53) Expresion -> . Expresion LE Expresion
    (54) Expresion -> . Expresion < Expresion
    (55) Expresion -> . Expresion / Expresion
    (56) Expresion -> . Expresion * Expresion
    (57) Expresion -> . Expresion - Expresion
    (58) Expresion -> . Expresion + Expresion
    (59) Expresion -> . OBJECTID ASSIGN Expresion
    }               reduce using rule 78 (Expresiones -> Expresion ; .)
    error           shift and go to state 142
    BOOL_CONST      shift and go to state 53
    STR_CONST       shift and go to state 54
    INT_CONST       shift and go to state 55
    OBJECTID        shift and go to state 50
    {               shift and go to state 56
    NEW             shift and go to state 57
    CASE            shift and go to state 58
    LET             shift and go to state 59
    WHILE           shift and go to state 60
    IF              shift and go to state 61
    ~               shift and go to state 62
    ISVOID          shift and go to state 63
    NOT             shift and go to state 64
    (               shift and go to state 65

    Expresion                      shift and go to state 89
    Expresiones                    shift and go to state 144

state 124

    (39) Expresion -> CASE error OF . RamasCase ESAC
    (72) RamasCase -> . RamaCase RamasCase
    (73) RamasCase -> . RamaCase
    (74) RamaCase -> . OBJECTID : TYPEID DARROW Expresion ;
    OBJECTID        shift and go to state 127

    RamasCase                      shift and go to state 145
    RamaCase                       shift and go to state 126

state 125

    (40) Expresion -> CASE OF RamasCase . ESAC
    ESAC            shift and go to state 146


state 126

    (72) RamasCase -> RamaCase . RamasCase
    (73) RamasCase -> RamaCase .
    (72) RamasCase -> . RamaCase RamasCase
    (73) RamasCase -> . RamaCase
    (74) RamaCase -> . OBJECTID : TYPEID DARROW Expresion ;
    ESAC            reduce using rule 73 (RamasCase -> RamaCase .)
    OBJECTID        shift and go to state 127

    RamaCase                       shift and go to state 126
    RamasCase                      shift and go to state 147

state 127

    (74) RamaCase -> OBJECTID . : TYPEID DARROW Expresion ;
    :               shift and go to state 148


state 128

    (41) Expresion -> CASE Expresion OF . RamasCase ESAC
    (72) RamasCase -> . RamaCase RamasCase
    (73) RamasCase -> . RamaCase
    (74) RamaCase -> . OBJECTID : TYPEID DARROW Expresion ;
    OBJECTID        shift and go to state 127

    RamasCase                      shift and go to state 149
    RamaCase                       shift and go to state 126

state 129

    (42) Expresion -> LET Declaraciones IN . Expresion
    (32) Expresion -> . BOOL_CONST
    (33) Expresion -> . STR_CONST
    (34) Expresion -> . INT_CONST
    (35) Expresion -> . OBJECTID
    (36) Expresion -> . { error }
    (37) Expresion -> . { Expresiones }
    (38) Expresion -> . NEW TYPEID
    (39) Expresion -> . CASE error OF RamasCase ESAC
    (40) Expresion -> . CASE OF RamasCase ESAC
    (41) Expresion -> . CASE Expresion OF RamasCase ESAC
    (42) Expresion -> . LET Declaraciones IN Expresion
    (43) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (44) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (45) Expresion -> . OBJECTID ParOptArgumentos
    (46) Expresion -> . Expresion . OBJECTID ParOptArgumentos
    (47) Expresion -> . Expresion @ TYPEID . OBJECTID ParOptArgumentos
    (48) Expresion -> . ~ Expresion
    (49) Expresion -> . ISVOID Expresion
    (50) Expresion -> . NOT Expresion
    (51) Expresion -> . ( Expresion )
    (52) Expresion -> . Expresion = Expresion
    (53) Expresion -> . Expresion LE Expresion
    (54) Expresion -> . Expresion < Expresion
    (55) Expresion -> . Expresion / Expresion
    (56) Expresion -> . Expresion * Expresion
    (57) Expresion -> . Expresion - Expresion
    (58) Expresion -> . Expresion + Expresion
    (59) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 53
    STR_CONST       shift and go to state 54
    INT_CONST       shift and go to state 55
    OBJECTID        shift and go to state 50
    {               shift and go to state 56
    NEW             shift and go to state 57
    CASE            shift and go to state 58
    LET             shift and go to state 59
    WHILE           shift and go to state 60
    IF              shift and go to state 61
    ~               shift and go to state 62
    ISVOID          shift and go to state 63
    NOT             shift and go to state 64
    (               shift and go to state 65

    Expresion                      shift and go to state 150

state 130

    (67) Declaraciones -> error , . Declaraciones
    (67) Declaraciones -> . error , Declaraciones
    (68) Declaraciones -> . Declaracion , Declaraciones
    (69) Declaraciones -> . Declaracion
    (70) Declaracion -> . OBJECTID : TYPEID ASSIGN Expresion
    (71) Declaracion -> . OBJECTID : TYPEID
    error           shift and go to state 95
    OBJECTID        shift and go to state 97

    Declaraciones                  shift and go to state 151
    Declaracion                    shift and go to state 96

state 131

    (68) Declaraciones -> Declaracion , . Declaraciones
    (67) Declaraciones -> . error , Declaraciones
    (68) Declaraciones -> . Declaracion , Declaraciones
    (69) Declaraciones -> . Declaracion
    (70) Declaracion -> . OBJECTID : TYPEID ASSIGN Expresion
    (71) Declaracion -> . OBJECTID : TYPEID
    error           shift and go to state 95
    OBJECTID        shift and go to state 97

    Declaracion                    shift and go to state 96
    Declaraciones                  shift and go to state 152

state 132

    (70) Declaracion -> OBJECTID : . TYPEID ASSIGN Expresion
    (71) Declaracion -> OBJECTID : . TYPEID
    TYPEID          shift and go to state 153


state 133

    (43) Expresion -> WHILE Expresion LOOP . Expresion POOL
    (32) Expresion -> . BOOL_CONST
    (33) Expresion -> . STR_CONST
    (34) Expresion -> . INT_CONST
    (35) Expresion -> . OBJECTID
    (36) Expresion -> . { error }
    (37) Expresion -> . { Expresiones }
    (38) Expresion -> . NEW TYPEID
    (39) Expresion -> . CASE error OF RamasCase ESAC
    (40) Expresion -> . CASE OF RamasCase ESAC
    (41) Expresion -> . CASE Expresion OF RamasCase ESAC
    (42) Expresion -> . LET Declaraciones IN Expresion
    (43) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (44) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (45) Expresion -> . OBJECTID ParOptArgumentos
    (46) Expresion -> . Expresion . OBJECTID ParOptArgumentos
    (47) Expresion -> . Expresion @ TYPEID . OBJECTID ParOptArgumentos
    (48) Expresion -> . ~ Expresion
    (49) Expresion -> . ISVOID Expresion
    (50) Expresion -> . NOT Expresion
    (51) Expresion -> . ( Expresion )
    (52) Expresion -> . Expresion = Expresion
    (53) Expresion -> . Expresion LE Expresion
    (54) Expresion -> . Expresion < Expresion
    (55) Expresion -> . Expresion / Expresion
    (56) Expresion -> . Expresion * Expresion
    (57) Expresion -> . Expresion - Expresion
    (58) Expresion -> . Expresion + Expresion
    (59) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 53
    STR_CONST       shift and go to state 54
    INT_CONST       shift and go to state 55
    OBJECTID        shift and go to state 50
    {               shift and go to state 56
    NEW             shift and go to state 57
    CASE            shift and go to state 58
    LET             shift and go to state 59
    WHILE           shift and go to state 60
    IF              shift and go to state 61
    ~               shift and go to state 62
    ISVOID          shift and go to state 63
    NOT             shift and go to state 64
    (               shift and go to state 65

    Expresion                      shift and go to state 154

state 134

    (44) Expresion -> IF Expresion THEN . Expresion ELSE Expresion FI
    (32) Expresion -> . BOOL_CONST
    (33) Expresion -> . STR_CONST
    (34) Expresion -> . INT_CONST
    (35) Expresion -> . OBJECTID
    (36) Expresion -> . { error }
    (37) Expresion -> . { Expresiones }
    (38) Expresion -> . NEW TYPEID
    (39) Expresion -> . CASE error OF RamasCase ESAC
    (40) Expresion -> . CASE OF RamasCase ESAC
    (41) Expresion -> . CASE Expresion OF RamasCase ESAC
    (42) Expresion -> . LET Declaraciones IN Expresion
    (43) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (44) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (45) Expresion -> . OBJECTID ParOptArgumentos
    (46) Expresion -> . Expresion . OBJECTID ParOptArgumentos
    (47) Expresion -> . Expresion @ TYPEID . OBJECTID ParOptArgumentos
    (48) Expresion -> . ~ Expresion
    (49) Expresion -> . ISVOID Expresion
    (50) Expresion -> . NOT Expresion
    (51) Expresion -> . ( Expresion )
    (52) Expresion -> . Expresion = Expresion
    (53) Expresion -> . Expresion LE Expresion
    (54) Expresion -> . Expresion < Expresion
    (55) Expresion -> . Expresion / Expresion
    (56) Expresion -> . Expresion * Expresion
    (57) Expresion -> . Expresion - Expresion
    (58) Expresion -> . Expresion + Expresion
    (59) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 53
    STR_CONST       shift and go to state 54
    INT_CONST       shift and go to state 55
    OBJECTID        shift and go to state 50
    {               shift and go to state 56
    NEW             shift and go to state 57
    CASE            shift and go to state 58
    LET             shift and go to state 59
    WHILE           shift and go to state 60
    IF              shift and go to state 61
    ~               shift and go to state 62
    ISVOID          shift and go to state 63
    NOT             shift and go to state 64
    (               shift and go to state 65

    Expresion                      shift and go to state 155

state 135

    (51) Expresion -> ( Expresion ) .
    ;               reduce using rule 51 (Expresion -> ( Expresion ) .)
    .               reduce using rule 51 (Expresion -> ( Expresion ) .)
    @               reduce using rule 51 (Expresion -> ( Expresion ) .)
    =               reduce using rule 51 (Expresion -> ( Expresion ) .)
    LE              reduce using rule 51 (Expresion -> ( Expresion ) .)
    <               reduce using rule 51 (Expresion -> ( Expresion ) .)
    /               reduce using rule 51 (Expresion -> ( Expresion ) .)
    *               reduce using rule 51 (Expresion -> ( Expresion ) .)
    -               reduce using rule 51 (Expresion -> ( Expresion ) .)
    +               reduce using rule 51 (Expresion -> ( Expresion ) .)
    }               reduce using rule 51 (Expresion -> ( Expresion ) .)
    OF              reduce using rule 51 (Expresion -> ( Expresion ) .)
    LOOP            reduce using rule 51 (Expresion -> ( Expresion ) .)
    THEN            reduce using rule 51 (Expresion -> ( Expresion ) .)
    )               reduce using rule 51 (Expresion -> ( Expresion ) .)
    ,               reduce using rule 51 (Expresion -> ( Expresion ) .)
    error           reduce using rule 51 (Expresion -> ( Expresion ) .)
    POOL            reduce using rule 51 (Expresion -> ( Expresion ) .)
    ELSE            reduce using rule 51 (Expresion -> ( Expresion ) .)
    IN              reduce using rule 51 (Expresion -> ( Expresion ) .)
    FI              reduce using rule 51 (Expresion -> ( Expresion ) .)


state 136

    (60) ParOptArgumentos -> ( Argumentos error . )
    )               shift and go to state 156


state 137

    (61) ParOptArgumentos -> ( error ) .
    ;               reduce using rule 61 (ParOptArgumentos -> ( error ) .)
    .               reduce using rule 61 (ParOptArgumentos -> ( error ) .)
    @               reduce using rule 61 (ParOptArgumentos -> ( error ) .)
    =               reduce using rule 61 (ParOptArgumentos -> ( error ) .)
    LE              reduce using rule 61 (ParOptArgumentos -> ( error ) .)
    <               reduce using rule 61 (ParOptArgumentos -> ( error ) .)
    /               reduce using rule 61 (ParOptArgumentos -> ( error ) .)
    *               reduce using rule 61 (ParOptArgumentos -> ( error ) .)
    -               reduce using rule 61 (ParOptArgumentos -> ( error ) .)
    +               reduce using rule 61 (ParOptArgumentos -> ( error ) .)
    }               reduce using rule 61 (ParOptArgumentos -> ( error ) .)
    OF              reduce using rule 61 (ParOptArgumentos -> ( error ) .)
    LOOP            reduce using rule 61 (ParOptArgumentos -> ( error ) .)
    THEN            reduce using rule 61 (ParOptArgumentos -> ( error ) .)
    )               reduce using rule 61 (ParOptArgumentos -> ( error ) .)
    ,               reduce using rule 61 (ParOptArgumentos -> ( error ) .)
    error           reduce using rule 61 (ParOptArgumentos -> ( error ) .)
    POOL            reduce using rule 61 (ParOptArgumentos -> ( error ) .)
    ELSE            reduce using rule 61 (ParOptArgumentos -> ( error ) .)
    IN              reduce using rule 61 (ParOptArgumentos -> ( error ) .)
    FI              reduce using rule 61 (ParOptArgumentos -> ( error ) .)


state 138

    (62) ParOptArgumentos -> ( OptArgumentos ) .
    ;               reduce using rule 62 (ParOptArgumentos -> ( OptArgumentos ) .)
    .               reduce using rule 62 (ParOptArgumentos -> ( OptArgumentos ) .)
    @               reduce using rule 62 (ParOptArgumentos -> ( OptArgumentos ) .)
    =               reduce using rule 62 (ParOptArgumentos -> ( OptArgumentos ) .)
    LE              reduce using rule 62 (ParOptArgumentos -> ( OptArgumentos ) .)
    <               reduce using rule 62 (ParOptArgumentos -> ( OptArgumentos ) .)
    /               reduce using rule 62 (ParOptArgumentos -> ( OptArgumentos ) .)
    *               reduce using rule 62 (ParOptArgumentos -> ( OptArgumentos ) .)
    -               reduce using rule 62 (ParOptArgumentos -> ( OptArgumentos ) .)
    +               reduce using rule 62 (ParOptArgumentos -> ( OptArgumentos ) .)
    }               reduce using rule 62 (ParOptArgumentos -> ( OptArgumentos ) .)
    OF              reduce using rule 62 (ParOptArgumentos -> ( OptArgumentos ) .)
    LOOP            reduce using rule 62 (ParOptArgumentos -> ( OptArgumentos ) .)
    THEN            reduce using rule 62 (ParOptArgumentos -> ( OptArgumentos ) .)
    )               reduce using rule 62 (ParOptArgumentos -> ( OptArgumentos ) .)
    ,               reduce using rule 62 (ParOptArgumentos -> ( OptArgumentos ) .)
    error           reduce using rule 62 (ParOptArgumentos -> ( OptArgumentos ) .)
    POOL            reduce using rule 62 (ParOptArgumentos -> ( OptArgumentos ) .)
    ELSE            reduce using rule 62 (ParOptArgumentos -> ( OptArgumentos ) .)
    IN              reduce using rule 62 (ParOptArgumentos -> ( OptArgumentos ) .)
    FI              reduce using rule 62 (ParOptArgumentos -> ( OptArgumentos ) .)


state 139

    (65) Argumentos -> Expresion , . Argumentos
    (65) Argumentos -> . Expresion , Argumentos
    (66) Argumentos -> . Expresion
    (32) Expresion -> . BOOL_CONST
    (33) Expresion -> . STR_CONST
    (34) Expresion -> . INT_CONST
    (35) Expresion -> . OBJECTID
    (36) Expresion -> . { error }
    (37) Expresion -> . { Expresiones }
    (38) Expresion -> . NEW TYPEID
    (39) Expresion -> . CASE error OF RamasCase ESAC
    (40) Expresion -> . CASE OF RamasCase ESAC
    (41) Expresion -> . CASE Expresion OF RamasCase ESAC
    (42) Expresion -> . LET Declaraciones IN Expresion
    (43) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (44) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (45) Expresion -> . OBJECTID ParOptArgumentos
    (46) Expresion -> . Expresion . OBJECTID ParOptArgumentos
    (47) Expresion -> . Expresion @ TYPEID . OBJECTID ParOptArgumentos
    (48) Expresion -> . ~ Expresion
    (49) Expresion -> . ISVOID Expresion
    (50) Expresion -> . NOT Expresion
    (51) Expresion -> . ( Expresion )
    (52) Expresion -> . Expresion = Expresion
    (53) Expresion -> . Expresion LE Expresion
    (54) Expresion -> . Expresion < Expresion
    (55) Expresion -> . Expresion / Expresion
    (56) Expresion -> . Expresion * Expresion
    (57) Expresion -> . Expresion - Expresion
    (58) Expresion -> . Expresion + Expresion
    (59) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 53
    STR_CONST       shift and go to state 54
    INT_CONST       shift and go to state 55
    OBJECTID        shift and go to state 50
    {               shift and go to state 56
    NEW             shift and go to state 57
    CASE            shift and go to state 58
    LET             shift and go to state 59
    WHILE           shift and go to state 60
    IF              shift and go to state 61
    ~               shift and go to state 62
    ISVOID          shift and go to state 63
    NOT             shift and go to state 64
    (               shift and go to state 65

    Expresion                      shift and go to state 110
    Argumentos                     shift and go to state 157

state 140

    (46) Expresion -> Expresion . OBJECTID ParOptArgumentos .
    ;               reduce using rule 46 (Expresion -> Expresion . OBJECTID ParOptArgumentos .)
    .               reduce using rule 46 (Expresion -> Expresion . OBJECTID ParOptArgumentos .)
    @               reduce using rule 46 (Expresion -> Expresion . OBJECTID ParOptArgumentos .)
    =               reduce using rule 46 (Expresion -> Expresion . OBJECTID ParOptArgumentos .)
    LE              reduce using rule 46 (Expresion -> Expresion . OBJECTID ParOptArgumentos .)
    <               reduce using rule 46 (Expresion -> Expresion . OBJECTID ParOptArgumentos .)
    /               reduce using rule 46 (Expresion -> Expresion . OBJECTID ParOptArgumentos .)
    *               reduce using rule 46 (Expresion -> Expresion . OBJECTID ParOptArgumentos .)
    -               reduce using rule 46 (Expresion -> Expresion . OBJECTID ParOptArgumentos .)
    +               reduce using rule 46 (Expresion -> Expresion . OBJECTID ParOptArgumentos .)
    }               reduce using rule 46 (Expresion -> Expresion . OBJECTID ParOptArgumentos .)
    OF              reduce using rule 46 (Expresion -> Expresion . OBJECTID ParOptArgumentos .)
    LOOP            reduce using rule 46 (Expresion -> Expresion . OBJECTID ParOptArgumentos .)
    THEN            reduce using rule 46 (Expresion -> Expresion . OBJECTID ParOptArgumentos .)
    )               reduce using rule 46 (Expresion -> Expresion . OBJECTID ParOptArgumentos .)
    ,               reduce using rule 46 (Expresion -> Expresion . OBJECTID ParOptArgumentos .)
    error           reduce using rule 46 (Expresion -> Expresion . OBJECTID ParOptArgumentos .)
    POOL            reduce using rule 46 (Expresion -> Expresion . OBJECTID ParOptArgumentos .)
    ELSE            reduce using rule 46 (Expresion -> Expresion . OBJECTID ParOptArgumentos .)
    IN              reduce using rule 46 (Expresion -> Expresion . OBJECTID ParOptArgumentos .)
    FI              reduce using rule 46 (Expresion -> Expresion . OBJECTID ParOptArgumentos .)


state 141

    (47) Expresion -> Expresion @ TYPEID . . OBJECTID ParOptArgumentos
    OBJECTID        shift and go to state 158


state 142

    (75) Expresiones -> error . ; Expresiones
    (76) Expresiones -> error . ;
    ;               shift and go to state 121


state 143

    (75) Expresiones -> error ; Expresiones .
    }               reduce using rule 75 (Expresiones -> error ; Expresiones .)


state 144

    (77) Expresiones -> Expresion ; Expresiones .
    }               reduce using rule 77 (Expresiones -> Expresion ; Expresiones .)


state 145

    (39) Expresion -> CASE error OF RamasCase . ESAC
    ESAC            shift and go to state 159


state 146

    (40) Expresion -> CASE OF RamasCase ESAC .
    ;               reduce using rule 40 (Expresion -> CASE OF RamasCase ESAC .)
    .               reduce using rule 40 (Expresion -> CASE OF RamasCase ESAC .)
    @               reduce using rule 40 (Expresion -> CASE OF RamasCase ESAC .)
    =               reduce using rule 40 (Expresion -> CASE OF RamasCase ESAC .)
    LE              reduce using rule 40 (Expresion -> CASE OF RamasCase ESAC .)
    <               reduce using rule 40 (Expresion -> CASE OF RamasCase ESAC .)
    /               reduce using rule 40 (Expresion -> CASE OF RamasCase ESAC .)
    *               reduce using rule 40 (Expresion -> CASE OF RamasCase ESAC .)
    -               reduce using rule 40 (Expresion -> CASE OF RamasCase ESAC .)
    +               reduce using rule 40 (Expresion -> CASE OF RamasCase ESAC .)
    }               reduce using rule 40 (Expresion -> CASE OF RamasCase ESAC .)
    OF              reduce using rule 40 (Expresion -> CASE OF RamasCase ESAC .)
    LOOP            reduce using rule 40 (Expresion -> CASE OF RamasCase ESAC .)
    THEN            reduce using rule 40 (Expresion -> CASE OF RamasCase ESAC .)
    )               reduce using rule 40 (Expresion -> CASE OF RamasCase ESAC .)
    ,               reduce using rule 40 (Expresion -> CASE OF RamasCase ESAC .)
    error           reduce using rule 40 (Expresion -> CASE OF RamasCase ESAC .)
    POOL            reduce using rule 40 (Expresion -> CASE OF RamasCase ESAC .)
    ELSE            reduce using rule 40 (Expresion -> CASE OF RamasCase ESAC .)
    IN              reduce using rule 40 (Expresion -> CASE OF RamasCase ESAC .)
    FI              reduce using rule 40 (Expresion -> CASE OF RamasCase ESAC .)


state 147

    (72) RamasCase -> RamaCase RamasCase .
    ESAC            reduce using rule 72 (RamasCase -> RamaCase RamasCase .)


state 148

    (74) RamaCase -> OBJECTID : . TYPEID DARROW Expresion ;
    TYPEID          shift and go to state 160


state 149

    (41) Expresion -> CASE Expresion OF RamasCase . ESAC
    ESAC            shift and go to state 161


state 150

    (42) Expresion -> LET Declaraciones IN Expresion .
    (46) Expresion -> Expresion . . OBJECTID ParOptArgumentos
    (47) Expresion -> Expresion . @ TYPEID . OBJECTID ParOptArgumentos
    (52) Expresion -> Expresion . = Expresion
    (53) Expresion -> Expresion . LE Expresion
    (54) Expresion -> Expresion . < Expresion
    (55) Expresion -> Expresion . / Expresion
    (56) Expresion -> Expresion . * Expresion
    (57) Expresion -> Expresion . - Expresion
    (58) Expresion -> Expresion . + Expresion
    ;               reduce using rule 42 (Expresion -> LET Declaraciones IN Expresion .)
    }               reduce using rule 42 (Expresion -> LET Declaraciones IN Expresion .)
    OF              reduce using rule 42 (Expresion -> LET Declaraciones IN Expresion .)
    LOOP            reduce using rule 42 (Expresion -> LET Declaraciones IN Expresion .)
    THEN            reduce using rule 42 (Expresion -> LET Declaraciones IN Expresion .)
    )               reduce using rule 42 (Expresion -> LET Declaraciones IN Expresion .)
    ,               reduce using rule 42 (Expresion -> LET Declaraciones IN Expresion .)
    error           reduce using rule 42 (Expresion -> LET Declaraciones IN Expresion .)
    POOL            reduce using rule 42 (Expresion -> LET Declaraciones IN Expresion .)
    ELSE            reduce using rule 42 (Expresion -> LET Declaraciones IN Expresion .)
    IN              reduce using rule 42 (Expresion -> LET Declaraciones IN Expresion .)
    FI              reduce using rule 42 (Expresion -> LET Declaraciones IN Expresion .)
    .               shift and go to state 78
    @               shift and go to state 79
    =               shift and go to state 80
    LE              shift and go to state 81
    <               shift and go to state 82
    /               shift and go to state 83
    *               shift and go to state 84
    -               shift and go to state 85
    +               shift and go to state 86


state 151

    (67) Declaraciones -> error , Declaraciones .
    IN              reduce using rule 67 (Declaraciones -> error , Declaraciones .)


state 152

    (68) Declaraciones -> Declaracion , Declaraciones .
    IN              reduce using rule 68 (Declaraciones -> Declaracion , Declaraciones .)


state 153

    (70) Declaracion -> OBJECTID : TYPEID . ASSIGN Expresion
    (71) Declaracion -> OBJECTID : TYPEID .
    ASSIGN          shift and go to state 162
    ,               reduce using rule 71 (Declaracion -> OBJECTID : TYPEID .)
    IN              reduce using rule 71 (Declaracion -> OBJECTID : TYPEID .)


state 154

    (43) Expresion -> WHILE Expresion LOOP Expresion . POOL
    (46) Expresion -> Expresion . . OBJECTID ParOptArgumentos
    (47) Expresion -> Expresion . @ TYPEID . OBJECTID ParOptArgumentos
    (52) Expresion -> Expresion . = Expresion
    (53) Expresion -> Expresion . LE Expresion
    (54) Expresion -> Expresion . < Expresion
    (55) Expresion -> Expresion . / Expresion
    (56) Expresion -> Expresion . * Expresion
    (57) Expresion -> Expresion . - Expresion
    (58) Expresion -> Expresion . + Expresion
    POOL            shift and go to state 163
    .               shift and go to state 78
    @               shift and go to state 79
    =               shift and go to state 80
    LE              shift and go to state 81
    <               shift and go to state 82
    /               shift and go to state 83
    *               shift and go to state 84
    -               shift and go to state 85
    +               shift and go to state 86


state 155

    (44) Expresion -> IF Expresion THEN Expresion . ELSE Expresion FI
    (46) Expresion -> Expresion . . OBJECTID ParOptArgumentos
    (47) Expresion -> Expresion . @ TYPEID . OBJECTID ParOptArgumentos
    (52) Expresion -> Expresion . = Expresion
    (53) Expresion -> Expresion . LE Expresion
    (54) Expresion -> Expresion . < Expresion
    (55) Expresion -> Expresion . / Expresion
    (56) Expresion -> Expresion . * Expresion
    (57) Expresion -> Expresion . - Expresion
    (58) Expresion -> Expresion . + Expresion
    ELSE            shift and go to state 164
    .               shift and go to state 78
    @               shift and go to state 79
    =               shift and go to state 80
    LE              shift and go to state 81
    <               shift and go to state 82
    /               shift and go to state 83
    *               shift and go to state 84
    -               shift and go to state 85
    +               shift and go to state 86


state 156

    (60) ParOptArgumentos -> ( Argumentos error ) .
    ;               reduce using rule 60 (ParOptArgumentos -> ( Argumentos error ) .)
    .               reduce using rule 60 (ParOptArgumentos -> ( Argumentos error ) .)
    @               reduce using rule 60 (ParOptArgumentos -> ( Argumentos error ) .)
    =               reduce using rule 60 (ParOptArgumentos -> ( Argumentos error ) .)
    LE              reduce using rule 60 (ParOptArgumentos -> ( Argumentos error ) .)
    <               reduce using rule 60 (ParOptArgumentos -> ( Argumentos error ) .)
    /               reduce using rule 60 (ParOptArgumentos -> ( Argumentos error ) .)
    *               reduce using rule 60 (ParOptArgumentos -> ( Argumentos error ) .)
    -               reduce using rule 60 (ParOptArgumentos -> ( Argumentos error ) .)
    +               reduce using rule 60 (ParOptArgumentos -> ( Argumentos error ) .)
    }               reduce using rule 60 (ParOptArgumentos -> ( Argumentos error ) .)
    OF              reduce using rule 60 (ParOptArgumentos -> ( Argumentos error ) .)
    LOOP            reduce using rule 60 (ParOptArgumentos -> ( Argumentos error ) .)
    THEN            reduce using rule 60 (ParOptArgumentos -> ( Argumentos error ) .)
    )               reduce using rule 60 (ParOptArgumentos -> ( Argumentos error ) .)
    ,               reduce using rule 60 (ParOptArgumentos -> ( Argumentos error ) .)
    error           reduce using rule 60 (ParOptArgumentos -> ( Argumentos error ) .)
    POOL            reduce using rule 60 (ParOptArgumentos -> ( Argumentos error ) .)
    ELSE            reduce using rule 60 (ParOptArgumentos -> ( Argumentos error ) .)
    IN              reduce using rule 60 (ParOptArgumentos -> ( Argumentos error ) .)
    FI              reduce using rule 60 (ParOptArgumentos -> ( Argumentos error ) .)


state 157

    (65) Argumentos -> Expresion , Argumentos .
    error           reduce using rule 65 (Argumentos -> Expresion , Argumentos .)
    )               reduce using rule 65 (Argumentos -> Expresion , Argumentos .)


state 158

    (47) Expresion -> Expresion @ TYPEID . OBJECTID . ParOptArgumentos
    (60) ParOptArgumentos -> . ( Argumentos error )
    (61) ParOptArgumentos -> . ( error )
    (62) ParOptArgumentos -> . ( OptArgumentos )
    (               shift and go to state 75

    ParOptArgumentos               shift and go to state 165

state 159

    (39) Expresion -> CASE error OF RamasCase ESAC .
    ;               reduce using rule 39 (Expresion -> CASE error OF RamasCase ESAC .)
    .               reduce using rule 39 (Expresion -> CASE error OF RamasCase ESAC .)
    @               reduce using rule 39 (Expresion -> CASE error OF RamasCase ESAC .)
    =               reduce using rule 39 (Expresion -> CASE error OF RamasCase ESAC .)
    LE              reduce using rule 39 (Expresion -> CASE error OF RamasCase ESAC .)
    <               reduce using rule 39 (Expresion -> CASE error OF RamasCase ESAC .)
    /               reduce using rule 39 (Expresion -> CASE error OF RamasCase ESAC .)
    *               reduce using rule 39 (Expresion -> CASE error OF RamasCase ESAC .)
    -               reduce using rule 39 (Expresion -> CASE error OF RamasCase ESAC .)
    +               reduce using rule 39 (Expresion -> CASE error OF RamasCase ESAC .)
    }               reduce using rule 39 (Expresion -> CASE error OF RamasCase ESAC .)
    OF              reduce using rule 39 (Expresion -> CASE error OF RamasCase ESAC .)
    LOOP            reduce using rule 39 (Expresion -> CASE error OF RamasCase ESAC .)
    THEN            reduce using rule 39 (Expresion -> CASE error OF RamasCase ESAC .)
    )               reduce using rule 39 (Expresion -> CASE error OF RamasCase ESAC .)
    ,               reduce using rule 39 (Expresion -> CASE error OF RamasCase ESAC .)
    error           reduce using rule 39 (Expresion -> CASE error OF RamasCase ESAC .)
    POOL            reduce using rule 39 (Expresion -> CASE error OF RamasCase ESAC .)
    ELSE            reduce using rule 39 (Expresion -> CASE error OF RamasCase ESAC .)
    IN              reduce using rule 39 (Expresion -> CASE error OF RamasCase ESAC .)
    FI              reduce using rule 39 (Expresion -> CASE error OF RamasCase ESAC .)


state 160

    (74) RamaCase -> OBJECTID : TYPEID . DARROW Expresion ;
    DARROW          shift and go to state 166


state 161

    (41) Expresion -> CASE Expresion OF RamasCase ESAC .
    ;               reduce using rule 41 (Expresion -> CASE Expresion OF RamasCase ESAC .)
    .               reduce using rule 41 (Expresion -> CASE Expresion OF RamasCase ESAC .)
    @               reduce using rule 41 (Expresion -> CASE Expresion OF RamasCase ESAC .)
    =               reduce using rule 41 (Expresion -> CASE Expresion OF RamasCase ESAC .)
    LE              reduce using rule 41 (Expresion -> CASE Expresion OF RamasCase ESAC .)
    <               reduce using rule 41 (Expresion -> CASE Expresion OF RamasCase ESAC .)
    /               reduce using rule 41 (Expresion -> CASE Expresion OF RamasCase ESAC .)
    *               reduce using rule 41 (Expresion -> CASE Expresion OF RamasCase ESAC .)
    -               reduce using rule 41 (Expresion -> CASE Expresion OF RamasCase ESAC .)
    +               reduce using rule 41 (Expresion -> CASE Expresion OF RamasCase ESAC .)
    }               reduce using rule 41 (Expresion -> CASE Expresion OF RamasCase ESAC .)
    OF              reduce using rule 41 (Expresion -> CASE Expresion OF RamasCase ESAC .)
    LOOP            reduce using rule 41 (Expresion -> CASE Expresion OF RamasCase ESAC .)
    THEN            reduce using rule 41 (Expresion -> CASE Expresion OF RamasCase ESAC .)
    )               reduce using rule 41 (Expresion -> CASE Expresion OF RamasCase ESAC .)
    ,               reduce using rule 41 (Expresion -> CASE Expresion OF RamasCase ESAC .)
    error           reduce using rule 41 (Expresion -> CASE Expresion OF RamasCase ESAC .)
    POOL            reduce using rule 41 (Expresion -> CASE Expresion OF RamasCase ESAC .)
    ELSE            reduce using rule 41 (Expresion -> CASE Expresion OF RamasCase ESAC .)
    IN              reduce using rule 41 (Expresion -> CASE Expresion OF RamasCase ESAC .)
    FI              reduce using rule 41 (Expresion -> CASE Expresion OF RamasCase ESAC .)


state 162

    (70) Declaracion -> OBJECTID : TYPEID ASSIGN . Expresion
    (32) Expresion -> . BOOL_CONST
    (33) Expresion -> . STR_CONST
    (34) Expresion -> . INT_CONST
    (35) Expresion -> . OBJECTID
    (36) Expresion -> . { error }
    (37) Expresion -> . { Expresiones }
    (38) Expresion -> . NEW TYPEID
    (39) Expresion -> . CASE error OF RamasCase ESAC
    (40) Expresion -> . CASE OF RamasCase ESAC
    (41) Expresion -> . CASE Expresion OF RamasCase ESAC
    (42) Expresion -> . LET Declaraciones IN Expresion
    (43) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (44) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (45) Expresion -> . OBJECTID ParOptArgumentos
    (46) Expresion -> . Expresion . OBJECTID ParOptArgumentos
    (47) Expresion -> . Expresion @ TYPEID . OBJECTID ParOptArgumentos
    (48) Expresion -> . ~ Expresion
    (49) Expresion -> . ISVOID Expresion
    (50) Expresion -> . NOT Expresion
    (51) Expresion -> . ( Expresion )
    (52) Expresion -> . Expresion = Expresion
    (53) Expresion -> . Expresion LE Expresion
    (54) Expresion -> . Expresion < Expresion
    (55) Expresion -> . Expresion / Expresion
    (56) Expresion -> . Expresion * Expresion
    (57) Expresion -> . Expresion - Expresion
    (58) Expresion -> . Expresion + Expresion
    (59) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 53
    STR_CONST       shift and go to state 54
    INT_CONST       shift and go to state 55
    OBJECTID        shift and go to state 50
    {               shift and go to state 56
    NEW             shift and go to state 57
    CASE            shift and go to state 58
    LET             shift and go to state 59
    WHILE           shift and go to state 60
    IF              shift and go to state 61
    ~               shift and go to state 62
    ISVOID          shift and go to state 63
    NOT             shift and go to state 64
    (               shift and go to state 65

    Expresion                      shift and go to state 167

state 163

    (43) Expresion -> WHILE Expresion LOOP Expresion POOL .
    ;               reduce using rule 43 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    .               reduce using rule 43 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    @               reduce using rule 43 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    =               reduce using rule 43 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    LE              reduce using rule 43 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    <               reduce using rule 43 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    /               reduce using rule 43 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    *               reduce using rule 43 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    -               reduce using rule 43 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    +               reduce using rule 43 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    }               reduce using rule 43 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    OF              reduce using rule 43 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    LOOP            reduce using rule 43 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    THEN            reduce using rule 43 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    )               reduce using rule 43 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    ,               reduce using rule 43 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    error           reduce using rule 43 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    POOL            reduce using rule 43 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    ELSE            reduce using rule 43 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    IN              reduce using rule 43 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    FI              reduce using rule 43 (Expresion -> WHILE Expresion LOOP Expresion POOL .)


state 164

    (44) Expresion -> IF Expresion THEN Expresion ELSE . Expresion FI
    (32) Expresion -> . BOOL_CONST
    (33) Expresion -> . STR_CONST
    (34) Expresion -> . INT_CONST
    (35) Expresion -> . OBJECTID
    (36) Expresion -> . { error }
    (37) Expresion -> . { Expresiones }
    (38) Expresion -> . NEW TYPEID
    (39) Expresion -> . CASE error OF RamasCase ESAC
    (40) Expresion -> . CASE OF RamasCase ESAC
    (41) Expresion -> . CASE Expresion OF RamasCase ESAC
    (42) Expresion -> . LET Declaraciones IN Expresion
    (43) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (44) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (45) Expresion -> . OBJECTID ParOptArgumentos
    (46) Expresion -> . Expresion . OBJECTID ParOptArgumentos
    (47) Expresion -> . Expresion @ TYPEID . OBJECTID ParOptArgumentos
    (48) Expresion -> . ~ Expresion
    (49) Expresion -> . ISVOID Expresion
    (50) Expresion -> . NOT Expresion
    (51) Expresion -> . ( Expresion )
    (52) Expresion -> . Expresion = Expresion
    (53) Expresion -> . Expresion LE Expresion
    (54) Expresion -> . Expresion < Expresion
    (55) Expresion -> . Expresion / Expresion
    (56) Expresion -> . Expresion * Expresion
    (57) Expresion -> . Expresion - Expresion
    (58) Expresion -> . Expresion + Expresion
    (59) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 53
    STR_CONST       shift and go to state 54
    INT_CONST       shift and go to state 55
    OBJECTID        shift and go to state 50
    {               shift and go to state 56
    NEW             shift and go to state 57
    CASE            shift and go to state 58
    LET             shift and go to state 59
    WHILE           shift and go to state 60
    IF              shift and go to state 61
    ~               shift and go to state 62
    ISVOID          shift and go to state 63
    NOT             shift and go to state 64
    (               shift and go to state 65

    Expresion                      shift and go to state 168

state 165

    (47) Expresion -> Expresion @ TYPEID . OBJECTID ParOptArgumentos .
    ;               reduce using rule 47 (Expresion -> Expresion @ TYPEID . OBJECTID ParOptArgumentos .)
    .               reduce using rule 47 (Expresion -> Expresion @ TYPEID . OBJECTID ParOptArgumentos .)
    @               reduce using rule 47 (Expresion -> Expresion @ TYPEID . OBJECTID ParOptArgumentos .)
    =               reduce using rule 47 (Expresion -> Expresion @ TYPEID . OBJECTID ParOptArgumentos .)
    LE              reduce using rule 47 (Expresion -> Expresion @ TYPEID . OBJECTID ParOptArgumentos .)
    <               reduce using rule 47 (Expresion -> Expresion @ TYPEID . OBJECTID ParOptArgumentos .)
    /               reduce using rule 47 (Expresion -> Expresion @ TYPEID . OBJECTID ParOptArgumentos .)
    *               reduce using rule 47 (Expresion -> Expresion @ TYPEID . OBJECTID ParOptArgumentos .)
    -               reduce using rule 47 (Expresion -> Expresion @ TYPEID . OBJECTID ParOptArgumentos .)
    +               reduce using rule 47 (Expresion -> Expresion @ TYPEID . OBJECTID ParOptArgumentos .)
    }               reduce using rule 47 (Expresion -> Expresion @ TYPEID . OBJECTID ParOptArgumentos .)
    OF              reduce using rule 47 (Expresion -> Expresion @ TYPEID . OBJECTID ParOptArgumentos .)
    LOOP            reduce using rule 47 (Expresion -> Expresion @ TYPEID . OBJECTID ParOptArgumentos .)
    THEN            reduce using rule 47 (Expresion -> Expresion @ TYPEID . OBJECTID ParOptArgumentos .)
    )               reduce using rule 47 (Expresion -> Expresion @ TYPEID . OBJECTID ParOptArgumentos .)
    ,               reduce using rule 47 (Expresion -> Expresion @ TYPEID . OBJECTID ParOptArgumentos .)
    error           reduce using rule 47 (Expresion -> Expresion @ TYPEID . OBJECTID ParOptArgumentos .)
    POOL            reduce using rule 47 (Expresion -> Expresion @ TYPEID . OBJECTID ParOptArgumentos .)
    ELSE            reduce using rule 47 (Expresion -> Expresion @ TYPEID . OBJECTID ParOptArgumentos .)
    IN              reduce using rule 47 (Expresion -> Expresion @ TYPEID . OBJECTID ParOptArgumentos .)
    FI              reduce using rule 47 (Expresion -> Expresion @ TYPEID . OBJECTID ParOptArgumentos .)


state 166

    (74) RamaCase -> OBJECTID : TYPEID DARROW . Expresion ;
    (32) Expresion -> . BOOL_CONST
    (33) Expresion -> . STR_CONST
    (34) Expresion -> . INT_CONST
    (35) Expresion -> . OBJECTID
    (36) Expresion -> . { error }
    (37) Expresion -> . { Expresiones }
    (38) Expresion -> . NEW TYPEID
    (39) Expresion -> . CASE error OF RamasCase ESAC
    (40) Expresion -> . CASE OF RamasCase ESAC
    (41) Expresion -> . CASE Expresion OF RamasCase ESAC
    (42) Expresion -> . LET Declaraciones IN Expresion
    (43) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (44) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (45) Expresion -> . OBJECTID ParOptArgumentos
    (46) Expresion -> . Expresion . OBJECTID ParOptArgumentos
    (47) Expresion -> . Expresion @ TYPEID . OBJECTID ParOptArgumentos
    (48) Expresion -> . ~ Expresion
    (49) Expresion -> . ISVOID Expresion
    (50) Expresion -> . NOT Expresion
    (51) Expresion -> . ( Expresion )
    (52) Expresion -> . Expresion = Expresion
    (53) Expresion -> . Expresion LE Expresion
    (54) Expresion -> . Expresion < Expresion
    (55) Expresion -> . Expresion / Expresion
    (56) Expresion -> . Expresion * Expresion
    (57) Expresion -> . Expresion - Expresion
    (58) Expresion -> . Expresion + Expresion
    (59) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 53
    STR_CONST       shift and go to state 54
    INT_CONST       shift and go to state 55
    OBJECTID        shift and go to state 50
    {               shift and go to state 56
    NEW             shift and go to state 57
    CASE            shift and go to state 58
    LET             shift and go to state 59
    WHILE           shift and go to state 60
    IF              shift and go to state 61
    ~               shift and go to state 62
    ISVOID          shift and go to state 63
    NOT             shift and go to state 64
    (               shift and go to state 65

    Expresion                      shift and go to state 169

state 167

    (70) Declaracion -> OBJECTID : TYPEID ASSIGN Expresion .
    (46) Expresion -> Expresion . . OBJECTID ParOptArgumentos
    (47) Expresion -> Expresion . @ TYPEID . OBJECTID ParOptArgumentos
    (52) Expresion -> Expresion . = Expresion
    (53) Expresion -> Expresion . LE Expresion
    (54) Expresion -> Expresion . < Expresion
    (55) Expresion -> Expresion . / Expresion
    (56) Expresion -> Expresion . * Expresion
    (57) Expresion -> Expresion . - Expresion
    (58) Expresion -> Expresion . + Expresion
    ,               reduce using rule 70 (Declaracion -> OBJECTID : TYPEID ASSIGN Expresion .)
    IN              reduce using rule 70 (Declaracion -> OBJECTID : TYPEID ASSIGN Expresion .)
    .               shift and go to state 78
    @               shift and go to state 79
    =               shift and go to state 80
    LE              shift and go to state 81
    <               shift and go to state 82
    /               shift and go to state 83
    *               shift and go to state 84
    -               shift and go to state 85
    +               shift and go to state 86


state 168

    (44) Expresion -> IF Expresion THEN Expresion ELSE Expresion . FI
    (46) Expresion -> Expresion . . OBJECTID ParOptArgumentos
    (47) Expresion -> Expresion . @ TYPEID . OBJECTID ParOptArgumentos
    (52) Expresion -> Expresion . = Expresion
    (53) Expresion -> Expresion . LE Expresion
    (54) Expresion -> Expresion . < Expresion
    (55) Expresion -> Expresion . / Expresion
    (56) Expresion -> Expresion . * Expresion
    (57) Expresion -> Expresion . - Expresion
    (58) Expresion -> Expresion . + Expresion
    FI              shift and go to state 170
    .               shift and go to state 78
    @               shift and go to state 79
    =               shift and go to state 80
    LE              shift and go to state 81
    <               shift and go to state 82
    /               shift and go to state 83
    *               shift and go to state 84
    -               shift and go to state 85
    +               shift and go to state 86


state 169

    (74) RamaCase -> OBJECTID : TYPEID DARROW Expresion . ;
    (46) Expresion -> Expresion . . OBJECTID ParOptArgumentos
    (47) Expresion -> Expresion . @ TYPEID . OBJECTID ParOptArgumentos
    (52) Expresion -> Expresion . = Expresion
    (53) Expresion -> Expresion . LE Expresion
    (54) Expresion -> Expresion . < Expresion
    (55) Expresion -> Expresion . / Expresion
    (56) Expresion -> Expresion . * Expresion
    (57) Expresion -> Expresion . - Expresion
    (58) Expresion -> Expresion . + Expresion
    ;               shift and go to state 171
    .               shift and go to state 78
    @               shift and go to state 79
    =               shift and go to state 80
    LE              shift and go to state 81
    <               shift and go to state 82
    /               shift and go to state 83
    *               shift and go to state 84
    -               shift and go to state 85
    +               shift and go to state 86


state 170

    (44) Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .
    ;               reduce using rule 44 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    .               reduce using rule 44 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    @               reduce using rule 44 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    =               reduce using rule 44 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    LE              reduce using rule 44 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    <               reduce using rule 44 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    /               reduce using rule 44 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    *               reduce using rule 44 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    -               reduce using rule 44 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    +               reduce using rule 44 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    }               reduce using rule 44 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    OF              reduce using rule 44 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    LOOP            reduce using rule 44 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    THEN            reduce using rule 44 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    )               reduce using rule 44 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    ,               reduce using rule 44 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    error           reduce using rule 44 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    POOL            reduce using rule 44 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    ELSE            reduce using rule 44 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    IN              reduce using rule 44 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    FI              reduce using rule 44 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)


state 171

    (74) RamaCase -> OBJECTID : TYPEID DARROW Expresion ; .
    OBJECTID        reduce using rule 74 (RamaCase -> OBJECTID : TYPEID DARROW Expresion ; .)
    ESAC            reduce using rule 74 (RamaCase -> OBJECTID : TYPEID DARROW Expresion ; .)


Conflicts:

shift/reduce conflict for error in state 13 resolved as shift
shift/reduce conflict for error in state 32 resolved as shift