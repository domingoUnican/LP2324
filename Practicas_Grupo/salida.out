Grammar:

Rule 0     S' -> Programa
Rule 1     Programa -> Clase
Rule 2     Programa -> Programa Clase
Rule 3     Clase -> CLASS TYPEID optInherit { lista_atr_met } ;
Rule 4     optInherit -> INHERITS TYPEID
Rule 5     optInherit -> <empty>
Rule 6     lista_atr_met -> Metodo lista_atr_met
Rule 7     lista_atr_met -> Atributo lista_atr_met
Rule 8     lista_atr_met -> Metodo
Rule 9     lista_atr_met -> Atributo
Rule 10    lista_atr_met -> <empty>
Rule 11    Atributo -> OBJECTID : TYPEID optAssign ;
Rule 12    optAssign -> ASSIGN Expresion
Rule 13    optAssign -> <empty>
Rule 14    Metodo -> OBJECTID ( listaFormales ) : TYPEID { Expresion } ;
Rule 15    Metodo -> OBJECTID ( ) : TYPEID { Expresion } ;
Rule 16    listaFormales -> Formal , listaFormales
Rule 17    listaFormales -> Formal
Rule 18    Formal -> OBJECTID : TYPEID
Rule 19    Expresion -> BOOL_CONST
Rule 20    Expresion -> STR_CONST
Rule 21    Expresion -> INT_CONST
Rule 22    Expresion -> OBJECTID
Rule 23    Expresion -> { bloque }
Rule 24    Expresion -> NEW TYPEID
Rule 25    Expresion -> CASE Expresion OF plusExpresion ; ESAC
Rule 26    Expresion -> LET OBJECTID : TYPEID optArrow starFormal IN Expresion
Rule 27    Expresion -> WHILE Expresion LOOP Expresion POOL
Rule 28    Expresion -> IF Expresion THEN Expresion ELSE Expresion FI
Rule 29    Expresion -> optExpresion OBJECTID ( )
Rule 30    Expresion -> optExpresion OBJECTID ( listaExpresiones )
Rule 31    Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones )
Rule 32    Expresion -> Expresion @ TYPEID . OBJECTID ( )
Rule 33    Expresion -> ~ Expresion  [precedence=right, level=4]
Rule 34    Expresion -> ISVOID Expresion  [precedence=right, level=4]
Rule 35    Expresion -> NOT Expresion  [precedence=right, level=4]
Rule 36    Expresion -> ( Expresion )
Rule 37    Expresion -> Expresion = Expresion  [precedence=nonassoc, level=1]
Rule 38    Expresion -> Expresion < Expresion  [precedence=nonassoc, level=1]
Rule 39    Expresion -> Expresion LE Expresion  [precedence=nonassoc, level=1]
Rule 40    Expresion -> Expresion - Expresion  [precedence=left, level=2]
Rule 41    Expresion -> Expresion + Expresion  [precedence=left, level=2]
Rule 42    Expresion -> Expresion / Expresion  [precedence=left, level=3]
Rule 43    Expresion -> Expresion * Expresion  [precedence=left, level=3]
Rule 44    Expresion -> OBJECTID ASSIGN Expresion
Rule 45    listaExpresiones -> Expresion , listaExpresiones
Rule 46    listaExpresiones -> Expresion
Rule 47    optExpresion -> Expresion .  [precedence=left, level=6]
Rule 48    optExpresion -> <empty>
Rule 49    optArrow -> ASSIGN Expresion
Rule 50    optArrow -> <empty>
Rule 51    starFormal -> , OBJECTID : TYPEID optArrow starFormal
Rule 52    starFormal -> <empty>
Rule 53    plusExpresion -> OBJECTID : TYPEID DARROW Expresion plusExpresion
Rule 54    plusExpresion -> OBJECTID : TYPEID DARROW Expresion
Rule 55    bloque -> Expresion ; bloque
Rule 56    bloque -> error ;
Rule 57    bloque -> error ; Expresion ;
Rule 58    bloque -> Expresion ;

Terminals, with rules where they appear:

(                    : 14 15 29 30 31 32 36
)                    : 14 15 29 30 31 32 36
*                    : 43
+                    : 41
,                    : 16 45 51
-                    : 40
.                    : 31 32 47
/                    : 42
:                    : 11 14 15 18 26 51 53 54
;                    : 3 11 14 15 25 55 56 57 57 58
<                    : 38
=                    : 37
@                    : 31 32
ASSIGN               : 12 44 49
BOOL_CONST           : 19
CASE                 : 25
CLASS                : 3
DARROW               : 53 54
ELSE                 : 28
ESAC                 : 25
FI                   : 28
IF                   : 28
IN                   : 26
INHERITS             : 4
INT_CONST            : 21
ISVOID               : 34
LE                   : 39
LET                  : 26
LOOP                 : 27
NEW                  : 24
NOT                  : 35
OBJECTID             : 11 14 15 18 22 26 29 30 31 32 44 51 53 54
OF                   : 25
POOL                 : 27
STR_CONST            : 20
THEN                 : 28
TYPEID               : 3 4 11 14 15 18 24 26 31 32 51 53 54
WHILE                : 27
error                : 56 57
{                    : 3 14 15 23
}                    : 3 14 15 23
~                    : 33

Nonterminals, with rules where they appear:

Atributo             : 7 9
Clase                : 1 2
Expresion            : 12 14 15 25 26 27 27 28 28 28 31 32 33 34 35 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 45 46 47 49 53 54 55 57 58
Formal               : 16 17
Metodo               : 6 8
Programa             : 2 0
bloque               : 23 55
listaExpresiones     : 30 31 45
listaFormales        : 14 16
lista_atr_met        : 3 6 7
optArrow             : 26 51
optAssign            : 11
optExpresion         : 29 30
optInherit           : 3
plusExpresion        : 25 53
starFormal           : 26 51


state 0

    (0) S' -> . Programa
    (1) Programa -> . Clase
    (2) Programa -> . Programa Clase
    (3) Clase -> . CLASS TYPEID optInherit { lista_atr_met } ;
    CLASS           shift and go to state 3

    Programa                       shift and go to state 1
    Clase                          shift and go to state 2

state 1

    (0) S' -> Programa .
    (2) Programa -> Programa . Clase
    (3) Clase -> . CLASS TYPEID optInherit { lista_atr_met } ;
    CLASS           shift and go to state 3

    Clase                          shift and go to state 4

state 2

    (1) Programa -> Clase .
    CLASS           reduce using rule 1 (Programa -> Clase .)
    $end            reduce using rule 1 (Programa -> Clase .)


state 3

    (3) Clase -> CLASS . TYPEID optInherit { lista_atr_met } ;
    TYPEID          shift and go to state 5


state 4

    (2) Programa -> Programa Clase .
    CLASS           reduce using rule 2 (Programa -> Programa Clase .)
    $end            reduce using rule 2 (Programa -> Programa Clase .)


state 5

    (3) Clase -> CLASS TYPEID . optInherit { lista_atr_met } ;
    (4) optInherit -> . INHERITS TYPEID
    (5) optInherit -> .
    INHERITS        shift and go to state 7
    {               reduce using rule 5 (optInherit -> .)

    optInherit                     shift and go to state 6

state 6

    (3) Clase -> CLASS TYPEID optInherit . { lista_atr_met } ;
    {               shift and go to state 8


state 7

    (4) optInherit -> INHERITS . TYPEID
    TYPEID          shift and go to state 9


state 8

    (3) Clase -> CLASS TYPEID optInherit { . lista_atr_met } ;
    (6) lista_atr_met -> . Metodo lista_atr_met
    (7) lista_atr_met -> . Atributo lista_atr_met
    (8) lista_atr_met -> . Metodo
    (9) lista_atr_met -> . Atributo
    (10) lista_atr_met -> .
    (14) Metodo -> . OBJECTID ( listaFormales ) : TYPEID { Expresion } ;
    (15) Metodo -> . OBJECTID ( ) : TYPEID { Expresion } ;
    (11) Atributo -> . OBJECTID : TYPEID optAssign ;
    }               reduce using rule 10 (lista_atr_met -> .)
    OBJECTID        shift and go to state 13

    lista_atr_met                  shift and go to state 10
    Metodo                         shift and go to state 11
    Atributo                       shift and go to state 12

state 9

    (4) optInherit -> INHERITS TYPEID .
    {               reduce using rule 4 (optInherit -> INHERITS TYPEID .)


state 10

    (3) Clase -> CLASS TYPEID optInherit { lista_atr_met . } ;
    }               shift and go to state 14


state 11

    (6) lista_atr_met -> Metodo . lista_atr_met
    (8) lista_atr_met -> Metodo .
    (6) lista_atr_met -> . Metodo lista_atr_met
    (7) lista_atr_met -> . Atributo lista_atr_met
    (8) lista_atr_met -> . Metodo
    (9) lista_atr_met -> . Atributo
    (10) lista_atr_met -> .
    (14) Metodo -> . OBJECTID ( listaFormales ) : TYPEID { Expresion } ;
    (15) Metodo -> . OBJECTID ( ) : TYPEID { Expresion } ;
    (11) Atributo -> . OBJECTID : TYPEID optAssign ;
  ! reduce/reduce conflict for } resolved using rule 10 (lista_atr_met -> .)
    }               reduce using rule 10 (lista_atr_met -> .)
    OBJECTID        shift and go to state 13

    Metodo                         shift and go to state 11
    lista_atr_met                  shift and go to state 15
    Atributo                       shift and go to state 12

state 12

    (7) lista_atr_met -> Atributo . lista_atr_met
    (9) lista_atr_met -> Atributo .
    (6) lista_atr_met -> . Metodo lista_atr_met
    (7) lista_atr_met -> . Atributo lista_atr_met
    (8) lista_atr_met -> . Metodo
    (9) lista_atr_met -> . Atributo
    (10) lista_atr_met -> .
    (14) Metodo -> . OBJECTID ( listaFormales ) : TYPEID { Expresion } ;
    (15) Metodo -> . OBJECTID ( ) : TYPEID { Expresion } ;
    (11) Atributo -> . OBJECTID : TYPEID optAssign ;
  ! reduce/reduce conflict for } resolved using rule 10 (lista_atr_met -> .)
    }               reduce using rule 10 (lista_atr_met -> .)
    OBJECTID        shift and go to state 13

    Atributo                       shift and go to state 12
    lista_atr_met                  shift and go to state 16
    Metodo                         shift and go to state 11

state 13

    (14) Metodo -> OBJECTID . ( listaFormales ) : TYPEID { Expresion } ;
    (15) Metodo -> OBJECTID . ( ) : TYPEID { Expresion } ;
    (11) Atributo -> OBJECTID . : TYPEID optAssign ;
    (               shift and go to state 17
    :               shift and go to state 18


state 14

    (3) Clase -> CLASS TYPEID optInherit { lista_atr_met } . ;
    ;               shift and go to state 19


state 15

    (6) lista_atr_met -> Metodo lista_atr_met .
    }               reduce using rule 6 (lista_atr_met -> Metodo lista_atr_met .)


state 16

    (7) lista_atr_met -> Atributo lista_atr_met .
    }               reduce using rule 7 (lista_atr_met -> Atributo lista_atr_met .)


state 17

    (14) Metodo -> OBJECTID ( . listaFormales ) : TYPEID { Expresion } ;
    (15) Metodo -> OBJECTID ( . ) : TYPEID { Expresion } ;
    (16) listaFormales -> . Formal , listaFormales
    (17) listaFormales -> . Formal
    (18) Formal -> . OBJECTID : TYPEID
    )               shift and go to state 22
    OBJECTID        shift and go to state 20

    listaFormales                  shift and go to state 21
    Formal                         shift and go to state 23

state 18

    (11) Atributo -> OBJECTID : . TYPEID optAssign ;
    TYPEID          shift and go to state 24


state 19

    (3) Clase -> CLASS TYPEID optInherit { lista_atr_met } ; .
    CLASS           reduce using rule 3 (Clase -> CLASS TYPEID optInherit { lista_atr_met } ; .)
    $end            reduce using rule 3 (Clase -> CLASS TYPEID optInherit { lista_atr_met } ; .)


state 20

    (18) Formal -> OBJECTID . : TYPEID
    :               shift and go to state 25


state 21

    (14) Metodo -> OBJECTID ( listaFormales . ) : TYPEID { Expresion } ;
    )               shift and go to state 26


state 22

    (15) Metodo -> OBJECTID ( ) . : TYPEID { Expresion } ;
    :               shift and go to state 27


state 23

    (16) listaFormales -> Formal . , listaFormales
    (17) listaFormales -> Formal .
    ,               shift and go to state 28
    )               reduce using rule 17 (listaFormales -> Formal .)


state 24

    (11) Atributo -> OBJECTID : TYPEID . optAssign ;
    (12) optAssign -> . ASSIGN Expresion
    (13) optAssign -> .
    ASSIGN          shift and go to state 30
    ;               reduce using rule 13 (optAssign -> .)

    optAssign                      shift and go to state 29

state 25

    (18) Formal -> OBJECTID : . TYPEID
    TYPEID          shift and go to state 31


state 26

    (14) Metodo -> OBJECTID ( listaFormales ) . : TYPEID { Expresion } ;
    :               shift and go to state 32


state 27

    (15) Metodo -> OBJECTID ( ) : . TYPEID { Expresion } ;
    TYPEID          shift and go to state 33


state 28

    (16) listaFormales -> Formal , . listaFormales
    (16) listaFormales -> . Formal , listaFormales
    (17) listaFormales -> . Formal
    (18) Formal -> . OBJECTID : TYPEID
    OBJECTID        shift and go to state 20

    Formal                         shift and go to state 23
    listaFormales                  shift and go to state 34

state 29

    (11) Atributo -> OBJECTID : TYPEID optAssign . ;
    ;               shift and go to state 35


state 30

    (12) optAssign -> ASSIGN . Expresion
    (19) Expresion -> . BOOL_CONST
    (20) Expresion -> . STR_CONST
    (21) Expresion -> . INT_CONST
    (22) Expresion -> . OBJECTID
    (23) Expresion -> . { bloque }
    (24) Expresion -> . NEW TYPEID
    (25) Expresion -> . CASE Expresion OF plusExpresion ; ESAC
    (26) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (27) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (28) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (29) Expresion -> . optExpresion OBJECTID ( )
    (30) Expresion -> . optExpresion OBJECTID ( listaExpresiones )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (33) Expresion -> . ~ Expresion
    (34) Expresion -> . ISVOID Expresion
    (35) Expresion -> . NOT Expresion
    (36) Expresion -> . ( Expresion )
    (37) Expresion -> . Expresion = Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion LE Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion + Expresion
    (42) Expresion -> . Expresion / Expresion
    (43) Expresion -> . Expresion * Expresion
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    (47) optExpresion -> . Expresion .
    (48) optExpresion -> .
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 40
    {               shift and go to state 41
    NEW             shift and go to state 42
    CASE            shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NOT             shift and go to state 51
    (               shift and go to state 48

    Expresion                      shift and go to state 36
    optExpresion                   shift and go to state 47

state 31

    (18) Formal -> OBJECTID : TYPEID .
    ,               reduce using rule 18 (Formal -> OBJECTID : TYPEID .)
    )               reduce using rule 18 (Formal -> OBJECTID : TYPEID .)


state 32

    (14) Metodo -> OBJECTID ( listaFormales ) : . TYPEID { Expresion } ;
    TYPEID          shift and go to state 52


state 33

    (15) Metodo -> OBJECTID ( ) : TYPEID . { Expresion } ;
    {               shift and go to state 53


state 34

    (16) listaFormales -> Formal , listaFormales .
    )               reduce using rule 16 (listaFormales -> Formal , listaFormales .)


state 35

    (11) Atributo -> OBJECTID : TYPEID optAssign ; .
    OBJECTID        reduce using rule 11 (Atributo -> OBJECTID : TYPEID optAssign ; .)
    }               reduce using rule 11 (Atributo -> OBJECTID : TYPEID optAssign ; .)


state 36

    (12) optAssign -> ASSIGN Expresion .
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (37) Expresion -> Expresion . = Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . LE Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . + Expresion
    (42) Expresion -> Expresion . / Expresion
    (43) Expresion -> Expresion . * Expresion
    (47) optExpresion -> Expresion . .
    ;               reduce using rule 12 (optAssign -> ASSIGN Expresion .)
    @               shift and go to state 54
    =               shift and go to state 56
    <               shift and go to state 57
    LE              shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    .               shift and go to state 55


state 37

    (19) Expresion -> BOOL_CONST .
    @               reduce using rule 19 (Expresion -> BOOL_CONST .)
    =               reduce using rule 19 (Expresion -> BOOL_CONST .)
    <               reduce using rule 19 (Expresion -> BOOL_CONST .)
    LE              reduce using rule 19 (Expresion -> BOOL_CONST .)
    -               reduce using rule 19 (Expresion -> BOOL_CONST .)
    +               reduce using rule 19 (Expresion -> BOOL_CONST .)
    /               reduce using rule 19 (Expresion -> BOOL_CONST .)
    *               reduce using rule 19 (Expresion -> BOOL_CONST .)
    .               reduce using rule 19 (Expresion -> BOOL_CONST .)
    ;               reduce using rule 19 (Expresion -> BOOL_CONST .)
    OF              reduce using rule 19 (Expresion -> BOOL_CONST .)
    LOOP            reduce using rule 19 (Expresion -> BOOL_CONST .)
    THEN            reduce using rule 19 (Expresion -> BOOL_CONST .)
    )               reduce using rule 19 (Expresion -> BOOL_CONST .)
    }               reduce using rule 19 (Expresion -> BOOL_CONST .)
    POOL            reduce using rule 19 (Expresion -> BOOL_CONST .)
    ELSE            reduce using rule 19 (Expresion -> BOOL_CONST .)
    ,               reduce using rule 19 (Expresion -> BOOL_CONST .)
    IN              reduce using rule 19 (Expresion -> BOOL_CONST .)
    FI              reduce using rule 19 (Expresion -> BOOL_CONST .)
    OBJECTID        reduce using rule 19 (Expresion -> BOOL_CONST .)


state 38

    (20) Expresion -> STR_CONST .
    @               reduce using rule 20 (Expresion -> STR_CONST .)
    =               reduce using rule 20 (Expresion -> STR_CONST .)
    <               reduce using rule 20 (Expresion -> STR_CONST .)
    LE              reduce using rule 20 (Expresion -> STR_CONST .)
    -               reduce using rule 20 (Expresion -> STR_CONST .)
    +               reduce using rule 20 (Expresion -> STR_CONST .)
    /               reduce using rule 20 (Expresion -> STR_CONST .)
    *               reduce using rule 20 (Expresion -> STR_CONST .)
    .               reduce using rule 20 (Expresion -> STR_CONST .)
    ;               reduce using rule 20 (Expresion -> STR_CONST .)
    OF              reduce using rule 20 (Expresion -> STR_CONST .)
    LOOP            reduce using rule 20 (Expresion -> STR_CONST .)
    THEN            reduce using rule 20 (Expresion -> STR_CONST .)
    )               reduce using rule 20 (Expresion -> STR_CONST .)
    }               reduce using rule 20 (Expresion -> STR_CONST .)
    POOL            reduce using rule 20 (Expresion -> STR_CONST .)
    ELSE            reduce using rule 20 (Expresion -> STR_CONST .)
    ,               reduce using rule 20 (Expresion -> STR_CONST .)
    IN              reduce using rule 20 (Expresion -> STR_CONST .)
    FI              reduce using rule 20 (Expresion -> STR_CONST .)
    OBJECTID        reduce using rule 20 (Expresion -> STR_CONST .)


state 39

    (21) Expresion -> INT_CONST .
    @               reduce using rule 21 (Expresion -> INT_CONST .)
    =               reduce using rule 21 (Expresion -> INT_CONST .)
    <               reduce using rule 21 (Expresion -> INT_CONST .)
    LE              reduce using rule 21 (Expresion -> INT_CONST .)
    -               reduce using rule 21 (Expresion -> INT_CONST .)
    +               reduce using rule 21 (Expresion -> INT_CONST .)
    /               reduce using rule 21 (Expresion -> INT_CONST .)
    *               reduce using rule 21 (Expresion -> INT_CONST .)
    .               reduce using rule 21 (Expresion -> INT_CONST .)
    ;               reduce using rule 21 (Expresion -> INT_CONST .)
    OF              reduce using rule 21 (Expresion -> INT_CONST .)
    LOOP            reduce using rule 21 (Expresion -> INT_CONST .)
    THEN            reduce using rule 21 (Expresion -> INT_CONST .)
    )               reduce using rule 21 (Expresion -> INT_CONST .)
    }               reduce using rule 21 (Expresion -> INT_CONST .)
    POOL            reduce using rule 21 (Expresion -> INT_CONST .)
    ELSE            reduce using rule 21 (Expresion -> INT_CONST .)
    ,               reduce using rule 21 (Expresion -> INT_CONST .)
    IN              reduce using rule 21 (Expresion -> INT_CONST .)
    FI              reduce using rule 21 (Expresion -> INT_CONST .)
    OBJECTID        reduce using rule 21 (Expresion -> INT_CONST .)


state 40

    (22) Expresion -> OBJECTID .
    (44) Expresion -> OBJECTID . ASSIGN Expresion
    @               reduce using rule 22 (Expresion -> OBJECTID .)
    =               reduce using rule 22 (Expresion -> OBJECTID .)
    <               reduce using rule 22 (Expresion -> OBJECTID .)
    LE              reduce using rule 22 (Expresion -> OBJECTID .)
    -               reduce using rule 22 (Expresion -> OBJECTID .)
    +               reduce using rule 22 (Expresion -> OBJECTID .)
    /               reduce using rule 22 (Expresion -> OBJECTID .)
    *               reduce using rule 22 (Expresion -> OBJECTID .)
    .               reduce using rule 22 (Expresion -> OBJECTID .)
    ;               reduce using rule 22 (Expresion -> OBJECTID .)
    OF              reduce using rule 22 (Expresion -> OBJECTID .)
    LOOP            reduce using rule 22 (Expresion -> OBJECTID .)
    THEN            reduce using rule 22 (Expresion -> OBJECTID .)
    )               reduce using rule 22 (Expresion -> OBJECTID .)
    }               reduce using rule 22 (Expresion -> OBJECTID .)
    POOL            reduce using rule 22 (Expresion -> OBJECTID .)
    ELSE            reduce using rule 22 (Expresion -> OBJECTID .)
    ,               reduce using rule 22 (Expresion -> OBJECTID .)
    IN              reduce using rule 22 (Expresion -> OBJECTID .)
    FI              reduce using rule 22 (Expresion -> OBJECTID .)
    OBJECTID        reduce using rule 22 (Expresion -> OBJECTID .)
    ASSIGN          shift and go to state 63


state 41

    (23) Expresion -> { . bloque }
    (55) bloque -> . Expresion ; bloque
    (56) bloque -> . error ;
    (57) bloque -> . error ; Expresion ;
    (58) bloque -> . Expresion ;
    (19) Expresion -> . BOOL_CONST
    (20) Expresion -> . STR_CONST
    (21) Expresion -> . INT_CONST
    (22) Expresion -> . OBJECTID
    (23) Expresion -> . { bloque }
    (24) Expresion -> . NEW TYPEID
    (25) Expresion -> . CASE Expresion OF plusExpresion ; ESAC
    (26) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (27) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (28) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (29) Expresion -> . optExpresion OBJECTID ( )
    (30) Expresion -> . optExpresion OBJECTID ( listaExpresiones )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (33) Expresion -> . ~ Expresion
    (34) Expresion -> . ISVOID Expresion
    (35) Expresion -> . NOT Expresion
    (36) Expresion -> . ( Expresion )
    (37) Expresion -> . Expresion = Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion LE Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion + Expresion
    (42) Expresion -> . Expresion / Expresion
    (43) Expresion -> . Expresion * Expresion
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    (47) optExpresion -> . Expresion .
    (48) optExpresion -> .
  ! shift/reduce conflict for OBJECTID resolved as shift
    error           shift and go to state 66
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 40
    {               shift and go to state 41
    NEW             shift and go to state 42
    CASE            shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NOT             shift and go to state 51
    (               shift and go to state 48

    bloque                         shift and go to state 64
    Expresion                      shift and go to state 65
    optExpresion                   shift and go to state 47

state 42

    (24) Expresion -> NEW . TYPEID
    TYPEID          shift and go to state 67


state 43

    (25) Expresion -> CASE . Expresion OF plusExpresion ; ESAC
    (19) Expresion -> . BOOL_CONST
    (20) Expresion -> . STR_CONST
    (21) Expresion -> . INT_CONST
    (22) Expresion -> . OBJECTID
    (23) Expresion -> . { bloque }
    (24) Expresion -> . NEW TYPEID
    (25) Expresion -> . CASE Expresion OF plusExpresion ; ESAC
    (26) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (27) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (28) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (29) Expresion -> . optExpresion OBJECTID ( )
    (30) Expresion -> . optExpresion OBJECTID ( listaExpresiones )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (33) Expresion -> . ~ Expresion
    (34) Expresion -> . ISVOID Expresion
    (35) Expresion -> . NOT Expresion
    (36) Expresion -> . ( Expresion )
    (37) Expresion -> . Expresion = Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion LE Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion + Expresion
    (42) Expresion -> . Expresion / Expresion
    (43) Expresion -> . Expresion * Expresion
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    (47) optExpresion -> . Expresion .
    (48) optExpresion -> .
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 40
    {               shift and go to state 41
    NEW             shift and go to state 42
    CASE            shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NOT             shift and go to state 51
    (               shift and go to state 48

    Expresion                      shift and go to state 68
    optExpresion                   shift and go to state 47

state 44

    (26) Expresion -> LET . OBJECTID : TYPEID optArrow starFormal IN Expresion
    OBJECTID        shift and go to state 69


state 45

    (27) Expresion -> WHILE . Expresion LOOP Expresion POOL
    (19) Expresion -> . BOOL_CONST
    (20) Expresion -> . STR_CONST
    (21) Expresion -> . INT_CONST
    (22) Expresion -> . OBJECTID
    (23) Expresion -> . { bloque }
    (24) Expresion -> . NEW TYPEID
    (25) Expresion -> . CASE Expresion OF plusExpresion ; ESAC
    (26) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (27) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (28) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (29) Expresion -> . optExpresion OBJECTID ( )
    (30) Expresion -> . optExpresion OBJECTID ( listaExpresiones )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (33) Expresion -> . ~ Expresion
    (34) Expresion -> . ISVOID Expresion
    (35) Expresion -> . NOT Expresion
    (36) Expresion -> . ( Expresion )
    (37) Expresion -> . Expresion = Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion LE Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion + Expresion
    (42) Expresion -> . Expresion / Expresion
    (43) Expresion -> . Expresion * Expresion
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    (47) optExpresion -> . Expresion .
    (48) optExpresion -> .
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 40
    {               shift and go to state 41
    NEW             shift and go to state 42
    CASE            shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NOT             shift and go to state 51
    (               shift and go to state 48

    Expresion                      shift and go to state 70
    optExpresion                   shift and go to state 47

state 46

    (28) Expresion -> IF . Expresion THEN Expresion ELSE Expresion FI
    (19) Expresion -> . BOOL_CONST
    (20) Expresion -> . STR_CONST
    (21) Expresion -> . INT_CONST
    (22) Expresion -> . OBJECTID
    (23) Expresion -> . { bloque }
    (24) Expresion -> . NEW TYPEID
    (25) Expresion -> . CASE Expresion OF plusExpresion ; ESAC
    (26) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (27) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (28) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (29) Expresion -> . optExpresion OBJECTID ( )
    (30) Expresion -> . optExpresion OBJECTID ( listaExpresiones )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (33) Expresion -> . ~ Expresion
    (34) Expresion -> . ISVOID Expresion
    (35) Expresion -> . NOT Expresion
    (36) Expresion -> . ( Expresion )
    (37) Expresion -> . Expresion = Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion LE Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion + Expresion
    (42) Expresion -> . Expresion / Expresion
    (43) Expresion -> . Expresion * Expresion
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    (47) optExpresion -> . Expresion .
    (48) optExpresion -> .
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 40
    {               shift and go to state 41
    NEW             shift and go to state 42
    CASE            shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NOT             shift and go to state 51
    (               shift and go to state 48

    Expresion                      shift and go to state 71
    optExpresion                   shift and go to state 47

state 47

    (29) Expresion -> optExpresion . OBJECTID ( )
    (30) Expresion -> optExpresion . OBJECTID ( listaExpresiones )
    OBJECTID        shift and go to state 72


state 48

    (36) Expresion -> ( . Expresion )
    (19) Expresion -> . BOOL_CONST
    (20) Expresion -> . STR_CONST
    (21) Expresion -> . INT_CONST
    (22) Expresion -> . OBJECTID
    (23) Expresion -> . { bloque }
    (24) Expresion -> . NEW TYPEID
    (25) Expresion -> . CASE Expresion OF plusExpresion ; ESAC
    (26) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (27) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (28) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (29) Expresion -> . optExpresion OBJECTID ( )
    (30) Expresion -> . optExpresion OBJECTID ( listaExpresiones )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (33) Expresion -> . ~ Expresion
    (34) Expresion -> . ISVOID Expresion
    (35) Expresion -> . NOT Expresion
    (36) Expresion -> . ( Expresion )
    (37) Expresion -> . Expresion = Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion LE Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion + Expresion
    (42) Expresion -> . Expresion / Expresion
    (43) Expresion -> . Expresion * Expresion
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    (47) optExpresion -> . Expresion .
    (48) optExpresion -> .
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 40
    {               shift and go to state 41
    NEW             shift and go to state 42
    CASE            shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NOT             shift and go to state 51
    (               shift and go to state 48

    Expresion                      shift and go to state 73
    optExpresion                   shift and go to state 47

state 49

    (33) Expresion -> ~ . Expresion
    (19) Expresion -> . BOOL_CONST
    (20) Expresion -> . STR_CONST
    (21) Expresion -> . INT_CONST
    (22) Expresion -> . OBJECTID
    (23) Expresion -> . { bloque }
    (24) Expresion -> . NEW TYPEID
    (25) Expresion -> . CASE Expresion OF plusExpresion ; ESAC
    (26) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (27) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (28) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (29) Expresion -> . optExpresion OBJECTID ( )
    (30) Expresion -> . optExpresion OBJECTID ( listaExpresiones )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (33) Expresion -> . ~ Expresion
    (34) Expresion -> . ISVOID Expresion
    (35) Expresion -> . NOT Expresion
    (36) Expresion -> . ( Expresion )
    (37) Expresion -> . Expresion = Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion LE Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion + Expresion
    (42) Expresion -> . Expresion / Expresion
    (43) Expresion -> . Expresion * Expresion
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    (47) optExpresion -> . Expresion .
    (48) optExpresion -> .
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 40
    {               shift and go to state 41
    NEW             shift and go to state 42
    CASE            shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NOT             shift and go to state 51
    (               shift and go to state 48

    Expresion                      shift and go to state 74
    optExpresion                   shift and go to state 47

state 50

    (34) Expresion -> ISVOID . Expresion
    (19) Expresion -> . BOOL_CONST
    (20) Expresion -> . STR_CONST
    (21) Expresion -> . INT_CONST
    (22) Expresion -> . OBJECTID
    (23) Expresion -> . { bloque }
    (24) Expresion -> . NEW TYPEID
    (25) Expresion -> . CASE Expresion OF plusExpresion ; ESAC
    (26) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (27) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (28) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (29) Expresion -> . optExpresion OBJECTID ( )
    (30) Expresion -> . optExpresion OBJECTID ( listaExpresiones )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (33) Expresion -> . ~ Expresion
    (34) Expresion -> . ISVOID Expresion
    (35) Expresion -> . NOT Expresion
    (36) Expresion -> . ( Expresion )
    (37) Expresion -> . Expresion = Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion LE Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion + Expresion
    (42) Expresion -> . Expresion / Expresion
    (43) Expresion -> . Expresion * Expresion
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    (47) optExpresion -> . Expresion .
    (48) optExpresion -> .
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 40
    {               shift and go to state 41
    NEW             shift and go to state 42
    CASE            shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NOT             shift and go to state 51
    (               shift and go to state 48

    Expresion                      shift and go to state 75
    optExpresion                   shift and go to state 47

state 51

    (35) Expresion -> NOT . Expresion
    (19) Expresion -> . BOOL_CONST
    (20) Expresion -> . STR_CONST
    (21) Expresion -> . INT_CONST
    (22) Expresion -> . OBJECTID
    (23) Expresion -> . { bloque }
    (24) Expresion -> . NEW TYPEID
    (25) Expresion -> . CASE Expresion OF plusExpresion ; ESAC
    (26) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (27) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (28) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (29) Expresion -> . optExpresion OBJECTID ( )
    (30) Expresion -> . optExpresion OBJECTID ( listaExpresiones )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (33) Expresion -> . ~ Expresion
    (34) Expresion -> . ISVOID Expresion
    (35) Expresion -> . NOT Expresion
    (36) Expresion -> . ( Expresion )
    (37) Expresion -> . Expresion = Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion LE Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion + Expresion
    (42) Expresion -> . Expresion / Expresion
    (43) Expresion -> . Expresion * Expresion
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    (47) optExpresion -> . Expresion .
    (48) optExpresion -> .
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 40
    {               shift and go to state 41
    NEW             shift and go to state 42
    CASE            shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NOT             shift and go to state 51
    (               shift and go to state 48

    Expresion                      shift and go to state 76
    optExpresion                   shift and go to state 47

state 52

    (14) Metodo -> OBJECTID ( listaFormales ) : TYPEID . { Expresion } ;
    {               shift and go to state 77


state 53

    (15) Metodo -> OBJECTID ( ) : TYPEID { . Expresion } ;
    (19) Expresion -> . BOOL_CONST
    (20) Expresion -> . STR_CONST
    (21) Expresion -> . INT_CONST
    (22) Expresion -> . OBJECTID
    (23) Expresion -> . { bloque }
    (24) Expresion -> . NEW TYPEID
    (25) Expresion -> . CASE Expresion OF plusExpresion ; ESAC
    (26) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (27) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (28) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (29) Expresion -> . optExpresion OBJECTID ( )
    (30) Expresion -> . optExpresion OBJECTID ( listaExpresiones )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (33) Expresion -> . ~ Expresion
    (34) Expresion -> . ISVOID Expresion
    (35) Expresion -> . NOT Expresion
    (36) Expresion -> . ( Expresion )
    (37) Expresion -> . Expresion = Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion LE Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion + Expresion
    (42) Expresion -> . Expresion / Expresion
    (43) Expresion -> . Expresion * Expresion
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    (47) optExpresion -> . Expresion .
    (48) optExpresion -> .
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 40
    {               shift and go to state 41
    NEW             shift and go to state 42
    CASE            shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NOT             shift and go to state 51
    (               shift and go to state 48

    Expresion                      shift and go to state 78
    optExpresion                   shift and go to state 47

state 54

    (31) Expresion -> Expresion @ . TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> Expresion @ . TYPEID . OBJECTID ( )
    TYPEID          shift and go to state 79


state 55

    (47) optExpresion -> Expresion . .
    OBJECTID        reduce using rule 47 (optExpresion -> Expresion . .)


state 56

    (37) Expresion -> Expresion = . Expresion
    (19) Expresion -> . BOOL_CONST
    (20) Expresion -> . STR_CONST
    (21) Expresion -> . INT_CONST
    (22) Expresion -> . OBJECTID
    (23) Expresion -> . { bloque }
    (24) Expresion -> . NEW TYPEID
    (25) Expresion -> . CASE Expresion OF plusExpresion ; ESAC
    (26) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (27) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (28) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (29) Expresion -> . optExpresion OBJECTID ( )
    (30) Expresion -> . optExpresion OBJECTID ( listaExpresiones )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (33) Expresion -> . ~ Expresion
    (34) Expresion -> . ISVOID Expresion
    (35) Expresion -> . NOT Expresion
    (36) Expresion -> . ( Expresion )
    (37) Expresion -> . Expresion = Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion LE Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion + Expresion
    (42) Expresion -> . Expresion / Expresion
    (43) Expresion -> . Expresion * Expresion
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    (47) optExpresion -> . Expresion .
    (48) optExpresion -> .
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 40
    {               shift and go to state 41
    NEW             shift and go to state 42
    CASE            shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NOT             shift and go to state 51
    (               shift and go to state 48

    Expresion                      shift and go to state 80
    optExpresion                   shift and go to state 47

state 57

    (38) Expresion -> Expresion < . Expresion
    (19) Expresion -> . BOOL_CONST
    (20) Expresion -> . STR_CONST
    (21) Expresion -> . INT_CONST
    (22) Expresion -> . OBJECTID
    (23) Expresion -> . { bloque }
    (24) Expresion -> . NEW TYPEID
    (25) Expresion -> . CASE Expresion OF plusExpresion ; ESAC
    (26) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (27) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (28) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (29) Expresion -> . optExpresion OBJECTID ( )
    (30) Expresion -> . optExpresion OBJECTID ( listaExpresiones )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (33) Expresion -> . ~ Expresion
    (34) Expresion -> . ISVOID Expresion
    (35) Expresion -> . NOT Expresion
    (36) Expresion -> . ( Expresion )
    (37) Expresion -> . Expresion = Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion LE Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion + Expresion
    (42) Expresion -> . Expresion / Expresion
    (43) Expresion -> . Expresion * Expresion
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    (47) optExpresion -> . Expresion .
    (48) optExpresion -> .
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 40
    {               shift and go to state 41
    NEW             shift and go to state 42
    CASE            shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NOT             shift and go to state 51
    (               shift and go to state 48

    Expresion                      shift and go to state 81
    optExpresion                   shift and go to state 47

state 58

    (39) Expresion -> Expresion LE . Expresion
    (19) Expresion -> . BOOL_CONST
    (20) Expresion -> . STR_CONST
    (21) Expresion -> . INT_CONST
    (22) Expresion -> . OBJECTID
    (23) Expresion -> . { bloque }
    (24) Expresion -> . NEW TYPEID
    (25) Expresion -> . CASE Expresion OF plusExpresion ; ESAC
    (26) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (27) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (28) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (29) Expresion -> . optExpresion OBJECTID ( )
    (30) Expresion -> . optExpresion OBJECTID ( listaExpresiones )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (33) Expresion -> . ~ Expresion
    (34) Expresion -> . ISVOID Expresion
    (35) Expresion -> . NOT Expresion
    (36) Expresion -> . ( Expresion )
    (37) Expresion -> . Expresion = Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion LE Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion + Expresion
    (42) Expresion -> . Expresion / Expresion
    (43) Expresion -> . Expresion * Expresion
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    (47) optExpresion -> . Expresion .
    (48) optExpresion -> .
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 40
    {               shift and go to state 41
    NEW             shift and go to state 42
    CASE            shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NOT             shift and go to state 51
    (               shift and go to state 48

    Expresion                      shift and go to state 82
    optExpresion                   shift and go to state 47

state 59

    (40) Expresion -> Expresion - . Expresion
    (19) Expresion -> . BOOL_CONST
    (20) Expresion -> . STR_CONST
    (21) Expresion -> . INT_CONST
    (22) Expresion -> . OBJECTID
    (23) Expresion -> . { bloque }
    (24) Expresion -> . NEW TYPEID
    (25) Expresion -> . CASE Expresion OF plusExpresion ; ESAC
    (26) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (27) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (28) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (29) Expresion -> . optExpresion OBJECTID ( )
    (30) Expresion -> . optExpresion OBJECTID ( listaExpresiones )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (33) Expresion -> . ~ Expresion
    (34) Expresion -> . ISVOID Expresion
    (35) Expresion -> . NOT Expresion
    (36) Expresion -> . ( Expresion )
    (37) Expresion -> . Expresion = Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion LE Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion + Expresion
    (42) Expresion -> . Expresion / Expresion
    (43) Expresion -> . Expresion * Expresion
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    (47) optExpresion -> . Expresion .
    (48) optExpresion -> .
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 40
    {               shift and go to state 41
    NEW             shift and go to state 42
    CASE            shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NOT             shift and go to state 51
    (               shift and go to state 48

    Expresion                      shift and go to state 83
    optExpresion                   shift and go to state 47

state 60

    (41) Expresion -> Expresion + . Expresion
    (19) Expresion -> . BOOL_CONST
    (20) Expresion -> . STR_CONST
    (21) Expresion -> . INT_CONST
    (22) Expresion -> . OBJECTID
    (23) Expresion -> . { bloque }
    (24) Expresion -> . NEW TYPEID
    (25) Expresion -> . CASE Expresion OF plusExpresion ; ESAC
    (26) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (27) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (28) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (29) Expresion -> . optExpresion OBJECTID ( )
    (30) Expresion -> . optExpresion OBJECTID ( listaExpresiones )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (33) Expresion -> . ~ Expresion
    (34) Expresion -> . ISVOID Expresion
    (35) Expresion -> . NOT Expresion
    (36) Expresion -> . ( Expresion )
    (37) Expresion -> . Expresion = Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion LE Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion + Expresion
    (42) Expresion -> . Expresion / Expresion
    (43) Expresion -> . Expresion * Expresion
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    (47) optExpresion -> . Expresion .
    (48) optExpresion -> .
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 40
    {               shift and go to state 41
    NEW             shift and go to state 42
    CASE            shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NOT             shift and go to state 51
    (               shift and go to state 48

    Expresion                      shift and go to state 84
    optExpresion                   shift and go to state 47

state 61

    (42) Expresion -> Expresion / . Expresion
    (19) Expresion -> . BOOL_CONST
    (20) Expresion -> . STR_CONST
    (21) Expresion -> . INT_CONST
    (22) Expresion -> . OBJECTID
    (23) Expresion -> . { bloque }
    (24) Expresion -> . NEW TYPEID
    (25) Expresion -> . CASE Expresion OF plusExpresion ; ESAC
    (26) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (27) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (28) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (29) Expresion -> . optExpresion OBJECTID ( )
    (30) Expresion -> . optExpresion OBJECTID ( listaExpresiones )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (33) Expresion -> . ~ Expresion
    (34) Expresion -> . ISVOID Expresion
    (35) Expresion -> . NOT Expresion
    (36) Expresion -> . ( Expresion )
    (37) Expresion -> . Expresion = Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion LE Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion + Expresion
    (42) Expresion -> . Expresion / Expresion
    (43) Expresion -> . Expresion * Expresion
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    (47) optExpresion -> . Expresion .
    (48) optExpresion -> .
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 40
    {               shift and go to state 41
    NEW             shift and go to state 42
    CASE            shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NOT             shift and go to state 51
    (               shift and go to state 48

    Expresion                      shift and go to state 85
    optExpresion                   shift and go to state 47

state 62

    (43) Expresion -> Expresion * . Expresion
    (19) Expresion -> . BOOL_CONST
    (20) Expresion -> . STR_CONST
    (21) Expresion -> . INT_CONST
    (22) Expresion -> . OBJECTID
    (23) Expresion -> . { bloque }
    (24) Expresion -> . NEW TYPEID
    (25) Expresion -> . CASE Expresion OF plusExpresion ; ESAC
    (26) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (27) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (28) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (29) Expresion -> . optExpresion OBJECTID ( )
    (30) Expresion -> . optExpresion OBJECTID ( listaExpresiones )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (33) Expresion -> . ~ Expresion
    (34) Expresion -> . ISVOID Expresion
    (35) Expresion -> . NOT Expresion
    (36) Expresion -> . ( Expresion )
    (37) Expresion -> . Expresion = Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion LE Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion + Expresion
    (42) Expresion -> . Expresion / Expresion
    (43) Expresion -> . Expresion * Expresion
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    (47) optExpresion -> . Expresion .
    (48) optExpresion -> .
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 40
    {               shift and go to state 41
    NEW             shift and go to state 42
    CASE            shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NOT             shift and go to state 51
    (               shift and go to state 48

    Expresion                      shift and go to state 86
    optExpresion                   shift and go to state 47

state 63

    (44) Expresion -> OBJECTID ASSIGN . Expresion
    (19) Expresion -> . BOOL_CONST
    (20) Expresion -> . STR_CONST
    (21) Expresion -> . INT_CONST
    (22) Expresion -> . OBJECTID
    (23) Expresion -> . { bloque }
    (24) Expresion -> . NEW TYPEID
    (25) Expresion -> . CASE Expresion OF plusExpresion ; ESAC
    (26) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (27) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (28) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (29) Expresion -> . optExpresion OBJECTID ( )
    (30) Expresion -> . optExpresion OBJECTID ( listaExpresiones )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (33) Expresion -> . ~ Expresion
    (34) Expresion -> . ISVOID Expresion
    (35) Expresion -> . NOT Expresion
    (36) Expresion -> . ( Expresion )
    (37) Expresion -> . Expresion = Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion LE Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion + Expresion
    (42) Expresion -> . Expresion / Expresion
    (43) Expresion -> . Expresion * Expresion
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    (47) optExpresion -> . Expresion .
    (48) optExpresion -> .
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 40
    {               shift and go to state 41
    NEW             shift and go to state 42
    CASE            shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NOT             shift and go to state 51
    (               shift and go to state 48

    Expresion                      shift and go to state 87
    optExpresion                   shift and go to state 47

state 64

    (23) Expresion -> { bloque . }
    }               shift and go to state 88


state 65

    (55) bloque -> Expresion . ; bloque
    (58) bloque -> Expresion . ;
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (37) Expresion -> Expresion . = Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . LE Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . + Expresion
    (42) Expresion -> Expresion . / Expresion
    (43) Expresion -> Expresion . * Expresion
    (47) optExpresion -> Expresion . .
    ;               shift and go to state 89
    @               shift and go to state 54
    =               shift and go to state 56
    <               shift and go to state 57
    LE              shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    .               shift and go to state 55


state 66

    (56) bloque -> error . ;
    (57) bloque -> error . ; Expresion ;
    ;               shift and go to state 90


state 67

    (24) Expresion -> NEW TYPEID .
    @               reduce using rule 24 (Expresion -> NEW TYPEID .)
    =               reduce using rule 24 (Expresion -> NEW TYPEID .)
    <               reduce using rule 24 (Expresion -> NEW TYPEID .)
    LE              reduce using rule 24 (Expresion -> NEW TYPEID .)
    -               reduce using rule 24 (Expresion -> NEW TYPEID .)
    +               reduce using rule 24 (Expresion -> NEW TYPEID .)
    /               reduce using rule 24 (Expresion -> NEW TYPEID .)
    *               reduce using rule 24 (Expresion -> NEW TYPEID .)
    .               reduce using rule 24 (Expresion -> NEW TYPEID .)
    ;               reduce using rule 24 (Expresion -> NEW TYPEID .)
    OF              reduce using rule 24 (Expresion -> NEW TYPEID .)
    LOOP            reduce using rule 24 (Expresion -> NEW TYPEID .)
    THEN            reduce using rule 24 (Expresion -> NEW TYPEID .)
    )               reduce using rule 24 (Expresion -> NEW TYPEID .)
    }               reduce using rule 24 (Expresion -> NEW TYPEID .)
    POOL            reduce using rule 24 (Expresion -> NEW TYPEID .)
    ELSE            reduce using rule 24 (Expresion -> NEW TYPEID .)
    ,               reduce using rule 24 (Expresion -> NEW TYPEID .)
    IN              reduce using rule 24 (Expresion -> NEW TYPEID .)
    FI              reduce using rule 24 (Expresion -> NEW TYPEID .)
    OBJECTID        reduce using rule 24 (Expresion -> NEW TYPEID .)


state 68

    (25) Expresion -> CASE Expresion . OF plusExpresion ; ESAC
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (37) Expresion -> Expresion . = Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . LE Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . + Expresion
    (42) Expresion -> Expresion . / Expresion
    (43) Expresion -> Expresion . * Expresion
    (47) optExpresion -> Expresion . .
    OF              shift and go to state 91
    @               shift and go to state 54
    =               shift and go to state 56
    <               shift and go to state 57
    LE              shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    .               shift and go to state 55


state 69

    (26) Expresion -> LET OBJECTID . : TYPEID optArrow starFormal IN Expresion
    :               shift and go to state 92


state 70

    (27) Expresion -> WHILE Expresion . LOOP Expresion POOL
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (37) Expresion -> Expresion . = Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . LE Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . + Expresion
    (42) Expresion -> Expresion . / Expresion
    (43) Expresion -> Expresion . * Expresion
    (47) optExpresion -> Expresion . .
    LOOP            shift and go to state 93
    @               shift and go to state 54
    =               shift and go to state 56
    <               shift and go to state 57
    LE              shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    .               shift and go to state 55


state 71

    (28) Expresion -> IF Expresion . THEN Expresion ELSE Expresion FI
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (37) Expresion -> Expresion . = Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . LE Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . + Expresion
    (42) Expresion -> Expresion . / Expresion
    (43) Expresion -> Expresion . * Expresion
    (47) optExpresion -> Expresion . .
    THEN            shift and go to state 94
    @               shift and go to state 54
    =               shift and go to state 56
    <               shift and go to state 57
    LE              shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    .               shift and go to state 55


state 72

    (29) Expresion -> optExpresion OBJECTID . ( )
    (30) Expresion -> optExpresion OBJECTID . ( listaExpresiones )
    (               shift and go to state 95


state 73

    (36) Expresion -> ( Expresion . )
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (37) Expresion -> Expresion . = Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . LE Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . + Expresion
    (42) Expresion -> Expresion . / Expresion
    (43) Expresion -> Expresion . * Expresion
    (47) optExpresion -> Expresion . .
    )               shift and go to state 96
    @               shift and go to state 54
    =               shift and go to state 56
    <               shift and go to state 57
    LE              shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    .               shift and go to state 55


state 74

    (33) Expresion -> ~ Expresion .
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (37) Expresion -> Expresion . = Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . LE Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . + Expresion
    (42) Expresion -> Expresion . / Expresion
    (43) Expresion -> Expresion . * Expresion
    (47) optExpresion -> Expresion . .
    =               reduce using rule 33 (Expresion -> ~ Expresion .)
    <               reduce using rule 33 (Expresion -> ~ Expresion .)
    LE              reduce using rule 33 (Expresion -> ~ Expresion .)
    -               reduce using rule 33 (Expresion -> ~ Expresion .)
    +               reduce using rule 33 (Expresion -> ~ Expresion .)
    /               reduce using rule 33 (Expresion -> ~ Expresion .)
    *               reduce using rule 33 (Expresion -> ~ Expresion .)
    ;               reduce using rule 33 (Expresion -> ~ Expresion .)
    OF              reduce using rule 33 (Expresion -> ~ Expresion .)
    LOOP            reduce using rule 33 (Expresion -> ~ Expresion .)
    THEN            reduce using rule 33 (Expresion -> ~ Expresion .)
    )               reduce using rule 33 (Expresion -> ~ Expresion .)
    }               reduce using rule 33 (Expresion -> ~ Expresion .)
    POOL            reduce using rule 33 (Expresion -> ~ Expresion .)
    ELSE            reduce using rule 33 (Expresion -> ~ Expresion .)
    ,               reduce using rule 33 (Expresion -> ~ Expresion .)
    IN              reduce using rule 33 (Expresion -> ~ Expresion .)
    FI              reduce using rule 33 (Expresion -> ~ Expresion .)
    OBJECTID        reduce using rule 33 (Expresion -> ~ Expresion .)
    @               shift and go to state 54
    .               shift and go to state 55


state 75

    (34) Expresion -> ISVOID Expresion .
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (37) Expresion -> Expresion . = Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . LE Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . + Expresion
    (42) Expresion -> Expresion . / Expresion
    (43) Expresion -> Expresion . * Expresion
    (47) optExpresion -> Expresion . .
    =               reduce using rule 34 (Expresion -> ISVOID Expresion .)
    <               reduce using rule 34 (Expresion -> ISVOID Expresion .)
    LE              reduce using rule 34 (Expresion -> ISVOID Expresion .)
    -               reduce using rule 34 (Expresion -> ISVOID Expresion .)
    +               reduce using rule 34 (Expresion -> ISVOID Expresion .)
    /               reduce using rule 34 (Expresion -> ISVOID Expresion .)
    *               reduce using rule 34 (Expresion -> ISVOID Expresion .)
    ;               reduce using rule 34 (Expresion -> ISVOID Expresion .)
    OF              reduce using rule 34 (Expresion -> ISVOID Expresion .)
    LOOP            reduce using rule 34 (Expresion -> ISVOID Expresion .)
    THEN            reduce using rule 34 (Expresion -> ISVOID Expresion .)
    )               reduce using rule 34 (Expresion -> ISVOID Expresion .)
    }               reduce using rule 34 (Expresion -> ISVOID Expresion .)
    POOL            reduce using rule 34 (Expresion -> ISVOID Expresion .)
    ELSE            reduce using rule 34 (Expresion -> ISVOID Expresion .)
    ,               reduce using rule 34 (Expresion -> ISVOID Expresion .)
    IN              reduce using rule 34 (Expresion -> ISVOID Expresion .)
    FI              reduce using rule 34 (Expresion -> ISVOID Expresion .)
    OBJECTID        reduce using rule 34 (Expresion -> ISVOID Expresion .)
    @               shift and go to state 54
    .               shift and go to state 55


state 76

    (35) Expresion -> NOT Expresion .
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (37) Expresion -> Expresion . = Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . LE Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . + Expresion
    (42) Expresion -> Expresion . / Expresion
    (43) Expresion -> Expresion . * Expresion
    (47) optExpresion -> Expresion . .
    =               reduce using rule 35 (Expresion -> NOT Expresion .)
    <               reduce using rule 35 (Expresion -> NOT Expresion .)
    LE              reduce using rule 35 (Expresion -> NOT Expresion .)
    -               reduce using rule 35 (Expresion -> NOT Expresion .)
    +               reduce using rule 35 (Expresion -> NOT Expresion .)
    /               reduce using rule 35 (Expresion -> NOT Expresion .)
    *               reduce using rule 35 (Expresion -> NOT Expresion .)
    ;               reduce using rule 35 (Expresion -> NOT Expresion .)
    OF              reduce using rule 35 (Expresion -> NOT Expresion .)
    LOOP            reduce using rule 35 (Expresion -> NOT Expresion .)
    THEN            reduce using rule 35 (Expresion -> NOT Expresion .)
    )               reduce using rule 35 (Expresion -> NOT Expresion .)
    }               reduce using rule 35 (Expresion -> NOT Expresion .)
    POOL            reduce using rule 35 (Expresion -> NOT Expresion .)
    ELSE            reduce using rule 35 (Expresion -> NOT Expresion .)
    ,               reduce using rule 35 (Expresion -> NOT Expresion .)
    IN              reduce using rule 35 (Expresion -> NOT Expresion .)
    FI              reduce using rule 35 (Expresion -> NOT Expresion .)
    OBJECTID        reduce using rule 35 (Expresion -> NOT Expresion .)
    @               shift and go to state 54
    .               shift and go to state 55


state 77

    (14) Metodo -> OBJECTID ( listaFormales ) : TYPEID { . Expresion } ;
    (19) Expresion -> . BOOL_CONST
    (20) Expresion -> . STR_CONST
    (21) Expresion -> . INT_CONST
    (22) Expresion -> . OBJECTID
    (23) Expresion -> . { bloque }
    (24) Expresion -> . NEW TYPEID
    (25) Expresion -> . CASE Expresion OF plusExpresion ; ESAC
    (26) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (27) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (28) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (29) Expresion -> . optExpresion OBJECTID ( )
    (30) Expresion -> . optExpresion OBJECTID ( listaExpresiones )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (33) Expresion -> . ~ Expresion
    (34) Expresion -> . ISVOID Expresion
    (35) Expresion -> . NOT Expresion
    (36) Expresion -> . ( Expresion )
    (37) Expresion -> . Expresion = Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion LE Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion + Expresion
    (42) Expresion -> . Expresion / Expresion
    (43) Expresion -> . Expresion * Expresion
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    (47) optExpresion -> . Expresion .
    (48) optExpresion -> .
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 40
    {               shift and go to state 41
    NEW             shift and go to state 42
    CASE            shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NOT             shift and go to state 51
    (               shift and go to state 48

    Expresion                      shift and go to state 97
    optExpresion                   shift and go to state 47

state 78

    (15) Metodo -> OBJECTID ( ) : TYPEID { Expresion . } ;
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (37) Expresion -> Expresion . = Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . LE Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . + Expresion
    (42) Expresion -> Expresion . / Expresion
    (43) Expresion -> Expresion . * Expresion
    (47) optExpresion -> Expresion . .
    }               shift and go to state 98
    @               shift and go to state 54
    =               shift and go to state 56
    <               shift and go to state 57
    LE              shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    .               shift and go to state 55


state 79

    (31) Expresion -> Expresion @ TYPEID . . OBJECTID ( listaExpresiones )
    (32) Expresion -> Expresion @ TYPEID . . OBJECTID ( )
    .               shift and go to state 99


state 80

    (37) Expresion -> Expresion = Expresion .
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (37) Expresion -> Expresion . = Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . LE Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . + Expresion
    (42) Expresion -> Expresion . / Expresion
    (43) Expresion -> Expresion . * Expresion
    (47) optExpresion -> Expresion . .
    =               reduce using rule 37 (Expresion -> Expresion = Expresion .)
    <               reduce using rule 37 (Expresion -> Expresion = Expresion .)
    LE              reduce using rule 37 (Expresion -> Expresion = Expresion .)
    ;               reduce using rule 37 (Expresion -> Expresion = Expresion .)
    OF              reduce using rule 37 (Expresion -> Expresion = Expresion .)
    LOOP            reduce using rule 37 (Expresion -> Expresion = Expresion .)
    THEN            reduce using rule 37 (Expresion -> Expresion = Expresion .)
    )               reduce using rule 37 (Expresion -> Expresion = Expresion .)
    }               reduce using rule 37 (Expresion -> Expresion = Expresion .)
    POOL            reduce using rule 37 (Expresion -> Expresion = Expresion .)
    ELSE            reduce using rule 37 (Expresion -> Expresion = Expresion .)
    ,               reduce using rule 37 (Expresion -> Expresion = Expresion .)
    IN              reduce using rule 37 (Expresion -> Expresion = Expresion .)
    FI              reduce using rule 37 (Expresion -> Expresion = Expresion .)
    OBJECTID        reduce using rule 37 (Expresion -> Expresion = Expresion .)
    @               shift and go to state 54
    -               shift and go to state 59
    +               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    .               shift and go to state 55


state 81

    (38) Expresion -> Expresion < Expresion .
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (37) Expresion -> Expresion . = Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . LE Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . + Expresion
    (42) Expresion -> Expresion . / Expresion
    (43) Expresion -> Expresion . * Expresion
    (47) optExpresion -> Expresion . .
    =               reduce using rule 38 (Expresion -> Expresion < Expresion .)
    <               reduce using rule 38 (Expresion -> Expresion < Expresion .)
    LE              reduce using rule 38 (Expresion -> Expresion < Expresion .)
    ;               reduce using rule 38 (Expresion -> Expresion < Expresion .)
    OF              reduce using rule 38 (Expresion -> Expresion < Expresion .)
    LOOP            reduce using rule 38 (Expresion -> Expresion < Expresion .)
    THEN            reduce using rule 38 (Expresion -> Expresion < Expresion .)
    )               reduce using rule 38 (Expresion -> Expresion < Expresion .)
    }               reduce using rule 38 (Expresion -> Expresion < Expresion .)
    POOL            reduce using rule 38 (Expresion -> Expresion < Expresion .)
    ELSE            reduce using rule 38 (Expresion -> Expresion < Expresion .)
    ,               reduce using rule 38 (Expresion -> Expresion < Expresion .)
    IN              reduce using rule 38 (Expresion -> Expresion < Expresion .)
    FI              reduce using rule 38 (Expresion -> Expresion < Expresion .)
    OBJECTID        reduce using rule 38 (Expresion -> Expresion < Expresion .)
    @               shift and go to state 54
    -               shift and go to state 59
    +               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    .               shift and go to state 55


state 82

    (39) Expresion -> Expresion LE Expresion .
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (37) Expresion -> Expresion . = Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . LE Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . + Expresion
    (42) Expresion -> Expresion . / Expresion
    (43) Expresion -> Expresion . * Expresion
    (47) optExpresion -> Expresion . .
    =               reduce using rule 39 (Expresion -> Expresion LE Expresion .)
    <               reduce using rule 39 (Expresion -> Expresion LE Expresion .)
    LE              reduce using rule 39 (Expresion -> Expresion LE Expresion .)
    ;               reduce using rule 39 (Expresion -> Expresion LE Expresion .)
    OF              reduce using rule 39 (Expresion -> Expresion LE Expresion .)
    LOOP            reduce using rule 39 (Expresion -> Expresion LE Expresion .)
    THEN            reduce using rule 39 (Expresion -> Expresion LE Expresion .)
    )               reduce using rule 39 (Expresion -> Expresion LE Expresion .)
    }               reduce using rule 39 (Expresion -> Expresion LE Expresion .)
    POOL            reduce using rule 39 (Expresion -> Expresion LE Expresion .)
    ELSE            reduce using rule 39 (Expresion -> Expresion LE Expresion .)
    ,               reduce using rule 39 (Expresion -> Expresion LE Expresion .)
    IN              reduce using rule 39 (Expresion -> Expresion LE Expresion .)
    FI              reduce using rule 39 (Expresion -> Expresion LE Expresion .)
    OBJECTID        reduce using rule 39 (Expresion -> Expresion LE Expresion .)
    @               shift and go to state 54
    -               shift and go to state 59
    +               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    .               shift and go to state 55


state 83

    (40) Expresion -> Expresion - Expresion .
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (37) Expresion -> Expresion . = Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . LE Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . + Expresion
    (42) Expresion -> Expresion . / Expresion
    (43) Expresion -> Expresion . * Expresion
    (47) optExpresion -> Expresion . .
    =               reduce using rule 40 (Expresion -> Expresion - Expresion .)
    <               reduce using rule 40 (Expresion -> Expresion - Expresion .)
    LE              reduce using rule 40 (Expresion -> Expresion - Expresion .)
    -               reduce using rule 40 (Expresion -> Expresion - Expresion .)
    +               reduce using rule 40 (Expresion -> Expresion - Expresion .)
    ;               reduce using rule 40 (Expresion -> Expresion - Expresion .)
    OF              reduce using rule 40 (Expresion -> Expresion - Expresion .)
    LOOP            reduce using rule 40 (Expresion -> Expresion - Expresion .)
    THEN            reduce using rule 40 (Expresion -> Expresion - Expresion .)
    )               reduce using rule 40 (Expresion -> Expresion - Expresion .)
    }               reduce using rule 40 (Expresion -> Expresion - Expresion .)
    POOL            reduce using rule 40 (Expresion -> Expresion - Expresion .)
    ELSE            reduce using rule 40 (Expresion -> Expresion - Expresion .)
    ,               reduce using rule 40 (Expresion -> Expresion - Expresion .)
    IN              reduce using rule 40 (Expresion -> Expresion - Expresion .)
    FI              reduce using rule 40 (Expresion -> Expresion - Expresion .)
    OBJECTID        reduce using rule 40 (Expresion -> Expresion - Expresion .)
    @               shift and go to state 54
    /               shift and go to state 61
    *               shift and go to state 62
    .               shift and go to state 55


state 84

    (41) Expresion -> Expresion + Expresion .
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (37) Expresion -> Expresion . = Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . LE Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . + Expresion
    (42) Expresion -> Expresion . / Expresion
    (43) Expresion -> Expresion . * Expresion
    (47) optExpresion -> Expresion . .
    =               reduce using rule 41 (Expresion -> Expresion + Expresion .)
    <               reduce using rule 41 (Expresion -> Expresion + Expresion .)
    LE              reduce using rule 41 (Expresion -> Expresion + Expresion .)
    -               reduce using rule 41 (Expresion -> Expresion + Expresion .)
    +               reduce using rule 41 (Expresion -> Expresion + Expresion .)
    ;               reduce using rule 41 (Expresion -> Expresion + Expresion .)
    OF              reduce using rule 41 (Expresion -> Expresion + Expresion .)
    LOOP            reduce using rule 41 (Expresion -> Expresion + Expresion .)
    THEN            reduce using rule 41 (Expresion -> Expresion + Expresion .)
    )               reduce using rule 41 (Expresion -> Expresion + Expresion .)
    }               reduce using rule 41 (Expresion -> Expresion + Expresion .)
    POOL            reduce using rule 41 (Expresion -> Expresion + Expresion .)
    ELSE            reduce using rule 41 (Expresion -> Expresion + Expresion .)
    ,               reduce using rule 41 (Expresion -> Expresion + Expresion .)
    IN              reduce using rule 41 (Expresion -> Expresion + Expresion .)
    FI              reduce using rule 41 (Expresion -> Expresion + Expresion .)
    OBJECTID        reduce using rule 41 (Expresion -> Expresion + Expresion .)
    @               shift and go to state 54
    /               shift and go to state 61
    *               shift and go to state 62
    .               shift and go to state 55


state 85

    (42) Expresion -> Expresion / Expresion .
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (37) Expresion -> Expresion . = Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . LE Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . + Expresion
    (42) Expresion -> Expresion . / Expresion
    (43) Expresion -> Expresion . * Expresion
    (47) optExpresion -> Expresion . .
    =               reduce using rule 42 (Expresion -> Expresion / Expresion .)
    <               reduce using rule 42 (Expresion -> Expresion / Expresion .)
    LE              reduce using rule 42 (Expresion -> Expresion / Expresion .)
    -               reduce using rule 42 (Expresion -> Expresion / Expresion .)
    +               reduce using rule 42 (Expresion -> Expresion / Expresion .)
    /               reduce using rule 42 (Expresion -> Expresion / Expresion .)
    *               reduce using rule 42 (Expresion -> Expresion / Expresion .)
    ;               reduce using rule 42 (Expresion -> Expresion / Expresion .)
    OF              reduce using rule 42 (Expresion -> Expresion / Expresion .)
    LOOP            reduce using rule 42 (Expresion -> Expresion / Expresion .)
    THEN            reduce using rule 42 (Expresion -> Expresion / Expresion .)
    )               reduce using rule 42 (Expresion -> Expresion / Expresion .)
    }               reduce using rule 42 (Expresion -> Expresion / Expresion .)
    POOL            reduce using rule 42 (Expresion -> Expresion / Expresion .)
    ELSE            reduce using rule 42 (Expresion -> Expresion / Expresion .)
    ,               reduce using rule 42 (Expresion -> Expresion / Expresion .)
    IN              reduce using rule 42 (Expresion -> Expresion / Expresion .)
    FI              reduce using rule 42 (Expresion -> Expresion / Expresion .)
    OBJECTID        reduce using rule 42 (Expresion -> Expresion / Expresion .)
    @               shift and go to state 54
    .               shift and go to state 55


state 86

    (43) Expresion -> Expresion * Expresion .
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (37) Expresion -> Expresion . = Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . LE Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . + Expresion
    (42) Expresion -> Expresion . / Expresion
    (43) Expresion -> Expresion . * Expresion
    (47) optExpresion -> Expresion . .
    =               reduce using rule 43 (Expresion -> Expresion * Expresion .)
    <               reduce using rule 43 (Expresion -> Expresion * Expresion .)
    LE              reduce using rule 43 (Expresion -> Expresion * Expresion .)
    -               reduce using rule 43 (Expresion -> Expresion * Expresion .)
    +               reduce using rule 43 (Expresion -> Expresion * Expresion .)
    /               reduce using rule 43 (Expresion -> Expresion * Expresion .)
    *               reduce using rule 43 (Expresion -> Expresion * Expresion .)
    ;               reduce using rule 43 (Expresion -> Expresion * Expresion .)
    OF              reduce using rule 43 (Expresion -> Expresion * Expresion .)
    LOOP            reduce using rule 43 (Expresion -> Expresion * Expresion .)
    THEN            reduce using rule 43 (Expresion -> Expresion * Expresion .)
    )               reduce using rule 43 (Expresion -> Expresion * Expresion .)
    }               reduce using rule 43 (Expresion -> Expresion * Expresion .)
    POOL            reduce using rule 43 (Expresion -> Expresion * Expresion .)
    ELSE            reduce using rule 43 (Expresion -> Expresion * Expresion .)
    ,               reduce using rule 43 (Expresion -> Expresion * Expresion .)
    IN              reduce using rule 43 (Expresion -> Expresion * Expresion .)
    FI              reduce using rule 43 (Expresion -> Expresion * Expresion .)
    OBJECTID        reduce using rule 43 (Expresion -> Expresion * Expresion .)
    @               shift and go to state 54
    .               shift and go to state 55


state 87

    (44) Expresion -> OBJECTID ASSIGN Expresion .
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (37) Expresion -> Expresion . = Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . LE Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . + Expresion
    (42) Expresion -> Expresion . / Expresion
    (43) Expresion -> Expresion . * Expresion
    (47) optExpresion -> Expresion . .
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 44 (Expresion -> OBJECTID ASSIGN Expresion .)
    OF              reduce using rule 44 (Expresion -> OBJECTID ASSIGN Expresion .)
    LOOP            reduce using rule 44 (Expresion -> OBJECTID ASSIGN Expresion .)
    THEN            reduce using rule 44 (Expresion -> OBJECTID ASSIGN Expresion .)
    )               reduce using rule 44 (Expresion -> OBJECTID ASSIGN Expresion .)
    }               reduce using rule 44 (Expresion -> OBJECTID ASSIGN Expresion .)
    POOL            reduce using rule 44 (Expresion -> OBJECTID ASSIGN Expresion .)
    ELSE            reduce using rule 44 (Expresion -> OBJECTID ASSIGN Expresion .)
    ,               reduce using rule 44 (Expresion -> OBJECTID ASSIGN Expresion .)
    IN              reduce using rule 44 (Expresion -> OBJECTID ASSIGN Expresion .)
    FI              reduce using rule 44 (Expresion -> OBJECTID ASSIGN Expresion .)
    OBJECTID        reduce using rule 44 (Expresion -> OBJECTID ASSIGN Expresion .)
    @               shift and go to state 54
    =               shift and go to state 56
    <               shift and go to state 57
    LE              shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    .               shift and go to state 55


state 88

    (23) Expresion -> { bloque } .
    @               reduce using rule 23 (Expresion -> { bloque } .)
    =               reduce using rule 23 (Expresion -> { bloque } .)
    <               reduce using rule 23 (Expresion -> { bloque } .)
    LE              reduce using rule 23 (Expresion -> { bloque } .)
    -               reduce using rule 23 (Expresion -> { bloque } .)
    +               reduce using rule 23 (Expresion -> { bloque } .)
    /               reduce using rule 23 (Expresion -> { bloque } .)
    *               reduce using rule 23 (Expresion -> { bloque } .)
    .               reduce using rule 23 (Expresion -> { bloque } .)
    ;               reduce using rule 23 (Expresion -> { bloque } .)
    OF              reduce using rule 23 (Expresion -> { bloque } .)
    LOOP            reduce using rule 23 (Expresion -> { bloque } .)
    THEN            reduce using rule 23 (Expresion -> { bloque } .)
    )               reduce using rule 23 (Expresion -> { bloque } .)
    }               reduce using rule 23 (Expresion -> { bloque } .)
    POOL            reduce using rule 23 (Expresion -> { bloque } .)
    ELSE            reduce using rule 23 (Expresion -> { bloque } .)
    ,               reduce using rule 23 (Expresion -> { bloque } .)
    IN              reduce using rule 23 (Expresion -> { bloque } .)
    FI              reduce using rule 23 (Expresion -> { bloque } .)
    OBJECTID        reduce using rule 23 (Expresion -> { bloque } .)


state 89

    (55) bloque -> Expresion ; . bloque
    (58) bloque -> Expresion ; .
    (55) bloque -> . Expresion ; bloque
    (56) bloque -> . error ;
    (57) bloque -> . error ; Expresion ;
    (58) bloque -> . Expresion ;
    (19) Expresion -> . BOOL_CONST
    (20) Expresion -> . STR_CONST
    (21) Expresion -> . INT_CONST
    (22) Expresion -> . OBJECTID
    (23) Expresion -> . { bloque }
    (24) Expresion -> . NEW TYPEID
    (25) Expresion -> . CASE Expresion OF plusExpresion ; ESAC
    (26) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (27) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (28) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (29) Expresion -> . optExpresion OBJECTID ( )
    (30) Expresion -> . optExpresion OBJECTID ( listaExpresiones )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (33) Expresion -> . ~ Expresion
    (34) Expresion -> . ISVOID Expresion
    (35) Expresion -> . NOT Expresion
    (36) Expresion -> . ( Expresion )
    (37) Expresion -> . Expresion = Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion LE Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion + Expresion
    (42) Expresion -> . Expresion / Expresion
    (43) Expresion -> . Expresion * Expresion
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    (47) optExpresion -> . Expresion .
    (48) optExpresion -> .
  ! shift/reduce conflict for OBJECTID resolved as shift
    }               reduce using rule 58 (bloque -> Expresion ; .)
    error           shift and go to state 66
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 40
    {               shift and go to state 41
    NEW             shift and go to state 42
    CASE            shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NOT             shift and go to state 51
    (               shift and go to state 48

    Expresion                      shift and go to state 65
    bloque                         shift and go to state 100
    optExpresion                   shift and go to state 47

state 90

    (56) bloque -> error ; .
    (57) bloque -> error ; . Expresion ;
    (19) Expresion -> . BOOL_CONST
    (20) Expresion -> . STR_CONST
    (21) Expresion -> . INT_CONST
    (22) Expresion -> . OBJECTID
    (23) Expresion -> . { bloque }
    (24) Expresion -> . NEW TYPEID
    (25) Expresion -> . CASE Expresion OF plusExpresion ; ESAC
    (26) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (27) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (28) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (29) Expresion -> . optExpresion OBJECTID ( )
    (30) Expresion -> . optExpresion OBJECTID ( listaExpresiones )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (33) Expresion -> . ~ Expresion
    (34) Expresion -> . ISVOID Expresion
    (35) Expresion -> . NOT Expresion
    (36) Expresion -> . ( Expresion )
    (37) Expresion -> . Expresion = Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion LE Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion + Expresion
    (42) Expresion -> . Expresion / Expresion
    (43) Expresion -> . Expresion * Expresion
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    (47) optExpresion -> . Expresion .
    (48) optExpresion -> .
  ! shift/reduce conflict for OBJECTID resolved as shift
    }               reduce using rule 56 (bloque -> error ; .)
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 40
    {               shift and go to state 41
    NEW             shift and go to state 42
    CASE            shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NOT             shift and go to state 51
    (               shift and go to state 48

    Expresion                      shift and go to state 101
    optExpresion                   shift and go to state 47

state 91

    (25) Expresion -> CASE Expresion OF . plusExpresion ; ESAC
    (53) plusExpresion -> . OBJECTID : TYPEID DARROW Expresion plusExpresion
    (54) plusExpresion -> . OBJECTID : TYPEID DARROW Expresion
    OBJECTID        shift and go to state 103

    plusExpresion                  shift and go to state 102

state 92

    (26) Expresion -> LET OBJECTID : . TYPEID optArrow starFormal IN Expresion
    TYPEID          shift and go to state 104


state 93

    (27) Expresion -> WHILE Expresion LOOP . Expresion POOL
    (19) Expresion -> . BOOL_CONST
    (20) Expresion -> . STR_CONST
    (21) Expresion -> . INT_CONST
    (22) Expresion -> . OBJECTID
    (23) Expresion -> . { bloque }
    (24) Expresion -> . NEW TYPEID
    (25) Expresion -> . CASE Expresion OF plusExpresion ; ESAC
    (26) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (27) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (28) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (29) Expresion -> . optExpresion OBJECTID ( )
    (30) Expresion -> . optExpresion OBJECTID ( listaExpresiones )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (33) Expresion -> . ~ Expresion
    (34) Expresion -> . ISVOID Expresion
    (35) Expresion -> . NOT Expresion
    (36) Expresion -> . ( Expresion )
    (37) Expresion -> . Expresion = Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion LE Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion + Expresion
    (42) Expresion -> . Expresion / Expresion
    (43) Expresion -> . Expresion * Expresion
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    (47) optExpresion -> . Expresion .
    (48) optExpresion -> .
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 40
    {               shift and go to state 41
    NEW             shift and go to state 42
    CASE            shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NOT             shift and go to state 51
    (               shift and go to state 48

    Expresion                      shift and go to state 105
    optExpresion                   shift and go to state 47

state 94

    (28) Expresion -> IF Expresion THEN . Expresion ELSE Expresion FI
    (19) Expresion -> . BOOL_CONST
    (20) Expresion -> . STR_CONST
    (21) Expresion -> . INT_CONST
    (22) Expresion -> . OBJECTID
    (23) Expresion -> . { bloque }
    (24) Expresion -> . NEW TYPEID
    (25) Expresion -> . CASE Expresion OF plusExpresion ; ESAC
    (26) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (27) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (28) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (29) Expresion -> . optExpresion OBJECTID ( )
    (30) Expresion -> . optExpresion OBJECTID ( listaExpresiones )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (33) Expresion -> . ~ Expresion
    (34) Expresion -> . ISVOID Expresion
    (35) Expresion -> . NOT Expresion
    (36) Expresion -> . ( Expresion )
    (37) Expresion -> . Expresion = Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion LE Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion + Expresion
    (42) Expresion -> . Expresion / Expresion
    (43) Expresion -> . Expresion * Expresion
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    (47) optExpresion -> . Expresion .
    (48) optExpresion -> .
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 40
    {               shift and go to state 41
    NEW             shift and go to state 42
    CASE            shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NOT             shift and go to state 51
    (               shift and go to state 48

    Expresion                      shift and go to state 106
    optExpresion                   shift and go to state 47

state 95

    (29) Expresion -> optExpresion OBJECTID ( . )
    (30) Expresion -> optExpresion OBJECTID ( . listaExpresiones )
    (45) listaExpresiones -> . Expresion , listaExpresiones
    (46) listaExpresiones -> . Expresion
    (19) Expresion -> . BOOL_CONST
    (20) Expresion -> . STR_CONST
    (21) Expresion -> . INT_CONST
    (22) Expresion -> . OBJECTID
    (23) Expresion -> . { bloque }
    (24) Expresion -> . NEW TYPEID
    (25) Expresion -> . CASE Expresion OF plusExpresion ; ESAC
    (26) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (27) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (28) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (29) Expresion -> . optExpresion OBJECTID ( )
    (30) Expresion -> . optExpresion OBJECTID ( listaExpresiones )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (33) Expresion -> . ~ Expresion
    (34) Expresion -> . ISVOID Expresion
    (35) Expresion -> . NOT Expresion
    (36) Expresion -> . ( Expresion )
    (37) Expresion -> . Expresion = Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion LE Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion + Expresion
    (42) Expresion -> . Expresion / Expresion
    (43) Expresion -> . Expresion * Expresion
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    (47) optExpresion -> . Expresion .
    (48) optExpresion -> .
  ! shift/reduce conflict for OBJECTID resolved as shift
    )               shift and go to state 107
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 40
    {               shift and go to state 41
    NEW             shift and go to state 42
    CASE            shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NOT             shift and go to state 51
    (               shift and go to state 48

    optExpresion                   shift and go to state 47
    listaExpresiones               shift and go to state 108
    Expresion                      shift and go to state 109

state 96

    (36) Expresion -> ( Expresion ) .
    @               reduce using rule 36 (Expresion -> ( Expresion ) .)
    =               reduce using rule 36 (Expresion -> ( Expresion ) .)
    <               reduce using rule 36 (Expresion -> ( Expresion ) .)
    LE              reduce using rule 36 (Expresion -> ( Expresion ) .)
    -               reduce using rule 36 (Expresion -> ( Expresion ) .)
    +               reduce using rule 36 (Expresion -> ( Expresion ) .)
    /               reduce using rule 36 (Expresion -> ( Expresion ) .)
    *               reduce using rule 36 (Expresion -> ( Expresion ) .)
    .               reduce using rule 36 (Expresion -> ( Expresion ) .)
    ;               reduce using rule 36 (Expresion -> ( Expresion ) .)
    OF              reduce using rule 36 (Expresion -> ( Expresion ) .)
    LOOP            reduce using rule 36 (Expresion -> ( Expresion ) .)
    THEN            reduce using rule 36 (Expresion -> ( Expresion ) .)
    )               reduce using rule 36 (Expresion -> ( Expresion ) .)
    }               reduce using rule 36 (Expresion -> ( Expresion ) .)
    POOL            reduce using rule 36 (Expresion -> ( Expresion ) .)
    ELSE            reduce using rule 36 (Expresion -> ( Expresion ) .)
    ,               reduce using rule 36 (Expresion -> ( Expresion ) .)
    IN              reduce using rule 36 (Expresion -> ( Expresion ) .)
    FI              reduce using rule 36 (Expresion -> ( Expresion ) .)
    OBJECTID        reduce using rule 36 (Expresion -> ( Expresion ) .)


state 97

    (14) Metodo -> OBJECTID ( listaFormales ) : TYPEID { Expresion . } ;
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (37) Expresion -> Expresion . = Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . LE Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . + Expresion
    (42) Expresion -> Expresion . / Expresion
    (43) Expresion -> Expresion . * Expresion
    (47) optExpresion -> Expresion . .
    }               shift and go to state 110
    @               shift and go to state 54
    =               shift and go to state 56
    <               shift and go to state 57
    LE              shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    .               shift and go to state 55


state 98

    (15) Metodo -> OBJECTID ( ) : TYPEID { Expresion } . ;
    ;               shift and go to state 111


state 99

    (31) Expresion -> Expresion @ TYPEID . . OBJECTID ( listaExpresiones )
    (32) Expresion -> Expresion @ TYPEID . . OBJECTID ( )
    OBJECTID        shift and go to state 112


state 100

    (55) bloque -> Expresion ; bloque .
    }               reduce using rule 55 (bloque -> Expresion ; bloque .)


state 101

    (57) bloque -> error ; Expresion . ;
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (37) Expresion -> Expresion . = Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . LE Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . + Expresion
    (42) Expresion -> Expresion . / Expresion
    (43) Expresion -> Expresion . * Expresion
    (47) optExpresion -> Expresion . .
    ;               shift and go to state 113
    @               shift and go to state 54
    =               shift and go to state 56
    <               shift and go to state 57
    LE              shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    .               shift and go to state 55


state 102

    (25) Expresion -> CASE Expresion OF plusExpresion . ; ESAC
    ;               shift and go to state 114


state 103

    (53) plusExpresion -> OBJECTID . : TYPEID DARROW Expresion plusExpresion
    (54) plusExpresion -> OBJECTID . : TYPEID DARROW Expresion
    :               shift and go to state 115


state 104

    (26) Expresion -> LET OBJECTID : TYPEID . optArrow starFormal IN Expresion
    (49) optArrow -> . ASSIGN Expresion
    (50) optArrow -> .
    ASSIGN          shift and go to state 117
    ,               reduce using rule 50 (optArrow -> .)
    IN              reduce using rule 50 (optArrow -> .)

    optArrow                       shift and go to state 116

state 105

    (27) Expresion -> WHILE Expresion LOOP Expresion . POOL
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (37) Expresion -> Expresion . = Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . LE Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . + Expresion
    (42) Expresion -> Expresion . / Expresion
    (43) Expresion -> Expresion . * Expresion
    (47) optExpresion -> Expresion . .
    POOL            shift and go to state 118
    @               shift and go to state 54
    =               shift and go to state 56
    <               shift and go to state 57
    LE              shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    .               shift and go to state 55


state 106

    (28) Expresion -> IF Expresion THEN Expresion . ELSE Expresion FI
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (37) Expresion -> Expresion . = Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . LE Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . + Expresion
    (42) Expresion -> Expresion . / Expresion
    (43) Expresion -> Expresion . * Expresion
    (47) optExpresion -> Expresion . .
    ELSE            shift and go to state 119
    @               shift and go to state 54
    =               shift and go to state 56
    <               shift and go to state 57
    LE              shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    .               shift and go to state 55


state 107

    (29) Expresion -> optExpresion OBJECTID ( ) .
    @               reduce using rule 29 (Expresion -> optExpresion OBJECTID ( ) .)
    =               reduce using rule 29 (Expresion -> optExpresion OBJECTID ( ) .)
    <               reduce using rule 29 (Expresion -> optExpresion OBJECTID ( ) .)
    LE              reduce using rule 29 (Expresion -> optExpresion OBJECTID ( ) .)
    -               reduce using rule 29 (Expresion -> optExpresion OBJECTID ( ) .)
    +               reduce using rule 29 (Expresion -> optExpresion OBJECTID ( ) .)
    /               reduce using rule 29 (Expresion -> optExpresion OBJECTID ( ) .)
    *               reduce using rule 29 (Expresion -> optExpresion OBJECTID ( ) .)
    .               reduce using rule 29 (Expresion -> optExpresion OBJECTID ( ) .)
    ;               reduce using rule 29 (Expresion -> optExpresion OBJECTID ( ) .)
    OF              reduce using rule 29 (Expresion -> optExpresion OBJECTID ( ) .)
    LOOP            reduce using rule 29 (Expresion -> optExpresion OBJECTID ( ) .)
    THEN            reduce using rule 29 (Expresion -> optExpresion OBJECTID ( ) .)
    )               reduce using rule 29 (Expresion -> optExpresion OBJECTID ( ) .)
    }               reduce using rule 29 (Expresion -> optExpresion OBJECTID ( ) .)
    POOL            reduce using rule 29 (Expresion -> optExpresion OBJECTID ( ) .)
    ELSE            reduce using rule 29 (Expresion -> optExpresion OBJECTID ( ) .)
    ,               reduce using rule 29 (Expresion -> optExpresion OBJECTID ( ) .)
    IN              reduce using rule 29 (Expresion -> optExpresion OBJECTID ( ) .)
    FI              reduce using rule 29 (Expresion -> optExpresion OBJECTID ( ) .)
    OBJECTID        reduce using rule 29 (Expresion -> optExpresion OBJECTID ( ) .)


state 108

    (30) Expresion -> optExpresion OBJECTID ( listaExpresiones . )
    )               shift and go to state 120


state 109

    (45) listaExpresiones -> Expresion . , listaExpresiones
    (46) listaExpresiones -> Expresion .
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (37) Expresion -> Expresion . = Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . LE Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . + Expresion
    (42) Expresion -> Expresion . / Expresion
    (43) Expresion -> Expresion . * Expresion
    (47) optExpresion -> Expresion . .
    ,               shift and go to state 121
    )               reduce using rule 46 (listaExpresiones -> Expresion .)
    @               shift and go to state 54
    =               shift and go to state 56
    <               shift and go to state 57
    LE              shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    .               shift and go to state 55


state 110

    (14) Metodo -> OBJECTID ( listaFormales ) : TYPEID { Expresion } . ;
    ;               shift and go to state 122


state 111

    (15) Metodo -> OBJECTID ( ) : TYPEID { Expresion } ; .
    OBJECTID        reduce using rule 15 (Metodo -> OBJECTID ( ) : TYPEID { Expresion } ; .)
    }               reduce using rule 15 (Metodo -> OBJECTID ( ) : TYPEID { Expresion } ; .)


state 112

    (31) Expresion -> Expresion @ TYPEID . OBJECTID . ( listaExpresiones )
    (32) Expresion -> Expresion @ TYPEID . OBJECTID . ( )
    (               shift and go to state 123


state 113

    (57) bloque -> error ; Expresion ; .
    }               reduce using rule 57 (bloque -> error ; Expresion ; .)


state 114

    (25) Expresion -> CASE Expresion OF plusExpresion ; . ESAC
    ESAC            shift and go to state 124


state 115

    (53) plusExpresion -> OBJECTID : . TYPEID DARROW Expresion plusExpresion
    (54) plusExpresion -> OBJECTID : . TYPEID DARROW Expresion
    TYPEID          shift and go to state 125


state 116

    (26) Expresion -> LET OBJECTID : TYPEID optArrow . starFormal IN Expresion
    (51) starFormal -> . , OBJECTID : TYPEID optArrow starFormal
    (52) starFormal -> .
    ,               shift and go to state 127
    IN              reduce using rule 52 (starFormal -> .)

    starFormal                     shift and go to state 126

state 117

    (49) optArrow -> ASSIGN . Expresion
    (19) Expresion -> . BOOL_CONST
    (20) Expresion -> . STR_CONST
    (21) Expresion -> . INT_CONST
    (22) Expresion -> . OBJECTID
    (23) Expresion -> . { bloque }
    (24) Expresion -> . NEW TYPEID
    (25) Expresion -> . CASE Expresion OF plusExpresion ; ESAC
    (26) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (27) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (28) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (29) Expresion -> . optExpresion OBJECTID ( )
    (30) Expresion -> . optExpresion OBJECTID ( listaExpresiones )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (33) Expresion -> . ~ Expresion
    (34) Expresion -> . ISVOID Expresion
    (35) Expresion -> . NOT Expresion
    (36) Expresion -> . ( Expresion )
    (37) Expresion -> . Expresion = Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion LE Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion + Expresion
    (42) Expresion -> . Expresion / Expresion
    (43) Expresion -> . Expresion * Expresion
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    (47) optExpresion -> . Expresion .
    (48) optExpresion -> .
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 40
    {               shift and go to state 41
    NEW             shift and go to state 42
    CASE            shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NOT             shift and go to state 51
    (               shift and go to state 48

    Expresion                      shift and go to state 128
    optExpresion                   shift and go to state 47

state 118

    (27) Expresion -> WHILE Expresion LOOP Expresion POOL .
    @               reduce using rule 27 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    =               reduce using rule 27 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    <               reduce using rule 27 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    LE              reduce using rule 27 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    -               reduce using rule 27 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    +               reduce using rule 27 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    /               reduce using rule 27 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    *               reduce using rule 27 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    .               reduce using rule 27 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    ;               reduce using rule 27 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    OF              reduce using rule 27 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    LOOP            reduce using rule 27 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    THEN            reduce using rule 27 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    )               reduce using rule 27 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    }               reduce using rule 27 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    POOL            reduce using rule 27 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    ELSE            reduce using rule 27 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    ,               reduce using rule 27 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    IN              reduce using rule 27 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    FI              reduce using rule 27 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    OBJECTID        reduce using rule 27 (Expresion -> WHILE Expresion LOOP Expresion POOL .)


state 119

    (28) Expresion -> IF Expresion THEN Expresion ELSE . Expresion FI
    (19) Expresion -> . BOOL_CONST
    (20) Expresion -> . STR_CONST
    (21) Expresion -> . INT_CONST
    (22) Expresion -> . OBJECTID
    (23) Expresion -> . { bloque }
    (24) Expresion -> . NEW TYPEID
    (25) Expresion -> . CASE Expresion OF plusExpresion ; ESAC
    (26) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (27) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (28) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (29) Expresion -> . optExpresion OBJECTID ( )
    (30) Expresion -> . optExpresion OBJECTID ( listaExpresiones )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (33) Expresion -> . ~ Expresion
    (34) Expresion -> . ISVOID Expresion
    (35) Expresion -> . NOT Expresion
    (36) Expresion -> . ( Expresion )
    (37) Expresion -> . Expresion = Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion LE Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion + Expresion
    (42) Expresion -> . Expresion / Expresion
    (43) Expresion -> . Expresion * Expresion
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    (47) optExpresion -> . Expresion .
    (48) optExpresion -> .
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 40
    {               shift and go to state 41
    NEW             shift and go to state 42
    CASE            shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NOT             shift and go to state 51
    (               shift and go to state 48

    Expresion                      shift and go to state 129
    optExpresion                   shift and go to state 47

state 120

    (30) Expresion -> optExpresion OBJECTID ( listaExpresiones ) .
    @               reduce using rule 30 (Expresion -> optExpresion OBJECTID ( listaExpresiones ) .)
    =               reduce using rule 30 (Expresion -> optExpresion OBJECTID ( listaExpresiones ) .)
    <               reduce using rule 30 (Expresion -> optExpresion OBJECTID ( listaExpresiones ) .)
    LE              reduce using rule 30 (Expresion -> optExpresion OBJECTID ( listaExpresiones ) .)
    -               reduce using rule 30 (Expresion -> optExpresion OBJECTID ( listaExpresiones ) .)
    +               reduce using rule 30 (Expresion -> optExpresion OBJECTID ( listaExpresiones ) .)
    /               reduce using rule 30 (Expresion -> optExpresion OBJECTID ( listaExpresiones ) .)
    *               reduce using rule 30 (Expresion -> optExpresion OBJECTID ( listaExpresiones ) .)
    .               reduce using rule 30 (Expresion -> optExpresion OBJECTID ( listaExpresiones ) .)
    ;               reduce using rule 30 (Expresion -> optExpresion OBJECTID ( listaExpresiones ) .)
    OF              reduce using rule 30 (Expresion -> optExpresion OBJECTID ( listaExpresiones ) .)
    LOOP            reduce using rule 30 (Expresion -> optExpresion OBJECTID ( listaExpresiones ) .)
    THEN            reduce using rule 30 (Expresion -> optExpresion OBJECTID ( listaExpresiones ) .)
    )               reduce using rule 30 (Expresion -> optExpresion OBJECTID ( listaExpresiones ) .)
    }               reduce using rule 30 (Expresion -> optExpresion OBJECTID ( listaExpresiones ) .)
    POOL            reduce using rule 30 (Expresion -> optExpresion OBJECTID ( listaExpresiones ) .)
    ELSE            reduce using rule 30 (Expresion -> optExpresion OBJECTID ( listaExpresiones ) .)
    ,               reduce using rule 30 (Expresion -> optExpresion OBJECTID ( listaExpresiones ) .)
    IN              reduce using rule 30 (Expresion -> optExpresion OBJECTID ( listaExpresiones ) .)
    FI              reduce using rule 30 (Expresion -> optExpresion OBJECTID ( listaExpresiones ) .)
    OBJECTID        reduce using rule 30 (Expresion -> optExpresion OBJECTID ( listaExpresiones ) .)


state 121

    (45) listaExpresiones -> Expresion , . listaExpresiones
    (45) listaExpresiones -> . Expresion , listaExpresiones
    (46) listaExpresiones -> . Expresion
    (19) Expresion -> . BOOL_CONST
    (20) Expresion -> . STR_CONST
    (21) Expresion -> . INT_CONST
    (22) Expresion -> . OBJECTID
    (23) Expresion -> . { bloque }
    (24) Expresion -> . NEW TYPEID
    (25) Expresion -> . CASE Expresion OF plusExpresion ; ESAC
    (26) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (27) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (28) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (29) Expresion -> . optExpresion OBJECTID ( )
    (30) Expresion -> . optExpresion OBJECTID ( listaExpresiones )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (33) Expresion -> . ~ Expresion
    (34) Expresion -> . ISVOID Expresion
    (35) Expresion -> . NOT Expresion
    (36) Expresion -> . ( Expresion )
    (37) Expresion -> . Expresion = Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion LE Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion + Expresion
    (42) Expresion -> . Expresion / Expresion
    (43) Expresion -> . Expresion * Expresion
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    (47) optExpresion -> . Expresion .
    (48) optExpresion -> .
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 40
    {               shift and go to state 41
    NEW             shift and go to state 42
    CASE            shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NOT             shift and go to state 51
    (               shift and go to state 48

    Expresion                      shift and go to state 109
    listaExpresiones               shift and go to state 130
    optExpresion                   shift and go to state 47

state 122

    (14) Metodo -> OBJECTID ( listaFormales ) : TYPEID { Expresion } ; .
    OBJECTID        reduce using rule 14 (Metodo -> OBJECTID ( listaFormales ) : TYPEID { Expresion } ; .)
    }               reduce using rule 14 (Metodo -> OBJECTID ( listaFormales ) : TYPEID { Expresion } ; .)


state 123

    (31) Expresion -> Expresion @ TYPEID . OBJECTID ( . listaExpresiones )
    (32) Expresion -> Expresion @ TYPEID . OBJECTID ( . )
    (45) listaExpresiones -> . Expresion , listaExpresiones
    (46) listaExpresiones -> . Expresion
    (19) Expresion -> . BOOL_CONST
    (20) Expresion -> . STR_CONST
    (21) Expresion -> . INT_CONST
    (22) Expresion -> . OBJECTID
    (23) Expresion -> . { bloque }
    (24) Expresion -> . NEW TYPEID
    (25) Expresion -> . CASE Expresion OF plusExpresion ; ESAC
    (26) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (27) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (28) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (29) Expresion -> . optExpresion OBJECTID ( )
    (30) Expresion -> . optExpresion OBJECTID ( listaExpresiones )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (33) Expresion -> . ~ Expresion
    (34) Expresion -> . ISVOID Expresion
    (35) Expresion -> . NOT Expresion
    (36) Expresion -> . ( Expresion )
    (37) Expresion -> . Expresion = Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion LE Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion + Expresion
    (42) Expresion -> . Expresion / Expresion
    (43) Expresion -> . Expresion * Expresion
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    (47) optExpresion -> . Expresion .
    (48) optExpresion -> .
  ! shift/reduce conflict for OBJECTID resolved as shift
    )               shift and go to state 132
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 40
    {               shift and go to state 41
    NEW             shift and go to state 42
    CASE            shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NOT             shift and go to state 51
    (               shift and go to state 48

    Expresion                      shift and go to state 109
    listaExpresiones               shift and go to state 131
    optExpresion                   shift and go to state 47

state 124

    (25) Expresion -> CASE Expresion OF plusExpresion ; ESAC .
    @               reduce using rule 25 (Expresion -> CASE Expresion OF plusExpresion ; ESAC .)
    =               reduce using rule 25 (Expresion -> CASE Expresion OF plusExpresion ; ESAC .)
    <               reduce using rule 25 (Expresion -> CASE Expresion OF plusExpresion ; ESAC .)
    LE              reduce using rule 25 (Expresion -> CASE Expresion OF plusExpresion ; ESAC .)
    -               reduce using rule 25 (Expresion -> CASE Expresion OF plusExpresion ; ESAC .)
    +               reduce using rule 25 (Expresion -> CASE Expresion OF plusExpresion ; ESAC .)
    /               reduce using rule 25 (Expresion -> CASE Expresion OF plusExpresion ; ESAC .)
    *               reduce using rule 25 (Expresion -> CASE Expresion OF plusExpresion ; ESAC .)
    .               reduce using rule 25 (Expresion -> CASE Expresion OF plusExpresion ; ESAC .)
    ;               reduce using rule 25 (Expresion -> CASE Expresion OF plusExpresion ; ESAC .)
    OF              reduce using rule 25 (Expresion -> CASE Expresion OF plusExpresion ; ESAC .)
    LOOP            reduce using rule 25 (Expresion -> CASE Expresion OF plusExpresion ; ESAC .)
    THEN            reduce using rule 25 (Expresion -> CASE Expresion OF plusExpresion ; ESAC .)
    )               reduce using rule 25 (Expresion -> CASE Expresion OF plusExpresion ; ESAC .)
    }               reduce using rule 25 (Expresion -> CASE Expresion OF plusExpresion ; ESAC .)
    POOL            reduce using rule 25 (Expresion -> CASE Expresion OF plusExpresion ; ESAC .)
    ELSE            reduce using rule 25 (Expresion -> CASE Expresion OF plusExpresion ; ESAC .)
    ,               reduce using rule 25 (Expresion -> CASE Expresion OF plusExpresion ; ESAC .)
    IN              reduce using rule 25 (Expresion -> CASE Expresion OF plusExpresion ; ESAC .)
    FI              reduce using rule 25 (Expresion -> CASE Expresion OF plusExpresion ; ESAC .)
    OBJECTID        reduce using rule 25 (Expresion -> CASE Expresion OF plusExpresion ; ESAC .)


state 125

    (53) plusExpresion -> OBJECTID : TYPEID . DARROW Expresion plusExpresion
    (54) plusExpresion -> OBJECTID : TYPEID . DARROW Expresion
    DARROW          shift and go to state 133


state 126

    (26) Expresion -> LET OBJECTID : TYPEID optArrow starFormal . IN Expresion
    IN              shift and go to state 134


state 127

    (51) starFormal -> , . OBJECTID : TYPEID optArrow starFormal
    OBJECTID        shift and go to state 135


state 128

    (49) optArrow -> ASSIGN Expresion .
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (37) Expresion -> Expresion . = Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . LE Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . + Expresion
    (42) Expresion -> Expresion . / Expresion
    (43) Expresion -> Expresion . * Expresion
    (47) optExpresion -> Expresion . .
    ,               reduce using rule 49 (optArrow -> ASSIGN Expresion .)
    IN              reduce using rule 49 (optArrow -> ASSIGN Expresion .)
    @               shift and go to state 54
    =               shift and go to state 56
    <               shift and go to state 57
    LE              shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    .               shift and go to state 55


state 129

    (28) Expresion -> IF Expresion THEN Expresion ELSE Expresion . FI
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (37) Expresion -> Expresion . = Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . LE Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . + Expresion
    (42) Expresion -> Expresion . / Expresion
    (43) Expresion -> Expresion . * Expresion
    (47) optExpresion -> Expresion . .
    FI              shift and go to state 136
    @               shift and go to state 54
    =               shift and go to state 56
    <               shift and go to state 57
    LE              shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    .               shift and go to state 55


state 130

    (45) listaExpresiones -> Expresion , listaExpresiones .
    )               reduce using rule 45 (listaExpresiones -> Expresion , listaExpresiones .)


state 131

    (31) Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones . )
    )               shift and go to state 137


state 132

    (32) Expresion -> Expresion @ TYPEID . OBJECTID ( ) .
    @               reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    =               reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    <               reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    LE              reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    -               reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    +               reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    /               reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    *               reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    .               reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    ;               reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    OF              reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    LOOP            reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    THEN            reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    )               reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    }               reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    POOL            reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    ELSE            reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    ,               reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    IN              reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    FI              reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    OBJECTID        reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)


state 133

    (53) plusExpresion -> OBJECTID : TYPEID DARROW . Expresion plusExpresion
    (54) plusExpresion -> OBJECTID : TYPEID DARROW . Expresion
    (19) Expresion -> . BOOL_CONST
    (20) Expresion -> . STR_CONST
    (21) Expresion -> . INT_CONST
    (22) Expresion -> . OBJECTID
    (23) Expresion -> . { bloque }
    (24) Expresion -> . NEW TYPEID
    (25) Expresion -> . CASE Expresion OF plusExpresion ; ESAC
    (26) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (27) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (28) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (29) Expresion -> . optExpresion OBJECTID ( )
    (30) Expresion -> . optExpresion OBJECTID ( listaExpresiones )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (33) Expresion -> . ~ Expresion
    (34) Expresion -> . ISVOID Expresion
    (35) Expresion -> . NOT Expresion
    (36) Expresion -> . ( Expresion )
    (37) Expresion -> . Expresion = Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion LE Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion + Expresion
    (42) Expresion -> . Expresion / Expresion
    (43) Expresion -> . Expresion * Expresion
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    (47) optExpresion -> . Expresion .
    (48) optExpresion -> .
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 40
    {               shift and go to state 41
    NEW             shift and go to state 42
    CASE            shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NOT             shift and go to state 51
    (               shift and go to state 48

    Expresion                      shift and go to state 138
    optExpresion                   shift and go to state 47

state 134

    (26) Expresion -> LET OBJECTID : TYPEID optArrow starFormal IN . Expresion
    (19) Expresion -> . BOOL_CONST
    (20) Expresion -> . STR_CONST
    (21) Expresion -> . INT_CONST
    (22) Expresion -> . OBJECTID
    (23) Expresion -> . { bloque }
    (24) Expresion -> . NEW TYPEID
    (25) Expresion -> . CASE Expresion OF plusExpresion ; ESAC
    (26) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (27) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (28) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (29) Expresion -> . optExpresion OBJECTID ( )
    (30) Expresion -> . optExpresion OBJECTID ( listaExpresiones )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (33) Expresion -> . ~ Expresion
    (34) Expresion -> . ISVOID Expresion
    (35) Expresion -> . NOT Expresion
    (36) Expresion -> . ( Expresion )
    (37) Expresion -> . Expresion = Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion LE Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion + Expresion
    (42) Expresion -> . Expresion / Expresion
    (43) Expresion -> . Expresion * Expresion
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    (47) optExpresion -> . Expresion .
    (48) optExpresion -> .
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 40
    {               shift and go to state 41
    NEW             shift and go to state 42
    CASE            shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    ~               shift and go to state 49
    ISVOID          shift and go to state 50
    NOT             shift and go to state 51
    (               shift and go to state 48

    Expresion                      shift and go to state 139
    optExpresion                   shift and go to state 47

state 135

    (51) starFormal -> , OBJECTID . : TYPEID optArrow starFormal
    :               shift and go to state 140


state 136

    (28) Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .
    @               reduce using rule 28 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    =               reduce using rule 28 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    <               reduce using rule 28 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    LE              reduce using rule 28 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    -               reduce using rule 28 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    +               reduce using rule 28 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    /               reduce using rule 28 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    *               reduce using rule 28 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    .               reduce using rule 28 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    ;               reduce using rule 28 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    OF              reduce using rule 28 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    LOOP            reduce using rule 28 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    THEN            reduce using rule 28 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    )               reduce using rule 28 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    }               reduce using rule 28 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    POOL            reduce using rule 28 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    ELSE            reduce using rule 28 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    ,               reduce using rule 28 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    IN              reduce using rule 28 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    FI              reduce using rule 28 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    OBJECTID        reduce using rule 28 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)


state 137

    (31) Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .
    @               reduce using rule 31 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)
    =               reduce using rule 31 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)
    <               reduce using rule 31 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)
    LE              reduce using rule 31 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)
    -               reduce using rule 31 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)
    +               reduce using rule 31 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)
    /               reduce using rule 31 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)
    *               reduce using rule 31 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)
    .               reduce using rule 31 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)
    ;               reduce using rule 31 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)
    OF              reduce using rule 31 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)
    LOOP            reduce using rule 31 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)
    THEN            reduce using rule 31 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)
    )               reduce using rule 31 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)
    }               reduce using rule 31 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)
    POOL            reduce using rule 31 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)
    ELSE            reduce using rule 31 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)
    ,               reduce using rule 31 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)
    IN              reduce using rule 31 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)
    FI              reduce using rule 31 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)
    OBJECTID        reduce using rule 31 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)


state 138

    (53) plusExpresion -> OBJECTID : TYPEID DARROW Expresion . plusExpresion
    (54) plusExpresion -> OBJECTID : TYPEID DARROW Expresion .
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (37) Expresion -> Expresion . = Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . LE Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . + Expresion
    (42) Expresion -> Expresion . / Expresion
    (43) Expresion -> Expresion . * Expresion
    (47) optExpresion -> Expresion . .
    (53) plusExpresion -> . OBJECTID : TYPEID DARROW Expresion plusExpresion
    (54) plusExpresion -> . OBJECTID : TYPEID DARROW Expresion
    ;               reduce using rule 54 (plusExpresion -> OBJECTID : TYPEID DARROW Expresion .)
    @               shift and go to state 54
    =               shift and go to state 56
    <               shift and go to state 57
    LE              shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    .               shift and go to state 55
    OBJECTID        shift and go to state 103

    plusExpresion                  shift and go to state 141

state 139

    (26) Expresion -> LET OBJECTID : TYPEID optArrow starFormal IN Expresion .
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (37) Expresion -> Expresion . = Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . LE Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . + Expresion
    (42) Expresion -> Expresion . / Expresion
    (43) Expresion -> Expresion . * Expresion
    (47) optExpresion -> Expresion . .
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 26 (Expresion -> LET OBJECTID : TYPEID optArrow starFormal IN Expresion .)
    OF              reduce using rule 26 (Expresion -> LET OBJECTID : TYPEID optArrow starFormal IN Expresion .)
    LOOP            reduce using rule 26 (Expresion -> LET OBJECTID : TYPEID optArrow starFormal IN Expresion .)
    THEN            reduce using rule 26 (Expresion -> LET OBJECTID : TYPEID optArrow starFormal IN Expresion .)
    )               reduce using rule 26 (Expresion -> LET OBJECTID : TYPEID optArrow starFormal IN Expresion .)
    }               reduce using rule 26 (Expresion -> LET OBJECTID : TYPEID optArrow starFormal IN Expresion .)
    POOL            reduce using rule 26 (Expresion -> LET OBJECTID : TYPEID optArrow starFormal IN Expresion .)
    ELSE            reduce using rule 26 (Expresion -> LET OBJECTID : TYPEID optArrow starFormal IN Expresion .)
    ,               reduce using rule 26 (Expresion -> LET OBJECTID : TYPEID optArrow starFormal IN Expresion .)
    IN              reduce using rule 26 (Expresion -> LET OBJECTID : TYPEID optArrow starFormal IN Expresion .)
    FI              reduce using rule 26 (Expresion -> LET OBJECTID : TYPEID optArrow starFormal IN Expresion .)
    OBJECTID        reduce using rule 26 (Expresion -> LET OBJECTID : TYPEID optArrow starFormal IN Expresion .)
    @               shift and go to state 54
    =               shift and go to state 56
    <               shift and go to state 57
    LE              shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    .               shift and go to state 55


state 140

    (51) starFormal -> , OBJECTID : . TYPEID optArrow starFormal
    TYPEID          shift and go to state 142


state 141

    (53) plusExpresion -> OBJECTID : TYPEID DARROW Expresion plusExpresion .
    ;               reduce using rule 53 (plusExpresion -> OBJECTID : TYPEID DARROW Expresion plusExpresion .)


state 142

    (51) starFormal -> , OBJECTID : TYPEID . optArrow starFormal
    (49) optArrow -> . ASSIGN Expresion
    (50) optArrow -> .
    ASSIGN          shift and go to state 117
    ,               reduce using rule 50 (optArrow -> .)
    IN              reduce using rule 50 (optArrow -> .)

    optArrow                       shift and go to state 143

state 143

    (51) starFormal -> , OBJECTID : TYPEID optArrow . starFormal
    (51) starFormal -> . , OBJECTID : TYPEID optArrow starFormal
    (52) starFormal -> .
    ,               shift and go to state 127
    IN              reduce using rule 52 (starFormal -> .)

    starFormal                     shift and go to state 144

state 144

    (51) starFormal -> , OBJECTID : TYPEID optArrow starFormal .
    IN              reduce using rule 51 (starFormal -> , OBJECTID : TYPEID optArrow starFormal .)


Conflicts:

shift/reduce conflict for OBJECTID in state 30 resolved as shift
shift/reduce conflict for OBJECTID in state 41 resolved as shift
shift/reduce conflict for OBJECTID in state 43 resolved as shift
shift/reduce conflict for OBJECTID in state 45 resolved as shift
shift/reduce conflict for OBJECTID in state 46 resolved as shift
shift/reduce conflict for OBJECTID in state 48 resolved as shift
shift/reduce conflict for OBJECTID in state 49 resolved as shift
shift/reduce conflict for OBJECTID in state 50 resolved as shift
shift/reduce conflict for OBJECTID in state 51 resolved as shift
shift/reduce conflict for OBJECTID in state 53 resolved as shift
shift/reduce conflict for OBJECTID in state 56 resolved as shift
shift/reduce conflict for OBJECTID in state 57 resolved as shift
shift/reduce conflict for OBJECTID in state 58 resolved as shift
shift/reduce conflict for OBJECTID in state 59 resolved as shift
shift/reduce conflict for OBJECTID in state 60 resolved as shift
shift/reduce conflict for OBJECTID in state 61 resolved as shift
shift/reduce conflict for OBJECTID in state 62 resolved as shift
shift/reduce conflict for OBJECTID in state 63 resolved as shift
shift/reduce conflict for OBJECTID in state 77 resolved as shift
shift/reduce conflict for @ in state 87 resolved as shift
shift/reduce conflict for = in state 87 resolved as shift
shift/reduce conflict for < in state 87 resolved as shift
shift/reduce conflict for LE in state 87 resolved as shift
shift/reduce conflict for - in state 87 resolved as shift
shift/reduce conflict for + in state 87 resolved as shift
shift/reduce conflict for / in state 87 resolved as shift
shift/reduce conflict for * in state 87 resolved as shift
shift/reduce conflict for . in state 87 resolved as shift
shift/reduce conflict for OBJECTID in state 89 resolved as shift
shift/reduce conflict for OBJECTID in state 90 resolved as shift
shift/reduce conflict for OBJECTID in state 93 resolved as shift
shift/reduce conflict for OBJECTID in state 94 resolved as shift
shift/reduce conflict for OBJECTID in state 95 resolved as shift
shift/reduce conflict for OBJECTID in state 117 resolved as shift
shift/reduce conflict for OBJECTID in state 119 resolved as shift
shift/reduce conflict for OBJECTID in state 121 resolved as shift
shift/reduce conflict for OBJECTID in state 123 resolved as shift
shift/reduce conflict for OBJECTID in state 133 resolved as shift
shift/reduce conflict for OBJECTID in state 134 resolved as shift
shift/reduce conflict for @ in state 139 resolved as shift
shift/reduce conflict for = in state 139 resolved as shift
shift/reduce conflict for < in state 139 resolved as shift
shift/reduce conflict for LE in state 139 resolved as shift
shift/reduce conflict for - in state 139 resolved as shift
shift/reduce conflict for + in state 139 resolved as shift
shift/reduce conflict for / in state 139 resolved as shift
shift/reduce conflict for * in state 139 resolved as shift
shift/reduce conflict for . in state 139 resolved as shift
reduce/reduce conflict in state 11 resolved using rule lista_atr_met -> <empty>
rejected rule (lista_atr_met -> Metodo) in state 11
reduce/reduce conflict in state 12 resolved using rule lista_atr_met -> <empty>
rejected rule (lista_atr_met -> Atributo) in state 12
Rule (lista_atr_met -> Metodo) is never reduced
Rule (lista_atr_met -> Atributo) is never reduced