Grammar:

Rule 0     S' -> Programa
Rule 1     Programa -> Clase
Rule 2     Programa -> Programa Clase
Rule 3     Clase -> CLASS TYPEID optInherit class_body ;
Rule 4     optInherit -> INHERITS TYPEID
Rule 5     optInherit -> <empty>
Rule 6     lista_atr_met -> Metodo lista_atr_met
Rule 7     lista_atr_met -> Atributo lista_atr_met
Rule 8     lista_atr_met -> Metodo
Rule 9     lista_atr_met -> Atributo
Rule 10    class_body -> { lista_atr_met }
Rule 11    class_body -> { }
Rule 12    Atributo -> OBJECTID : TYPEID optAssign ;
Rule 13    optAssign -> ASSIGN Expresion  [precedence=left, level=1]
Rule 14    optAssign -> <empty>
Rule 15    Metodo -> OBJECTID ( listaFormales ) : TYPEID { Expresion } ;
Rule 16    Metodo -> OBJECTID ( ) : TYPEID { Expresion } ;
Rule 17    listaFormales -> Formal , listaFormales
Rule 18    listaFormales -> Formal
Rule 19    Formal -> OBJECTID : TYPEID
Rule 20    Expresion -> BOOL_CONST
Rule 21    Expresion -> STR_CONST
Rule 22    Expresion -> INT_CONST
Rule 23    Expresion -> OBJECTID
Rule 24    Expresion -> { bloque }
Rule 25    Expresion -> NEW TYPEID
Rule 26    Expresion -> CASE Expresion OF plusExpresion ESAC
Rule 27    Expresion -> LET OBJECTID : TYPEID optArrow starFormal IN Expresion  [precedence=left, level=2]
Rule 28    Expresion -> WHILE Expresion LOOP Expresion POOL
Rule 29    Expresion -> IF Expresion THEN Expresion ELSE Expresion FI
Rule 30    Expresion -> optExpresion ( )
Rule 31    Expresion -> optExpresion ( listaExpresiones )
Rule 32    Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones )
Rule 33    Expresion -> Expresion @ TYPEID . OBJECTID ( )
Rule 34    Expresion -> ~ Expresion  [precedence=right, level=6]
Rule 35    Expresion -> ISVOID Expresion  [precedence=right, level=6]
Rule 36    Expresion -> NOT Expresion  [precedence=right, level=6]
Rule 37    Expresion -> ( Expresion )
Rule 38    Expresion -> Expresion = Expresion  [precedence=nonassoc, level=3]
Rule 39    Expresion -> Expresion < Expresion  [precedence=nonassoc, level=3]
Rule 40    Expresion -> Expresion LE Expresion  [precedence=nonassoc, level=3]
Rule 41    Expresion -> Expresion - Expresion  [precedence=left, level=4]
Rule 42    Expresion -> Expresion + Expresion  [precedence=left, level=4]
Rule 43    Expresion -> Expresion / Expresion  [precedence=left, level=5]
Rule 44    Expresion -> Expresion * Expresion  [precedence=left, level=5]
Rule 45    Expresion -> OBJECTID ASSIGN Expresion  [precedence=left, level=1]
Rule 46    listaExpresiones -> Expresion , listaExpresiones
Rule 47    listaExpresiones -> Expresion
Rule 48    optExpresion -> Expresion . OBJECTID
Rule 49    optExpresion -> OBJECTID
Rule 50    optArrow -> ASSIGN Expresion  [precedence=left, level=1]
Rule 51    optArrow -> <empty>
Rule 52    starFormal -> , OBJECTID : TYPEID optArrow starFormal
Rule 53    starFormal -> <empty>
Rule 54    plusExpresion -> OBJECTID : TYPEID DARROW Expresion ; plusExpresion
Rule 55    plusExpresion -> OBJECTID : TYPEID DARROW Expresion ;
Rule 56    bloque -> Expresion ; bloque
Rule 57    bloque -> error ;
Rule 58    bloque -> error ; Expresion ;
Rule 59    bloque -> Expresion ;

Terminals, with rules where they appear:

(                    : 15 16 30 31 32 33 37
)                    : 15 16 30 31 32 33 37
*                    : 44
+                    : 42
,                    : 17 46 52
-                    : 41
.                    : 32 33 48
/                    : 43
:                    : 12 15 16 19 27 52 54 55
;                    : 3 12 15 16 54 55 56 57 58 58 59
<                    : 39
=                    : 38
@                    : 32 33
ASSIGN               : 13 45 50
BOOL_CONST           : 20
CASE                 : 26
CLASS                : 3
DARROW               : 54 55
ELSE                 : 29
ESAC                 : 26
FI                   : 29
IF                   : 29
IN                   : 27
INHERITS             : 4
INT_CONST            : 22
ISVOID               : 35
LE                   : 40
LET                  : 27
LOOP                 : 28
NEW                  : 25
NOT                  : 36
OBJECTID             : 12 15 16 19 23 27 32 33 45 48 49 52 54 55
OF                   : 26
POOL                 : 28
STR_CONST            : 21
THEN                 : 29
TYPEID               : 3 4 12 15 16 19 25 27 32 33 52 54 55
WHILE                : 28
error                : 57 58
{                    : 10 11 15 16 24
}                    : 10 11 15 16 24
~                    : 34

Nonterminals, with rules where they appear:

Atributo             : 7 9
Clase                : 1 2
Expresion            : 13 15 16 26 27 28 28 29 29 29 32 33 34 35 36 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 46 47 48 50 54 55 56 58 59
Formal               : 17 18
Metodo               : 6 8
Programa             : 2 0
bloque               : 24 56
class_body           : 3
listaExpresiones     : 31 32 46
listaFormales        : 15 17
lista_atr_met        : 6 7 10
optArrow             : 27 52
optAssign            : 12
optExpresion         : 30 31
optInherit           : 3
plusExpresion        : 26 54
starFormal           : 27 52


state 0

    (0) S' -> . Programa
    (1) Programa -> . Clase
    (2) Programa -> . Programa Clase
    (3) Clase -> . CLASS TYPEID optInherit class_body ;
    CLASS           shift and go to state 3

    Programa                       shift and go to state 1
    Clase                          shift and go to state 2

state 1

    (0) S' -> Programa .
    (2) Programa -> Programa . Clase
    (3) Clase -> . CLASS TYPEID optInherit class_body ;
    CLASS           shift and go to state 3

    Clase                          shift and go to state 4

state 2

    (1) Programa -> Clase .
    CLASS           reduce using rule 1 (Programa -> Clase .)
    $end            reduce using rule 1 (Programa -> Clase .)


state 3

    (3) Clase -> CLASS . TYPEID optInherit class_body ;
    TYPEID          shift and go to state 5


state 4

    (2) Programa -> Programa Clase .
    CLASS           reduce using rule 2 (Programa -> Programa Clase .)
    $end            reduce using rule 2 (Programa -> Programa Clase .)


state 5

    (3) Clase -> CLASS TYPEID . optInherit class_body ;
    (4) optInherit -> . INHERITS TYPEID
    (5) optInherit -> .
    INHERITS        shift and go to state 7
    {               reduce using rule 5 (optInherit -> .)

    optInherit                     shift and go to state 6

state 6

    (3) Clase -> CLASS TYPEID optInherit . class_body ;
    (10) class_body -> . { lista_atr_met }
    (11) class_body -> . { }
    {               shift and go to state 9

    class_body                     shift and go to state 8

state 7

    (4) optInherit -> INHERITS . TYPEID
    TYPEID          shift and go to state 10


state 8

    (3) Clase -> CLASS TYPEID optInherit class_body . ;
    ;               shift and go to state 11


state 9

    (10) class_body -> { . lista_atr_met }
    (11) class_body -> { . }
    (6) lista_atr_met -> . Metodo lista_atr_met
    (7) lista_atr_met -> . Atributo lista_atr_met
    (8) lista_atr_met -> . Metodo
    (9) lista_atr_met -> . Atributo
    (15) Metodo -> . OBJECTID ( listaFormales ) : TYPEID { Expresion } ;
    (16) Metodo -> . OBJECTID ( ) : TYPEID { Expresion } ;
    (12) Atributo -> . OBJECTID : TYPEID optAssign ;
    }               shift and go to state 13
    OBJECTID        shift and go to state 16

    lista_atr_met                  shift and go to state 12
    Metodo                         shift and go to state 14
    Atributo                       shift and go to state 15

state 10

    (4) optInherit -> INHERITS TYPEID .
    {               reduce using rule 4 (optInherit -> INHERITS TYPEID .)


state 11

    (3) Clase -> CLASS TYPEID optInherit class_body ; .
    CLASS           reduce using rule 3 (Clase -> CLASS TYPEID optInherit class_body ; .)
    $end            reduce using rule 3 (Clase -> CLASS TYPEID optInherit class_body ; .)


state 12

    (10) class_body -> { lista_atr_met . }
    }               shift and go to state 17


state 13

    (11) class_body -> { } .
    ;               reduce using rule 11 (class_body -> { } .)


state 14

    (6) lista_atr_met -> Metodo . lista_atr_met
    (8) lista_atr_met -> Metodo .
    (6) lista_atr_met -> . Metodo lista_atr_met
    (7) lista_atr_met -> . Atributo lista_atr_met
    (8) lista_atr_met -> . Metodo
    (9) lista_atr_met -> . Atributo
    (15) Metodo -> . OBJECTID ( listaFormales ) : TYPEID { Expresion } ;
    (16) Metodo -> . OBJECTID ( ) : TYPEID { Expresion } ;
    (12) Atributo -> . OBJECTID : TYPEID optAssign ;
    }               reduce using rule 8 (lista_atr_met -> Metodo .)
    OBJECTID        shift and go to state 16

    Metodo                         shift and go to state 14
    lista_atr_met                  shift and go to state 18
    Atributo                       shift and go to state 15

state 15

    (7) lista_atr_met -> Atributo . lista_atr_met
    (9) lista_atr_met -> Atributo .
    (6) lista_atr_met -> . Metodo lista_atr_met
    (7) lista_atr_met -> . Atributo lista_atr_met
    (8) lista_atr_met -> . Metodo
    (9) lista_atr_met -> . Atributo
    (15) Metodo -> . OBJECTID ( listaFormales ) : TYPEID { Expresion } ;
    (16) Metodo -> . OBJECTID ( ) : TYPEID { Expresion } ;
    (12) Atributo -> . OBJECTID : TYPEID optAssign ;
    }               reduce using rule 9 (lista_atr_met -> Atributo .)
    OBJECTID        shift and go to state 16

    Atributo                       shift and go to state 15
    lista_atr_met                  shift and go to state 19
    Metodo                         shift and go to state 14

state 16

    (15) Metodo -> OBJECTID . ( listaFormales ) : TYPEID { Expresion } ;
    (16) Metodo -> OBJECTID . ( ) : TYPEID { Expresion } ;
    (12) Atributo -> OBJECTID . : TYPEID optAssign ;
    (               shift and go to state 20
    :               shift and go to state 21


state 17

    (10) class_body -> { lista_atr_met } .
    ;               reduce using rule 10 (class_body -> { lista_atr_met } .)


state 18

    (6) lista_atr_met -> Metodo lista_atr_met .
    }               reduce using rule 6 (lista_atr_met -> Metodo lista_atr_met .)


state 19

    (7) lista_atr_met -> Atributo lista_atr_met .
    }               reduce using rule 7 (lista_atr_met -> Atributo lista_atr_met .)


state 20

    (15) Metodo -> OBJECTID ( . listaFormales ) : TYPEID { Expresion } ;
    (16) Metodo -> OBJECTID ( . ) : TYPEID { Expresion } ;
    (17) listaFormales -> . Formal , listaFormales
    (18) listaFormales -> . Formal
    (19) Formal -> . OBJECTID : TYPEID
    )               shift and go to state 24
    OBJECTID        shift and go to state 22

    listaFormales                  shift and go to state 23
    Formal                         shift and go to state 25

state 21

    (12) Atributo -> OBJECTID : . TYPEID optAssign ;
    TYPEID          shift and go to state 26


state 22

    (19) Formal -> OBJECTID . : TYPEID
    :               shift and go to state 27


state 23

    (15) Metodo -> OBJECTID ( listaFormales . ) : TYPEID { Expresion } ;
    )               shift and go to state 28


state 24

    (16) Metodo -> OBJECTID ( ) . : TYPEID { Expresion } ;
    :               shift and go to state 29


state 25

    (17) listaFormales -> Formal . , listaFormales
    (18) listaFormales -> Formal .
    ,               shift and go to state 30
    )               reduce using rule 18 (listaFormales -> Formal .)


state 26

    (12) Atributo -> OBJECTID : TYPEID . optAssign ;
    (13) optAssign -> . ASSIGN Expresion
    (14) optAssign -> .
    ASSIGN          shift and go to state 32
    ;               reduce using rule 14 (optAssign -> .)

    optAssign                      shift and go to state 31

state 27

    (19) Formal -> OBJECTID : . TYPEID
    TYPEID          shift and go to state 33


state 28

    (15) Metodo -> OBJECTID ( listaFormales ) . : TYPEID { Expresion } ;
    :               shift and go to state 34


state 29

    (16) Metodo -> OBJECTID ( ) : . TYPEID { Expresion } ;
    TYPEID          shift and go to state 35


state 30

    (17) listaFormales -> Formal , . listaFormales
    (17) listaFormales -> . Formal , listaFormales
    (18) listaFormales -> . Formal
    (19) Formal -> . OBJECTID : TYPEID
    OBJECTID        shift and go to state 22

    Formal                         shift and go to state 25
    listaFormales                  shift and go to state 36

state 31

    (12) Atributo -> OBJECTID : TYPEID optAssign . ;
    ;               shift and go to state 37


state 32

    (13) optAssign -> ASSIGN . Expresion
    (20) Expresion -> . BOOL_CONST
    (21) Expresion -> . STR_CONST
    (22) Expresion -> . INT_CONST
    (23) Expresion -> . OBJECTID
    (24) Expresion -> . { bloque }
    (25) Expresion -> . NEW TYPEID
    (26) Expresion -> . CASE Expresion OF plusExpresion ESAC
    (27) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (28) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (29) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (30) Expresion -> . optExpresion ( )
    (31) Expresion -> . optExpresion ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (34) Expresion -> . ~ Expresion
    (35) Expresion -> . ISVOID Expresion
    (36) Expresion -> . NOT Expresion
    (37) Expresion -> . ( Expresion )
    (38) Expresion -> . Expresion = Expresion
    (39) Expresion -> . Expresion < Expresion
    (40) Expresion -> . Expresion LE Expresion
    (41) Expresion -> . Expresion - Expresion
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . Expresion / Expresion
    (44) Expresion -> . Expresion * Expresion
    (45) Expresion -> . OBJECTID ASSIGN Expresion
    (48) optExpresion -> . Expresion . OBJECTID
    (49) optExpresion -> . OBJECTID
    BOOL_CONST      shift and go to state 39
    STR_CONST       shift and go to state 40
    INT_CONST       shift and go to state 41
    OBJECTID        shift and go to state 42
    {               shift and go to state 43
    NEW             shift and go to state 44
    CASE            shift and go to state 45
    LET             shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    Expresion                      shift and go to state 38
    optExpresion                   shift and go to state 49

state 33

    (19) Formal -> OBJECTID : TYPEID .
    ,               reduce using rule 19 (Formal -> OBJECTID : TYPEID .)
    )               reduce using rule 19 (Formal -> OBJECTID : TYPEID .)


state 34

    (15) Metodo -> OBJECTID ( listaFormales ) : . TYPEID { Expresion } ;
    TYPEID          shift and go to state 54


state 35

    (16) Metodo -> OBJECTID ( ) : TYPEID . { Expresion } ;
    {               shift and go to state 55


state 36

    (17) listaFormales -> Formal , listaFormales .
    )               reduce using rule 17 (listaFormales -> Formal , listaFormales .)


state 37

    (12) Atributo -> OBJECTID : TYPEID optAssign ; .
    OBJECTID        reduce using rule 12 (Atributo -> OBJECTID : TYPEID optAssign ; .)
    }               reduce using rule 12 (Atributo -> OBJECTID : TYPEID optAssign ; .)


state 38

    (13) optAssign -> ASSIGN Expresion .
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (38) Expresion -> Expresion . = Expresion
    (39) Expresion -> Expresion . < Expresion
    (40) Expresion -> Expresion . LE Expresion
    (41) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    (43) Expresion -> Expresion . / Expresion
    (44) Expresion -> Expresion . * Expresion
    (48) optExpresion -> Expresion . . OBJECTID
    ;               reduce using rule 13 (optAssign -> ASSIGN Expresion .)
    @               shift and go to state 56
    =               shift and go to state 58
    <               shift and go to state 59
    LE              shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    .               shift and go to state 57


state 39

    (20) Expresion -> BOOL_CONST .
    @               reduce using rule 20 (Expresion -> BOOL_CONST .)
    =               reduce using rule 20 (Expresion -> BOOL_CONST .)
    <               reduce using rule 20 (Expresion -> BOOL_CONST .)
    LE              reduce using rule 20 (Expresion -> BOOL_CONST .)
    -               reduce using rule 20 (Expresion -> BOOL_CONST .)
    +               reduce using rule 20 (Expresion -> BOOL_CONST .)
    /               reduce using rule 20 (Expresion -> BOOL_CONST .)
    *               reduce using rule 20 (Expresion -> BOOL_CONST .)
    .               reduce using rule 20 (Expresion -> BOOL_CONST .)
    ;               reduce using rule 20 (Expresion -> BOOL_CONST .)
    OF              reduce using rule 20 (Expresion -> BOOL_CONST .)
    LOOP            reduce using rule 20 (Expresion -> BOOL_CONST .)
    THEN            reduce using rule 20 (Expresion -> BOOL_CONST .)
    )               reduce using rule 20 (Expresion -> BOOL_CONST .)
    }               reduce using rule 20 (Expresion -> BOOL_CONST .)
    ,               reduce using rule 20 (Expresion -> BOOL_CONST .)
    POOL            reduce using rule 20 (Expresion -> BOOL_CONST .)
    ELSE            reduce using rule 20 (Expresion -> BOOL_CONST .)
    IN              reduce using rule 20 (Expresion -> BOOL_CONST .)
    FI              reduce using rule 20 (Expresion -> BOOL_CONST .)


state 40

    (21) Expresion -> STR_CONST .
    @               reduce using rule 21 (Expresion -> STR_CONST .)
    =               reduce using rule 21 (Expresion -> STR_CONST .)
    <               reduce using rule 21 (Expresion -> STR_CONST .)
    LE              reduce using rule 21 (Expresion -> STR_CONST .)
    -               reduce using rule 21 (Expresion -> STR_CONST .)
    +               reduce using rule 21 (Expresion -> STR_CONST .)
    /               reduce using rule 21 (Expresion -> STR_CONST .)
    *               reduce using rule 21 (Expresion -> STR_CONST .)
    .               reduce using rule 21 (Expresion -> STR_CONST .)
    ;               reduce using rule 21 (Expresion -> STR_CONST .)
    OF              reduce using rule 21 (Expresion -> STR_CONST .)
    LOOP            reduce using rule 21 (Expresion -> STR_CONST .)
    THEN            reduce using rule 21 (Expresion -> STR_CONST .)
    )               reduce using rule 21 (Expresion -> STR_CONST .)
    }               reduce using rule 21 (Expresion -> STR_CONST .)
    ,               reduce using rule 21 (Expresion -> STR_CONST .)
    POOL            reduce using rule 21 (Expresion -> STR_CONST .)
    ELSE            reduce using rule 21 (Expresion -> STR_CONST .)
    IN              reduce using rule 21 (Expresion -> STR_CONST .)
    FI              reduce using rule 21 (Expresion -> STR_CONST .)


state 41

    (22) Expresion -> INT_CONST .
    @               reduce using rule 22 (Expresion -> INT_CONST .)
    =               reduce using rule 22 (Expresion -> INT_CONST .)
    <               reduce using rule 22 (Expresion -> INT_CONST .)
    LE              reduce using rule 22 (Expresion -> INT_CONST .)
    -               reduce using rule 22 (Expresion -> INT_CONST .)
    +               reduce using rule 22 (Expresion -> INT_CONST .)
    /               reduce using rule 22 (Expresion -> INT_CONST .)
    *               reduce using rule 22 (Expresion -> INT_CONST .)
    .               reduce using rule 22 (Expresion -> INT_CONST .)
    ;               reduce using rule 22 (Expresion -> INT_CONST .)
    OF              reduce using rule 22 (Expresion -> INT_CONST .)
    LOOP            reduce using rule 22 (Expresion -> INT_CONST .)
    THEN            reduce using rule 22 (Expresion -> INT_CONST .)
    )               reduce using rule 22 (Expresion -> INT_CONST .)
    }               reduce using rule 22 (Expresion -> INT_CONST .)
    ,               reduce using rule 22 (Expresion -> INT_CONST .)
    POOL            reduce using rule 22 (Expresion -> INT_CONST .)
    ELSE            reduce using rule 22 (Expresion -> INT_CONST .)
    IN              reduce using rule 22 (Expresion -> INT_CONST .)
    FI              reduce using rule 22 (Expresion -> INT_CONST .)


state 42

    (23) Expresion -> OBJECTID .
    (45) Expresion -> OBJECTID . ASSIGN Expresion
    (49) optExpresion -> OBJECTID .
    @               reduce using rule 23 (Expresion -> OBJECTID .)
    =               reduce using rule 23 (Expresion -> OBJECTID .)
    <               reduce using rule 23 (Expresion -> OBJECTID .)
    LE              reduce using rule 23 (Expresion -> OBJECTID .)
    -               reduce using rule 23 (Expresion -> OBJECTID .)
    +               reduce using rule 23 (Expresion -> OBJECTID .)
    /               reduce using rule 23 (Expresion -> OBJECTID .)
    *               reduce using rule 23 (Expresion -> OBJECTID .)
    .               reduce using rule 23 (Expresion -> OBJECTID .)
    ;               reduce using rule 23 (Expresion -> OBJECTID .)
    OF              reduce using rule 23 (Expresion -> OBJECTID .)
    LOOP            reduce using rule 23 (Expresion -> OBJECTID .)
    THEN            reduce using rule 23 (Expresion -> OBJECTID .)
    )               reduce using rule 23 (Expresion -> OBJECTID .)
    }               reduce using rule 23 (Expresion -> OBJECTID .)
    ,               reduce using rule 23 (Expresion -> OBJECTID .)
    POOL            reduce using rule 23 (Expresion -> OBJECTID .)
    ELSE            reduce using rule 23 (Expresion -> OBJECTID .)
    IN              reduce using rule 23 (Expresion -> OBJECTID .)
    FI              reduce using rule 23 (Expresion -> OBJECTID .)
    ASSIGN          shift and go to state 65
    (               reduce using rule 49 (optExpresion -> OBJECTID .)


state 43

    (24) Expresion -> { . bloque }
    (56) bloque -> . Expresion ; bloque
    (57) bloque -> . error ;
    (58) bloque -> . error ; Expresion ;
    (59) bloque -> . Expresion ;
    (20) Expresion -> . BOOL_CONST
    (21) Expresion -> . STR_CONST
    (22) Expresion -> . INT_CONST
    (23) Expresion -> . OBJECTID
    (24) Expresion -> . { bloque }
    (25) Expresion -> . NEW TYPEID
    (26) Expresion -> . CASE Expresion OF plusExpresion ESAC
    (27) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (28) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (29) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (30) Expresion -> . optExpresion ( )
    (31) Expresion -> . optExpresion ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (34) Expresion -> . ~ Expresion
    (35) Expresion -> . ISVOID Expresion
    (36) Expresion -> . NOT Expresion
    (37) Expresion -> . ( Expresion )
    (38) Expresion -> . Expresion = Expresion
    (39) Expresion -> . Expresion < Expresion
    (40) Expresion -> . Expresion LE Expresion
    (41) Expresion -> . Expresion - Expresion
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . Expresion / Expresion
    (44) Expresion -> . Expresion * Expresion
    (45) Expresion -> . OBJECTID ASSIGN Expresion
    (48) optExpresion -> . Expresion . OBJECTID
    (49) optExpresion -> . OBJECTID
    error           shift and go to state 68
    BOOL_CONST      shift and go to state 39
    STR_CONST       shift and go to state 40
    INT_CONST       shift and go to state 41
    OBJECTID        shift and go to state 42
    {               shift and go to state 43
    NEW             shift and go to state 44
    CASE            shift and go to state 45
    LET             shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    bloque                         shift and go to state 66
    Expresion                      shift and go to state 67
    optExpresion                   shift and go to state 49

state 44

    (25) Expresion -> NEW . TYPEID
    TYPEID          shift and go to state 69


state 45

    (26) Expresion -> CASE . Expresion OF plusExpresion ESAC
    (20) Expresion -> . BOOL_CONST
    (21) Expresion -> . STR_CONST
    (22) Expresion -> . INT_CONST
    (23) Expresion -> . OBJECTID
    (24) Expresion -> . { bloque }
    (25) Expresion -> . NEW TYPEID
    (26) Expresion -> . CASE Expresion OF plusExpresion ESAC
    (27) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (28) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (29) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (30) Expresion -> . optExpresion ( )
    (31) Expresion -> . optExpresion ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (34) Expresion -> . ~ Expresion
    (35) Expresion -> . ISVOID Expresion
    (36) Expresion -> . NOT Expresion
    (37) Expresion -> . ( Expresion )
    (38) Expresion -> . Expresion = Expresion
    (39) Expresion -> . Expresion < Expresion
    (40) Expresion -> . Expresion LE Expresion
    (41) Expresion -> . Expresion - Expresion
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . Expresion / Expresion
    (44) Expresion -> . Expresion * Expresion
    (45) Expresion -> . OBJECTID ASSIGN Expresion
    (48) optExpresion -> . Expresion . OBJECTID
    (49) optExpresion -> . OBJECTID
    BOOL_CONST      shift and go to state 39
    STR_CONST       shift and go to state 40
    INT_CONST       shift and go to state 41
    OBJECTID        shift and go to state 42
    {               shift and go to state 43
    NEW             shift and go to state 44
    CASE            shift and go to state 45
    LET             shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    Expresion                      shift and go to state 70
    optExpresion                   shift and go to state 49

state 46

    (27) Expresion -> LET . OBJECTID : TYPEID optArrow starFormal IN Expresion
    OBJECTID        shift and go to state 71


state 47

    (28) Expresion -> WHILE . Expresion LOOP Expresion POOL
    (20) Expresion -> . BOOL_CONST
    (21) Expresion -> . STR_CONST
    (22) Expresion -> . INT_CONST
    (23) Expresion -> . OBJECTID
    (24) Expresion -> . { bloque }
    (25) Expresion -> . NEW TYPEID
    (26) Expresion -> . CASE Expresion OF plusExpresion ESAC
    (27) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (28) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (29) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (30) Expresion -> . optExpresion ( )
    (31) Expresion -> . optExpresion ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (34) Expresion -> . ~ Expresion
    (35) Expresion -> . ISVOID Expresion
    (36) Expresion -> . NOT Expresion
    (37) Expresion -> . ( Expresion )
    (38) Expresion -> . Expresion = Expresion
    (39) Expresion -> . Expresion < Expresion
    (40) Expresion -> . Expresion LE Expresion
    (41) Expresion -> . Expresion - Expresion
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . Expresion / Expresion
    (44) Expresion -> . Expresion * Expresion
    (45) Expresion -> . OBJECTID ASSIGN Expresion
    (48) optExpresion -> . Expresion . OBJECTID
    (49) optExpresion -> . OBJECTID
    BOOL_CONST      shift and go to state 39
    STR_CONST       shift and go to state 40
    INT_CONST       shift and go to state 41
    OBJECTID        shift and go to state 42
    {               shift and go to state 43
    NEW             shift and go to state 44
    CASE            shift and go to state 45
    LET             shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    Expresion                      shift and go to state 72
    optExpresion                   shift and go to state 49

state 48

    (29) Expresion -> IF . Expresion THEN Expresion ELSE Expresion FI
    (20) Expresion -> . BOOL_CONST
    (21) Expresion -> . STR_CONST
    (22) Expresion -> . INT_CONST
    (23) Expresion -> . OBJECTID
    (24) Expresion -> . { bloque }
    (25) Expresion -> . NEW TYPEID
    (26) Expresion -> . CASE Expresion OF plusExpresion ESAC
    (27) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (28) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (29) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (30) Expresion -> . optExpresion ( )
    (31) Expresion -> . optExpresion ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (34) Expresion -> . ~ Expresion
    (35) Expresion -> . ISVOID Expresion
    (36) Expresion -> . NOT Expresion
    (37) Expresion -> . ( Expresion )
    (38) Expresion -> . Expresion = Expresion
    (39) Expresion -> . Expresion < Expresion
    (40) Expresion -> . Expresion LE Expresion
    (41) Expresion -> . Expresion - Expresion
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . Expresion / Expresion
    (44) Expresion -> . Expresion * Expresion
    (45) Expresion -> . OBJECTID ASSIGN Expresion
    (48) optExpresion -> . Expresion . OBJECTID
    (49) optExpresion -> . OBJECTID
    BOOL_CONST      shift and go to state 39
    STR_CONST       shift and go to state 40
    INT_CONST       shift and go to state 41
    OBJECTID        shift and go to state 42
    {               shift and go to state 43
    NEW             shift and go to state 44
    CASE            shift and go to state 45
    LET             shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    Expresion                      shift and go to state 73
    optExpresion                   shift and go to state 49

state 49

    (30) Expresion -> optExpresion . ( )
    (31) Expresion -> optExpresion . ( listaExpresiones )
    (               shift and go to state 74


state 50

    (37) Expresion -> ( . Expresion )
    (20) Expresion -> . BOOL_CONST
    (21) Expresion -> . STR_CONST
    (22) Expresion -> . INT_CONST
    (23) Expresion -> . OBJECTID
    (24) Expresion -> . { bloque }
    (25) Expresion -> . NEW TYPEID
    (26) Expresion -> . CASE Expresion OF plusExpresion ESAC
    (27) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (28) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (29) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (30) Expresion -> . optExpresion ( )
    (31) Expresion -> . optExpresion ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (34) Expresion -> . ~ Expresion
    (35) Expresion -> . ISVOID Expresion
    (36) Expresion -> . NOT Expresion
    (37) Expresion -> . ( Expresion )
    (38) Expresion -> . Expresion = Expresion
    (39) Expresion -> . Expresion < Expresion
    (40) Expresion -> . Expresion LE Expresion
    (41) Expresion -> . Expresion - Expresion
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . Expresion / Expresion
    (44) Expresion -> . Expresion * Expresion
    (45) Expresion -> . OBJECTID ASSIGN Expresion
    (48) optExpresion -> . Expresion . OBJECTID
    (49) optExpresion -> . OBJECTID
    BOOL_CONST      shift and go to state 39
    STR_CONST       shift and go to state 40
    INT_CONST       shift and go to state 41
    OBJECTID        shift and go to state 42
    {               shift and go to state 43
    NEW             shift and go to state 44
    CASE            shift and go to state 45
    LET             shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    Expresion                      shift and go to state 75
    optExpresion                   shift and go to state 49

state 51

    (34) Expresion -> ~ . Expresion
    (20) Expresion -> . BOOL_CONST
    (21) Expresion -> . STR_CONST
    (22) Expresion -> . INT_CONST
    (23) Expresion -> . OBJECTID
    (24) Expresion -> . { bloque }
    (25) Expresion -> . NEW TYPEID
    (26) Expresion -> . CASE Expresion OF plusExpresion ESAC
    (27) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (28) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (29) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (30) Expresion -> . optExpresion ( )
    (31) Expresion -> . optExpresion ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (34) Expresion -> . ~ Expresion
    (35) Expresion -> . ISVOID Expresion
    (36) Expresion -> . NOT Expresion
    (37) Expresion -> . ( Expresion )
    (38) Expresion -> . Expresion = Expresion
    (39) Expresion -> . Expresion < Expresion
    (40) Expresion -> . Expresion LE Expresion
    (41) Expresion -> . Expresion - Expresion
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . Expresion / Expresion
    (44) Expresion -> . Expresion * Expresion
    (45) Expresion -> . OBJECTID ASSIGN Expresion
    (48) optExpresion -> . Expresion . OBJECTID
    (49) optExpresion -> . OBJECTID
    BOOL_CONST      shift and go to state 39
    STR_CONST       shift and go to state 40
    INT_CONST       shift and go to state 41
    OBJECTID        shift and go to state 42
    {               shift and go to state 43
    NEW             shift and go to state 44
    CASE            shift and go to state 45
    LET             shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    Expresion                      shift and go to state 76
    optExpresion                   shift and go to state 49

state 52

    (35) Expresion -> ISVOID . Expresion
    (20) Expresion -> . BOOL_CONST
    (21) Expresion -> . STR_CONST
    (22) Expresion -> . INT_CONST
    (23) Expresion -> . OBJECTID
    (24) Expresion -> . { bloque }
    (25) Expresion -> . NEW TYPEID
    (26) Expresion -> . CASE Expresion OF plusExpresion ESAC
    (27) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (28) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (29) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (30) Expresion -> . optExpresion ( )
    (31) Expresion -> . optExpresion ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (34) Expresion -> . ~ Expresion
    (35) Expresion -> . ISVOID Expresion
    (36) Expresion -> . NOT Expresion
    (37) Expresion -> . ( Expresion )
    (38) Expresion -> . Expresion = Expresion
    (39) Expresion -> . Expresion < Expresion
    (40) Expresion -> . Expresion LE Expresion
    (41) Expresion -> . Expresion - Expresion
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . Expresion / Expresion
    (44) Expresion -> . Expresion * Expresion
    (45) Expresion -> . OBJECTID ASSIGN Expresion
    (48) optExpresion -> . Expresion . OBJECTID
    (49) optExpresion -> . OBJECTID
    BOOL_CONST      shift and go to state 39
    STR_CONST       shift and go to state 40
    INT_CONST       shift and go to state 41
    OBJECTID        shift and go to state 42
    {               shift and go to state 43
    NEW             shift and go to state 44
    CASE            shift and go to state 45
    LET             shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    Expresion                      shift and go to state 77
    optExpresion                   shift and go to state 49

state 53

    (36) Expresion -> NOT . Expresion
    (20) Expresion -> . BOOL_CONST
    (21) Expresion -> . STR_CONST
    (22) Expresion -> . INT_CONST
    (23) Expresion -> . OBJECTID
    (24) Expresion -> . { bloque }
    (25) Expresion -> . NEW TYPEID
    (26) Expresion -> . CASE Expresion OF plusExpresion ESAC
    (27) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (28) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (29) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (30) Expresion -> . optExpresion ( )
    (31) Expresion -> . optExpresion ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (34) Expresion -> . ~ Expresion
    (35) Expresion -> . ISVOID Expresion
    (36) Expresion -> . NOT Expresion
    (37) Expresion -> . ( Expresion )
    (38) Expresion -> . Expresion = Expresion
    (39) Expresion -> . Expresion < Expresion
    (40) Expresion -> . Expresion LE Expresion
    (41) Expresion -> . Expresion - Expresion
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . Expresion / Expresion
    (44) Expresion -> . Expresion * Expresion
    (45) Expresion -> . OBJECTID ASSIGN Expresion
    (48) optExpresion -> . Expresion . OBJECTID
    (49) optExpresion -> . OBJECTID
    BOOL_CONST      shift and go to state 39
    STR_CONST       shift and go to state 40
    INT_CONST       shift and go to state 41
    OBJECTID        shift and go to state 42
    {               shift and go to state 43
    NEW             shift and go to state 44
    CASE            shift and go to state 45
    LET             shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    Expresion                      shift and go to state 78
    optExpresion                   shift and go to state 49

state 54

    (15) Metodo -> OBJECTID ( listaFormales ) : TYPEID . { Expresion } ;
    {               shift and go to state 79


state 55

    (16) Metodo -> OBJECTID ( ) : TYPEID { . Expresion } ;
    (20) Expresion -> . BOOL_CONST
    (21) Expresion -> . STR_CONST
    (22) Expresion -> . INT_CONST
    (23) Expresion -> . OBJECTID
    (24) Expresion -> . { bloque }
    (25) Expresion -> . NEW TYPEID
    (26) Expresion -> . CASE Expresion OF plusExpresion ESAC
    (27) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (28) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (29) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (30) Expresion -> . optExpresion ( )
    (31) Expresion -> . optExpresion ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (34) Expresion -> . ~ Expresion
    (35) Expresion -> . ISVOID Expresion
    (36) Expresion -> . NOT Expresion
    (37) Expresion -> . ( Expresion )
    (38) Expresion -> . Expresion = Expresion
    (39) Expresion -> . Expresion < Expresion
    (40) Expresion -> . Expresion LE Expresion
    (41) Expresion -> . Expresion - Expresion
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . Expresion / Expresion
    (44) Expresion -> . Expresion * Expresion
    (45) Expresion -> . OBJECTID ASSIGN Expresion
    (48) optExpresion -> . Expresion . OBJECTID
    (49) optExpresion -> . OBJECTID
    BOOL_CONST      shift and go to state 39
    STR_CONST       shift and go to state 40
    INT_CONST       shift and go to state 41
    OBJECTID        shift and go to state 42
    {               shift and go to state 43
    NEW             shift and go to state 44
    CASE            shift and go to state 45
    LET             shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    Expresion                      shift and go to state 80
    optExpresion                   shift and go to state 49

state 56

    (32) Expresion -> Expresion @ . TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> Expresion @ . TYPEID . OBJECTID ( )
    TYPEID          shift and go to state 81


state 57

    (48) optExpresion -> Expresion . . OBJECTID
    OBJECTID        shift and go to state 82


state 58

    (38) Expresion -> Expresion = . Expresion
    (20) Expresion -> . BOOL_CONST
    (21) Expresion -> . STR_CONST
    (22) Expresion -> . INT_CONST
    (23) Expresion -> . OBJECTID
    (24) Expresion -> . { bloque }
    (25) Expresion -> . NEW TYPEID
    (26) Expresion -> . CASE Expresion OF plusExpresion ESAC
    (27) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (28) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (29) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (30) Expresion -> . optExpresion ( )
    (31) Expresion -> . optExpresion ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (34) Expresion -> . ~ Expresion
    (35) Expresion -> . ISVOID Expresion
    (36) Expresion -> . NOT Expresion
    (37) Expresion -> . ( Expresion )
    (38) Expresion -> . Expresion = Expresion
    (39) Expresion -> . Expresion < Expresion
    (40) Expresion -> . Expresion LE Expresion
    (41) Expresion -> . Expresion - Expresion
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . Expresion / Expresion
    (44) Expresion -> . Expresion * Expresion
    (45) Expresion -> . OBJECTID ASSIGN Expresion
    (48) optExpresion -> . Expresion . OBJECTID
    (49) optExpresion -> . OBJECTID
    BOOL_CONST      shift and go to state 39
    STR_CONST       shift and go to state 40
    INT_CONST       shift and go to state 41
    OBJECTID        shift and go to state 42
    {               shift and go to state 43
    NEW             shift and go to state 44
    CASE            shift and go to state 45
    LET             shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    Expresion                      shift and go to state 83
    optExpresion                   shift and go to state 49

state 59

    (39) Expresion -> Expresion < . Expresion
    (20) Expresion -> . BOOL_CONST
    (21) Expresion -> . STR_CONST
    (22) Expresion -> . INT_CONST
    (23) Expresion -> . OBJECTID
    (24) Expresion -> . { bloque }
    (25) Expresion -> . NEW TYPEID
    (26) Expresion -> . CASE Expresion OF plusExpresion ESAC
    (27) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (28) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (29) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (30) Expresion -> . optExpresion ( )
    (31) Expresion -> . optExpresion ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (34) Expresion -> . ~ Expresion
    (35) Expresion -> . ISVOID Expresion
    (36) Expresion -> . NOT Expresion
    (37) Expresion -> . ( Expresion )
    (38) Expresion -> . Expresion = Expresion
    (39) Expresion -> . Expresion < Expresion
    (40) Expresion -> . Expresion LE Expresion
    (41) Expresion -> . Expresion - Expresion
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . Expresion / Expresion
    (44) Expresion -> . Expresion * Expresion
    (45) Expresion -> . OBJECTID ASSIGN Expresion
    (48) optExpresion -> . Expresion . OBJECTID
    (49) optExpresion -> . OBJECTID
    BOOL_CONST      shift and go to state 39
    STR_CONST       shift and go to state 40
    INT_CONST       shift and go to state 41
    OBJECTID        shift and go to state 42
    {               shift and go to state 43
    NEW             shift and go to state 44
    CASE            shift and go to state 45
    LET             shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    Expresion                      shift and go to state 84
    optExpresion                   shift and go to state 49

state 60

    (40) Expresion -> Expresion LE . Expresion
    (20) Expresion -> . BOOL_CONST
    (21) Expresion -> . STR_CONST
    (22) Expresion -> . INT_CONST
    (23) Expresion -> . OBJECTID
    (24) Expresion -> . { bloque }
    (25) Expresion -> . NEW TYPEID
    (26) Expresion -> . CASE Expresion OF plusExpresion ESAC
    (27) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (28) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (29) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (30) Expresion -> . optExpresion ( )
    (31) Expresion -> . optExpresion ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (34) Expresion -> . ~ Expresion
    (35) Expresion -> . ISVOID Expresion
    (36) Expresion -> . NOT Expresion
    (37) Expresion -> . ( Expresion )
    (38) Expresion -> . Expresion = Expresion
    (39) Expresion -> . Expresion < Expresion
    (40) Expresion -> . Expresion LE Expresion
    (41) Expresion -> . Expresion - Expresion
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . Expresion / Expresion
    (44) Expresion -> . Expresion * Expresion
    (45) Expresion -> . OBJECTID ASSIGN Expresion
    (48) optExpresion -> . Expresion . OBJECTID
    (49) optExpresion -> . OBJECTID
    BOOL_CONST      shift and go to state 39
    STR_CONST       shift and go to state 40
    INT_CONST       shift and go to state 41
    OBJECTID        shift and go to state 42
    {               shift and go to state 43
    NEW             shift and go to state 44
    CASE            shift and go to state 45
    LET             shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    Expresion                      shift and go to state 85
    optExpresion                   shift and go to state 49

state 61

    (41) Expresion -> Expresion - . Expresion
    (20) Expresion -> . BOOL_CONST
    (21) Expresion -> . STR_CONST
    (22) Expresion -> . INT_CONST
    (23) Expresion -> . OBJECTID
    (24) Expresion -> . { bloque }
    (25) Expresion -> . NEW TYPEID
    (26) Expresion -> . CASE Expresion OF plusExpresion ESAC
    (27) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (28) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (29) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (30) Expresion -> . optExpresion ( )
    (31) Expresion -> . optExpresion ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (34) Expresion -> . ~ Expresion
    (35) Expresion -> . ISVOID Expresion
    (36) Expresion -> . NOT Expresion
    (37) Expresion -> . ( Expresion )
    (38) Expresion -> . Expresion = Expresion
    (39) Expresion -> . Expresion < Expresion
    (40) Expresion -> . Expresion LE Expresion
    (41) Expresion -> . Expresion - Expresion
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . Expresion / Expresion
    (44) Expresion -> . Expresion * Expresion
    (45) Expresion -> . OBJECTID ASSIGN Expresion
    (48) optExpresion -> . Expresion . OBJECTID
    (49) optExpresion -> . OBJECTID
    BOOL_CONST      shift and go to state 39
    STR_CONST       shift and go to state 40
    INT_CONST       shift and go to state 41
    OBJECTID        shift and go to state 42
    {               shift and go to state 43
    NEW             shift and go to state 44
    CASE            shift and go to state 45
    LET             shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    Expresion                      shift and go to state 86
    optExpresion                   shift and go to state 49

state 62

    (42) Expresion -> Expresion + . Expresion
    (20) Expresion -> . BOOL_CONST
    (21) Expresion -> . STR_CONST
    (22) Expresion -> . INT_CONST
    (23) Expresion -> . OBJECTID
    (24) Expresion -> . { bloque }
    (25) Expresion -> . NEW TYPEID
    (26) Expresion -> . CASE Expresion OF plusExpresion ESAC
    (27) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (28) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (29) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (30) Expresion -> . optExpresion ( )
    (31) Expresion -> . optExpresion ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (34) Expresion -> . ~ Expresion
    (35) Expresion -> . ISVOID Expresion
    (36) Expresion -> . NOT Expresion
    (37) Expresion -> . ( Expresion )
    (38) Expresion -> . Expresion = Expresion
    (39) Expresion -> . Expresion < Expresion
    (40) Expresion -> . Expresion LE Expresion
    (41) Expresion -> . Expresion - Expresion
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . Expresion / Expresion
    (44) Expresion -> . Expresion * Expresion
    (45) Expresion -> . OBJECTID ASSIGN Expresion
    (48) optExpresion -> . Expresion . OBJECTID
    (49) optExpresion -> . OBJECTID
    BOOL_CONST      shift and go to state 39
    STR_CONST       shift and go to state 40
    INT_CONST       shift and go to state 41
    OBJECTID        shift and go to state 42
    {               shift and go to state 43
    NEW             shift and go to state 44
    CASE            shift and go to state 45
    LET             shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    Expresion                      shift and go to state 87
    optExpresion                   shift and go to state 49

state 63

    (43) Expresion -> Expresion / . Expresion
    (20) Expresion -> . BOOL_CONST
    (21) Expresion -> . STR_CONST
    (22) Expresion -> . INT_CONST
    (23) Expresion -> . OBJECTID
    (24) Expresion -> . { bloque }
    (25) Expresion -> . NEW TYPEID
    (26) Expresion -> . CASE Expresion OF plusExpresion ESAC
    (27) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (28) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (29) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (30) Expresion -> . optExpresion ( )
    (31) Expresion -> . optExpresion ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (34) Expresion -> . ~ Expresion
    (35) Expresion -> . ISVOID Expresion
    (36) Expresion -> . NOT Expresion
    (37) Expresion -> . ( Expresion )
    (38) Expresion -> . Expresion = Expresion
    (39) Expresion -> . Expresion < Expresion
    (40) Expresion -> . Expresion LE Expresion
    (41) Expresion -> . Expresion - Expresion
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . Expresion / Expresion
    (44) Expresion -> . Expresion * Expresion
    (45) Expresion -> . OBJECTID ASSIGN Expresion
    (48) optExpresion -> . Expresion . OBJECTID
    (49) optExpresion -> . OBJECTID
    BOOL_CONST      shift and go to state 39
    STR_CONST       shift and go to state 40
    INT_CONST       shift and go to state 41
    OBJECTID        shift and go to state 42
    {               shift and go to state 43
    NEW             shift and go to state 44
    CASE            shift and go to state 45
    LET             shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    Expresion                      shift and go to state 88
    optExpresion                   shift and go to state 49

state 64

    (44) Expresion -> Expresion * . Expresion
    (20) Expresion -> . BOOL_CONST
    (21) Expresion -> . STR_CONST
    (22) Expresion -> . INT_CONST
    (23) Expresion -> . OBJECTID
    (24) Expresion -> . { bloque }
    (25) Expresion -> . NEW TYPEID
    (26) Expresion -> . CASE Expresion OF plusExpresion ESAC
    (27) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (28) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (29) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (30) Expresion -> . optExpresion ( )
    (31) Expresion -> . optExpresion ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (34) Expresion -> . ~ Expresion
    (35) Expresion -> . ISVOID Expresion
    (36) Expresion -> . NOT Expresion
    (37) Expresion -> . ( Expresion )
    (38) Expresion -> . Expresion = Expresion
    (39) Expresion -> . Expresion < Expresion
    (40) Expresion -> . Expresion LE Expresion
    (41) Expresion -> . Expresion - Expresion
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . Expresion / Expresion
    (44) Expresion -> . Expresion * Expresion
    (45) Expresion -> . OBJECTID ASSIGN Expresion
    (48) optExpresion -> . Expresion . OBJECTID
    (49) optExpresion -> . OBJECTID
    BOOL_CONST      shift and go to state 39
    STR_CONST       shift and go to state 40
    INT_CONST       shift and go to state 41
    OBJECTID        shift and go to state 42
    {               shift and go to state 43
    NEW             shift and go to state 44
    CASE            shift and go to state 45
    LET             shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    Expresion                      shift and go to state 89
    optExpresion                   shift and go to state 49

state 65

    (45) Expresion -> OBJECTID ASSIGN . Expresion
    (20) Expresion -> . BOOL_CONST
    (21) Expresion -> . STR_CONST
    (22) Expresion -> . INT_CONST
    (23) Expresion -> . OBJECTID
    (24) Expresion -> . { bloque }
    (25) Expresion -> . NEW TYPEID
    (26) Expresion -> . CASE Expresion OF plusExpresion ESAC
    (27) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (28) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (29) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (30) Expresion -> . optExpresion ( )
    (31) Expresion -> . optExpresion ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (34) Expresion -> . ~ Expresion
    (35) Expresion -> . ISVOID Expresion
    (36) Expresion -> . NOT Expresion
    (37) Expresion -> . ( Expresion )
    (38) Expresion -> . Expresion = Expresion
    (39) Expresion -> . Expresion < Expresion
    (40) Expresion -> . Expresion LE Expresion
    (41) Expresion -> . Expresion - Expresion
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . Expresion / Expresion
    (44) Expresion -> . Expresion * Expresion
    (45) Expresion -> . OBJECTID ASSIGN Expresion
    (48) optExpresion -> . Expresion . OBJECTID
    (49) optExpresion -> . OBJECTID
    BOOL_CONST      shift and go to state 39
    STR_CONST       shift and go to state 40
    INT_CONST       shift and go to state 41
    OBJECTID        shift and go to state 42
    {               shift and go to state 43
    NEW             shift and go to state 44
    CASE            shift and go to state 45
    LET             shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    Expresion                      shift and go to state 90
    optExpresion                   shift and go to state 49

state 66

    (24) Expresion -> { bloque . }
    }               shift and go to state 91


state 67

    (56) bloque -> Expresion . ; bloque
    (59) bloque -> Expresion . ;
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (38) Expresion -> Expresion . = Expresion
    (39) Expresion -> Expresion . < Expresion
    (40) Expresion -> Expresion . LE Expresion
    (41) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    (43) Expresion -> Expresion . / Expresion
    (44) Expresion -> Expresion . * Expresion
    (48) optExpresion -> Expresion . . OBJECTID
    ;               shift and go to state 92
    @               shift and go to state 56
    =               shift and go to state 58
    <               shift and go to state 59
    LE              shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    .               shift and go to state 57


state 68

    (57) bloque -> error . ;
    (58) bloque -> error . ; Expresion ;
    ;               shift and go to state 93


state 69

    (25) Expresion -> NEW TYPEID .
    @               reduce using rule 25 (Expresion -> NEW TYPEID .)
    =               reduce using rule 25 (Expresion -> NEW TYPEID .)
    <               reduce using rule 25 (Expresion -> NEW TYPEID .)
    LE              reduce using rule 25 (Expresion -> NEW TYPEID .)
    -               reduce using rule 25 (Expresion -> NEW TYPEID .)
    +               reduce using rule 25 (Expresion -> NEW TYPEID .)
    /               reduce using rule 25 (Expresion -> NEW TYPEID .)
    *               reduce using rule 25 (Expresion -> NEW TYPEID .)
    .               reduce using rule 25 (Expresion -> NEW TYPEID .)
    ;               reduce using rule 25 (Expresion -> NEW TYPEID .)
    OF              reduce using rule 25 (Expresion -> NEW TYPEID .)
    LOOP            reduce using rule 25 (Expresion -> NEW TYPEID .)
    THEN            reduce using rule 25 (Expresion -> NEW TYPEID .)
    )               reduce using rule 25 (Expresion -> NEW TYPEID .)
    }               reduce using rule 25 (Expresion -> NEW TYPEID .)
    ,               reduce using rule 25 (Expresion -> NEW TYPEID .)
    POOL            reduce using rule 25 (Expresion -> NEW TYPEID .)
    ELSE            reduce using rule 25 (Expresion -> NEW TYPEID .)
    IN              reduce using rule 25 (Expresion -> NEW TYPEID .)
    FI              reduce using rule 25 (Expresion -> NEW TYPEID .)


state 70

    (26) Expresion -> CASE Expresion . OF plusExpresion ESAC
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (38) Expresion -> Expresion . = Expresion
    (39) Expresion -> Expresion . < Expresion
    (40) Expresion -> Expresion . LE Expresion
    (41) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    (43) Expresion -> Expresion . / Expresion
    (44) Expresion -> Expresion . * Expresion
    (48) optExpresion -> Expresion . . OBJECTID
    OF              shift and go to state 94
    @               shift and go to state 56
    =               shift and go to state 58
    <               shift and go to state 59
    LE              shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    .               shift and go to state 57


state 71

    (27) Expresion -> LET OBJECTID . : TYPEID optArrow starFormal IN Expresion
    :               shift and go to state 95


state 72

    (28) Expresion -> WHILE Expresion . LOOP Expresion POOL
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (38) Expresion -> Expresion . = Expresion
    (39) Expresion -> Expresion . < Expresion
    (40) Expresion -> Expresion . LE Expresion
    (41) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    (43) Expresion -> Expresion . / Expresion
    (44) Expresion -> Expresion . * Expresion
    (48) optExpresion -> Expresion . . OBJECTID
    LOOP            shift and go to state 96
    @               shift and go to state 56
    =               shift and go to state 58
    <               shift and go to state 59
    LE              shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    .               shift and go to state 57


state 73

    (29) Expresion -> IF Expresion . THEN Expresion ELSE Expresion FI
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (38) Expresion -> Expresion . = Expresion
    (39) Expresion -> Expresion . < Expresion
    (40) Expresion -> Expresion . LE Expresion
    (41) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    (43) Expresion -> Expresion . / Expresion
    (44) Expresion -> Expresion . * Expresion
    (48) optExpresion -> Expresion . . OBJECTID
    THEN            shift and go to state 97
    @               shift and go to state 56
    =               shift and go to state 58
    <               shift and go to state 59
    LE              shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    .               shift and go to state 57


state 74

    (30) Expresion -> optExpresion ( . )
    (31) Expresion -> optExpresion ( . listaExpresiones )
    (46) listaExpresiones -> . Expresion , listaExpresiones
    (47) listaExpresiones -> . Expresion
    (20) Expresion -> . BOOL_CONST
    (21) Expresion -> . STR_CONST
    (22) Expresion -> . INT_CONST
    (23) Expresion -> . OBJECTID
    (24) Expresion -> . { bloque }
    (25) Expresion -> . NEW TYPEID
    (26) Expresion -> . CASE Expresion OF plusExpresion ESAC
    (27) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (28) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (29) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (30) Expresion -> . optExpresion ( )
    (31) Expresion -> . optExpresion ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (34) Expresion -> . ~ Expresion
    (35) Expresion -> . ISVOID Expresion
    (36) Expresion -> . NOT Expresion
    (37) Expresion -> . ( Expresion )
    (38) Expresion -> . Expresion = Expresion
    (39) Expresion -> . Expresion < Expresion
    (40) Expresion -> . Expresion LE Expresion
    (41) Expresion -> . Expresion - Expresion
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . Expresion / Expresion
    (44) Expresion -> . Expresion * Expresion
    (45) Expresion -> . OBJECTID ASSIGN Expresion
    (48) optExpresion -> . Expresion . OBJECTID
    (49) optExpresion -> . OBJECTID
    )               shift and go to state 98
    BOOL_CONST      shift and go to state 39
    STR_CONST       shift and go to state 40
    INT_CONST       shift and go to state 41
    OBJECTID        shift and go to state 42
    {               shift and go to state 43
    NEW             shift and go to state 44
    CASE            shift and go to state 45
    LET             shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    optExpresion                   shift and go to state 49
    listaExpresiones               shift and go to state 99
    Expresion                      shift and go to state 100

state 75

    (37) Expresion -> ( Expresion . )
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (38) Expresion -> Expresion . = Expresion
    (39) Expresion -> Expresion . < Expresion
    (40) Expresion -> Expresion . LE Expresion
    (41) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    (43) Expresion -> Expresion . / Expresion
    (44) Expresion -> Expresion . * Expresion
    (48) optExpresion -> Expresion . . OBJECTID
    )               shift and go to state 101
    @               shift and go to state 56
    =               shift and go to state 58
    <               shift and go to state 59
    LE              shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    .               shift and go to state 57


state 76

    (34) Expresion -> ~ Expresion .
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (38) Expresion -> Expresion . = Expresion
    (39) Expresion -> Expresion . < Expresion
    (40) Expresion -> Expresion . LE Expresion
    (41) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    (43) Expresion -> Expresion . / Expresion
    (44) Expresion -> Expresion . * Expresion
    (48) optExpresion -> Expresion . . OBJECTID
    =               reduce using rule 34 (Expresion -> ~ Expresion .)
    <               reduce using rule 34 (Expresion -> ~ Expresion .)
    LE              reduce using rule 34 (Expresion -> ~ Expresion .)
    -               reduce using rule 34 (Expresion -> ~ Expresion .)
    +               reduce using rule 34 (Expresion -> ~ Expresion .)
    /               reduce using rule 34 (Expresion -> ~ Expresion .)
    *               reduce using rule 34 (Expresion -> ~ Expresion .)
    ;               reduce using rule 34 (Expresion -> ~ Expresion .)
    OF              reduce using rule 34 (Expresion -> ~ Expresion .)
    LOOP            reduce using rule 34 (Expresion -> ~ Expresion .)
    THEN            reduce using rule 34 (Expresion -> ~ Expresion .)
    )               reduce using rule 34 (Expresion -> ~ Expresion .)
    }               reduce using rule 34 (Expresion -> ~ Expresion .)
    ,               reduce using rule 34 (Expresion -> ~ Expresion .)
    POOL            reduce using rule 34 (Expresion -> ~ Expresion .)
    ELSE            reduce using rule 34 (Expresion -> ~ Expresion .)
    IN              reduce using rule 34 (Expresion -> ~ Expresion .)
    FI              reduce using rule 34 (Expresion -> ~ Expresion .)
    @               shift and go to state 56
    .               shift and go to state 57


state 77

    (35) Expresion -> ISVOID Expresion .
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (38) Expresion -> Expresion . = Expresion
    (39) Expresion -> Expresion . < Expresion
    (40) Expresion -> Expresion . LE Expresion
    (41) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    (43) Expresion -> Expresion . / Expresion
    (44) Expresion -> Expresion . * Expresion
    (48) optExpresion -> Expresion . . OBJECTID
    =               reduce using rule 35 (Expresion -> ISVOID Expresion .)
    <               reduce using rule 35 (Expresion -> ISVOID Expresion .)
    LE              reduce using rule 35 (Expresion -> ISVOID Expresion .)
    -               reduce using rule 35 (Expresion -> ISVOID Expresion .)
    +               reduce using rule 35 (Expresion -> ISVOID Expresion .)
    /               reduce using rule 35 (Expresion -> ISVOID Expresion .)
    *               reduce using rule 35 (Expresion -> ISVOID Expresion .)
    ;               reduce using rule 35 (Expresion -> ISVOID Expresion .)
    OF              reduce using rule 35 (Expresion -> ISVOID Expresion .)
    LOOP            reduce using rule 35 (Expresion -> ISVOID Expresion .)
    THEN            reduce using rule 35 (Expresion -> ISVOID Expresion .)
    )               reduce using rule 35 (Expresion -> ISVOID Expresion .)
    }               reduce using rule 35 (Expresion -> ISVOID Expresion .)
    ,               reduce using rule 35 (Expresion -> ISVOID Expresion .)
    POOL            reduce using rule 35 (Expresion -> ISVOID Expresion .)
    ELSE            reduce using rule 35 (Expresion -> ISVOID Expresion .)
    IN              reduce using rule 35 (Expresion -> ISVOID Expresion .)
    FI              reduce using rule 35 (Expresion -> ISVOID Expresion .)
    @               shift and go to state 56
    .               shift and go to state 57


state 78

    (36) Expresion -> NOT Expresion .
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (38) Expresion -> Expresion . = Expresion
    (39) Expresion -> Expresion . < Expresion
    (40) Expresion -> Expresion . LE Expresion
    (41) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    (43) Expresion -> Expresion . / Expresion
    (44) Expresion -> Expresion . * Expresion
    (48) optExpresion -> Expresion . . OBJECTID
    =               reduce using rule 36 (Expresion -> NOT Expresion .)
    <               reduce using rule 36 (Expresion -> NOT Expresion .)
    LE              reduce using rule 36 (Expresion -> NOT Expresion .)
    -               reduce using rule 36 (Expresion -> NOT Expresion .)
    +               reduce using rule 36 (Expresion -> NOT Expresion .)
    /               reduce using rule 36 (Expresion -> NOT Expresion .)
    *               reduce using rule 36 (Expresion -> NOT Expresion .)
    ;               reduce using rule 36 (Expresion -> NOT Expresion .)
    OF              reduce using rule 36 (Expresion -> NOT Expresion .)
    LOOP            reduce using rule 36 (Expresion -> NOT Expresion .)
    THEN            reduce using rule 36 (Expresion -> NOT Expresion .)
    )               reduce using rule 36 (Expresion -> NOT Expresion .)
    }               reduce using rule 36 (Expresion -> NOT Expresion .)
    ,               reduce using rule 36 (Expresion -> NOT Expresion .)
    POOL            reduce using rule 36 (Expresion -> NOT Expresion .)
    ELSE            reduce using rule 36 (Expresion -> NOT Expresion .)
    IN              reduce using rule 36 (Expresion -> NOT Expresion .)
    FI              reduce using rule 36 (Expresion -> NOT Expresion .)
    @               shift and go to state 56
    .               shift and go to state 57


state 79

    (15) Metodo -> OBJECTID ( listaFormales ) : TYPEID { . Expresion } ;
    (20) Expresion -> . BOOL_CONST
    (21) Expresion -> . STR_CONST
    (22) Expresion -> . INT_CONST
    (23) Expresion -> . OBJECTID
    (24) Expresion -> . { bloque }
    (25) Expresion -> . NEW TYPEID
    (26) Expresion -> . CASE Expresion OF plusExpresion ESAC
    (27) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (28) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (29) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (30) Expresion -> . optExpresion ( )
    (31) Expresion -> . optExpresion ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (34) Expresion -> . ~ Expresion
    (35) Expresion -> . ISVOID Expresion
    (36) Expresion -> . NOT Expresion
    (37) Expresion -> . ( Expresion )
    (38) Expresion -> . Expresion = Expresion
    (39) Expresion -> . Expresion < Expresion
    (40) Expresion -> . Expresion LE Expresion
    (41) Expresion -> . Expresion - Expresion
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . Expresion / Expresion
    (44) Expresion -> . Expresion * Expresion
    (45) Expresion -> . OBJECTID ASSIGN Expresion
    (48) optExpresion -> . Expresion . OBJECTID
    (49) optExpresion -> . OBJECTID
    BOOL_CONST      shift and go to state 39
    STR_CONST       shift and go to state 40
    INT_CONST       shift and go to state 41
    OBJECTID        shift and go to state 42
    {               shift and go to state 43
    NEW             shift and go to state 44
    CASE            shift and go to state 45
    LET             shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    Expresion                      shift and go to state 102
    optExpresion                   shift and go to state 49

state 80

    (16) Metodo -> OBJECTID ( ) : TYPEID { Expresion . } ;
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (38) Expresion -> Expresion . = Expresion
    (39) Expresion -> Expresion . < Expresion
    (40) Expresion -> Expresion . LE Expresion
    (41) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    (43) Expresion -> Expresion . / Expresion
    (44) Expresion -> Expresion . * Expresion
    (48) optExpresion -> Expresion . . OBJECTID
    }               shift and go to state 103
    @               shift and go to state 56
    =               shift and go to state 58
    <               shift and go to state 59
    LE              shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    .               shift and go to state 57


state 81

    (32) Expresion -> Expresion @ TYPEID . . OBJECTID ( listaExpresiones )
    (33) Expresion -> Expresion @ TYPEID . . OBJECTID ( )
    .               shift and go to state 104


state 82

    (48) optExpresion -> Expresion . OBJECTID .
    (               reduce using rule 48 (optExpresion -> Expresion . OBJECTID .)


state 83

    (38) Expresion -> Expresion = Expresion .
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (38) Expresion -> Expresion . = Expresion
    (39) Expresion -> Expresion . < Expresion
    (40) Expresion -> Expresion . LE Expresion
    (41) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    (43) Expresion -> Expresion . / Expresion
    (44) Expresion -> Expresion . * Expresion
    (48) optExpresion -> Expresion . . OBJECTID
    =               reduce using rule 38 (Expresion -> Expresion = Expresion .)
    <               reduce using rule 38 (Expresion -> Expresion = Expresion .)
    LE              reduce using rule 38 (Expresion -> Expresion = Expresion .)
    ;               reduce using rule 38 (Expresion -> Expresion = Expresion .)
    OF              reduce using rule 38 (Expresion -> Expresion = Expresion .)
    LOOP            reduce using rule 38 (Expresion -> Expresion = Expresion .)
    THEN            reduce using rule 38 (Expresion -> Expresion = Expresion .)
    )               reduce using rule 38 (Expresion -> Expresion = Expresion .)
    }               reduce using rule 38 (Expresion -> Expresion = Expresion .)
    ,               reduce using rule 38 (Expresion -> Expresion = Expresion .)
    POOL            reduce using rule 38 (Expresion -> Expresion = Expresion .)
    ELSE            reduce using rule 38 (Expresion -> Expresion = Expresion .)
    IN              reduce using rule 38 (Expresion -> Expresion = Expresion .)
    FI              reduce using rule 38 (Expresion -> Expresion = Expresion .)
    @               shift and go to state 56
    -               shift and go to state 61
    +               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    .               shift and go to state 57


state 84

    (39) Expresion -> Expresion < Expresion .
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (38) Expresion -> Expresion . = Expresion
    (39) Expresion -> Expresion . < Expresion
    (40) Expresion -> Expresion . LE Expresion
    (41) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    (43) Expresion -> Expresion . / Expresion
    (44) Expresion -> Expresion . * Expresion
    (48) optExpresion -> Expresion . . OBJECTID
    =               reduce using rule 39 (Expresion -> Expresion < Expresion .)
    <               reduce using rule 39 (Expresion -> Expresion < Expresion .)
    LE              reduce using rule 39 (Expresion -> Expresion < Expresion .)
    ;               reduce using rule 39 (Expresion -> Expresion < Expresion .)
    OF              reduce using rule 39 (Expresion -> Expresion < Expresion .)
    LOOP            reduce using rule 39 (Expresion -> Expresion < Expresion .)
    THEN            reduce using rule 39 (Expresion -> Expresion < Expresion .)
    )               reduce using rule 39 (Expresion -> Expresion < Expresion .)
    }               reduce using rule 39 (Expresion -> Expresion < Expresion .)
    ,               reduce using rule 39 (Expresion -> Expresion < Expresion .)
    POOL            reduce using rule 39 (Expresion -> Expresion < Expresion .)
    ELSE            reduce using rule 39 (Expresion -> Expresion < Expresion .)
    IN              reduce using rule 39 (Expresion -> Expresion < Expresion .)
    FI              reduce using rule 39 (Expresion -> Expresion < Expresion .)
    @               shift and go to state 56
    -               shift and go to state 61
    +               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    .               shift and go to state 57


state 85

    (40) Expresion -> Expresion LE Expresion .
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (38) Expresion -> Expresion . = Expresion
    (39) Expresion -> Expresion . < Expresion
    (40) Expresion -> Expresion . LE Expresion
    (41) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    (43) Expresion -> Expresion . / Expresion
    (44) Expresion -> Expresion . * Expresion
    (48) optExpresion -> Expresion . . OBJECTID
    =               reduce using rule 40 (Expresion -> Expresion LE Expresion .)
    <               reduce using rule 40 (Expresion -> Expresion LE Expresion .)
    LE              reduce using rule 40 (Expresion -> Expresion LE Expresion .)
    ;               reduce using rule 40 (Expresion -> Expresion LE Expresion .)
    OF              reduce using rule 40 (Expresion -> Expresion LE Expresion .)
    LOOP            reduce using rule 40 (Expresion -> Expresion LE Expresion .)
    THEN            reduce using rule 40 (Expresion -> Expresion LE Expresion .)
    )               reduce using rule 40 (Expresion -> Expresion LE Expresion .)
    }               reduce using rule 40 (Expresion -> Expresion LE Expresion .)
    ,               reduce using rule 40 (Expresion -> Expresion LE Expresion .)
    POOL            reduce using rule 40 (Expresion -> Expresion LE Expresion .)
    ELSE            reduce using rule 40 (Expresion -> Expresion LE Expresion .)
    IN              reduce using rule 40 (Expresion -> Expresion LE Expresion .)
    FI              reduce using rule 40 (Expresion -> Expresion LE Expresion .)
    @               shift and go to state 56
    -               shift and go to state 61
    +               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    .               shift and go to state 57


state 86

    (41) Expresion -> Expresion - Expresion .
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (38) Expresion -> Expresion . = Expresion
    (39) Expresion -> Expresion . < Expresion
    (40) Expresion -> Expresion . LE Expresion
    (41) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    (43) Expresion -> Expresion . / Expresion
    (44) Expresion -> Expresion . * Expresion
    (48) optExpresion -> Expresion . . OBJECTID
    =               reduce using rule 41 (Expresion -> Expresion - Expresion .)
    <               reduce using rule 41 (Expresion -> Expresion - Expresion .)
    LE              reduce using rule 41 (Expresion -> Expresion - Expresion .)
    -               reduce using rule 41 (Expresion -> Expresion - Expresion .)
    +               reduce using rule 41 (Expresion -> Expresion - Expresion .)
    ;               reduce using rule 41 (Expresion -> Expresion - Expresion .)
    OF              reduce using rule 41 (Expresion -> Expresion - Expresion .)
    LOOP            reduce using rule 41 (Expresion -> Expresion - Expresion .)
    THEN            reduce using rule 41 (Expresion -> Expresion - Expresion .)
    )               reduce using rule 41 (Expresion -> Expresion - Expresion .)
    }               reduce using rule 41 (Expresion -> Expresion - Expresion .)
    ,               reduce using rule 41 (Expresion -> Expresion - Expresion .)
    POOL            reduce using rule 41 (Expresion -> Expresion - Expresion .)
    ELSE            reduce using rule 41 (Expresion -> Expresion - Expresion .)
    IN              reduce using rule 41 (Expresion -> Expresion - Expresion .)
    FI              reduce using rule 41 (Expresion -> Expresion - Expresion .)
    @               shift and go to state 56
    /               shift and go to state 63
    *               shift and go to state 64
    .               shift and go to state 57


state 87

    (42) Expresion -> Expresion + Expresion .
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (38) Expresion -> Expresion . = Expresion
    (39) Expresion -> Expresion . < Expresion
    (40) Expresion -> Expresion . LE Expresion
    (41) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    (43) Expresion -> Expresion . / Expresion
    (44) Expresion -> Expresion . * Expresion
    (48) optExpresion -> Expresion . . OBJECTID
    =               reduce using rule 42 (Expresion -> Expresion + Expresion .)
    <               reduce using rule 42 (Expresion -> Expresion + Expresion .)
    LE              reduce using rule 42 (Expresion -> Expresion + Expresion .)
    -               reduce using rule 42 (Expresion -> Expresion + Expresion .)
    +               reduce using rule 42 (Expresion -> Expresion + Expresion .)
    ;               reduce using rule 42 (Expresion -> Expresion + Expresion .)
    OF              reduce using rule 42 (Expresion -> Expresion + Expresion .)
    LOOP            reduce using rule 42 (Expresion -> Expresion + Expresion .)
    THEN            reduce using rule 42 (Expresion -> Expresion + Expresion .)
    )               reduce using rule 42 (Expresion -> Expresion + Expresion .)
    }               reduce using rule 42 (Expresion -> Expresion + Expresion .)
    ,               reduce using rule 42 (Expresion -> Expresion + Expresion .)
    POOL            reduce using rule 42 (Expresion -> Expresion + Expresion .)
    ELSE            reduce using rule 42 (Expresion -> Expresion + Expresion .)
    IN              reduce using rule 42 (Expresion -> Expresion + Expresion .)
    FI              reduce using rule 42 (Expresion -> Expresion + Expresion .)
    @               shift and go to state 56
    /               shift and go to state 63
    *               shift and go to state 64
    .               shift and go to state 57


state 88

    (43) Expresion -> Expresion / Expresion .
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (38) Expresion -> Expresion . = Expresion
    (39) Expresion -> Expresion . < Expresion
    (40) Expresion -> Expresion . LE Expresion
    (41) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    (43) Expresion -> Expresion . / Expresion
    (44) Expresion -> Expresion . * Expresion
    (48) optExpresion -> Expresion . . OBJECTID
    =               reduce using rule 43 (Expresion -> Expresion / Expresion .)
    <               reduce using rule 43 (Expresion -> Expresion / Expresion .)
    LE              reduce using rule 43 (Expresion -> Expresion / Expresion .)
    -               reduce using rule 43 (Expresion -> Expresion / Expresion .)
    +               reduce using rule 43 (Expresion -> Expresion / Expresion .)
    /               reduce using rule 43 (Expresion -> Expresion / Expresion .)
    *               reduce using rule 43 (Expresion -> Expresion / Expresion .)
    ;               reduce using rule 43 (Expresion -> Expresion / Expresion .)
    OF              reduce using rule 43 (Expresion -> Expresion / Expresion .)
    LOOP            reduce using rule 43 (Expresion -> Expresion / Expresion .)
    THEN            reduce using rule 43 (Expresion -> Expresion / Expresion .)
    )               reduce using rule 43 (Expresion -> Expresion / Expresion .)
    }               reduce using rule 43 (Expresion -> Expresion / Expresion .)
    ,               reduce using rule 43 (Expresion -> Expresion / Expresion .)
    POOL            reduce using rule 43 (Expresion -> Expresion / Expresion .)
    ELSE            reduce using rule 43 (Expresion -> Expresion / Expresion .)
    IN              reduce using rule 43 (Expresion -> Expresion / Expresion .)
    FI              reduce using rule 43 (Expresion -> Expresion / Expresion .)
    @               shift and go to state 56
    .               shift and go to state 57


state 89

    (44) Expresion -> Expresion * Expresion .
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (38) Expresion -> Expresion . = Expresion
    (39) Expresion -> Expresion . < Expresion
    (40) Expresion -> Expresion . LE Expresion
    (41) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    (43) Expresion -> Expresion . / Expresion
    (44) Expresion -> Expresion . * Expresion
    (48) optExpresion -> Expresion . . OBJECTID
    =               reduce using rule 44 (Expresion -> Expresion * Expresion .)
    <               reduce using rule 44 (Expresion -> Expresion * Expresion .)
    LE              reduce using rule 44 (Expresion -> Expresion * Expresion .)
    -               reduce using rule 44 (Expresion -> Expresion * Expresion .)
    +               reduce using rule 44 (Expresion -> Expresion * Expresion .)
    /               reduce using rule 44 (Expresion -> Expresion * Expresion .)
    *               reduce using rule 44 (Expresion -> Expresion * Expresion .)
    ;               reduce using rule 44 (Expresion -> Expresion * Expresion .)
    OF              reduce using rule 44 (Expresion -> Expresion * Expresion .)
    LOOP            reduce using rule 44 (Expresion -> Expresion * Expresion .)
    THEN            reduce using rule 44 (Expresion -> Expresion * Expresion .)
    )               reduce using rule 44 (Expresion -> Expresion * Expresion .)
    }               reduce using rule 44 (Expresion -> Expresion * Expresion .)
    ,               reduce using rule 44 (Expresion -> Expresion * Expresion .)
    POOL            reduce using rule 44 (Expresion -> Expresion * Expresion .)
    ELSE            reduce using rule 44 (Expresion -> Expresion * Expresion .)
    IN              reduce using rule 44 (Expresion -> Expresion * Expresion .)
    FI              reduce using rule 44 (Expresion -> Expresion * Expresion .)
    @               shift and go to state 56
    .               shift and go to state 57


state 90

    (45) Expresion -> OBJECTID ASSIGN Expresion .
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (38) Expresion -> Expresion . = Expresion
    (39) Expresion -> Expresion . < Expresion
    (40) Expresion -> Expresion . LE Expresion
    (41) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    (43) Expresion -> Expresion . / Expresion
    (44) Expresion -> Expresion . * Expresion
    (48) optExpresion -> Expresion . . OBJECTID
    ;               reduce using rule 45 (Expresion -> OBJECTID ASSIGN Expresion .)
    OF              reduce using rule 45 (Expresion -> OBJECTID ASSIGN Expresion .)
    LOOP            reduce using rule 45 (Expresion -> OBJECTID ASSIGN Expresion .)
    THEN            reduce using rule 45 (Expresion -> OBJECTID ASSIGN Expresion .)
    )               reduce using rule 45 (Expresion -> OBJECTID ASSIGN Expresion .)
    }               reduce using rule 45 (Expresion -> OBJECTID ASSIGN Expresion .)
    ,               reduce using rule 45 (Expresion -> OBJECTID ASSIGN Expresion .)
    POOL            reduce using rule 45 (Expresion -> OBJECTID ASSIGN Expresion .)
    ELSE            reduce using rule 45 (Expresion -> OBJECTID ASSIGN Expresion .)
    IN              reduce using rule 45 (Expresion -> OBJECTID ASSIGN Expresion .)
    FI              reduce using rule 45 (Expresion -> OBJECTID ASSIGN Expresion .)
    @               shift and go to state 56
    =               shift and go to state 58
    <               shift and go to state 59
    LE              shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    .               shift and go to state 57


state 91

    (24) Expresion -> { bloque } .
    @               reduce using rule 24 (Expresion -> { bloque } .)
    =               reduce using rule 24 (Expresion -> { bloque } .)
    <               reduce using rule 24 (Expresion -> { bloque } .)
    LE              reduce using rule 24 (Expresion -> { bloque } .)
    -               reduce using rule 24 (Expresion -> { bloque } .)
    +               reduce using rule 24 (Expresion -> { bloque } .)
    /               reduce using rule 24 (Expresion -> { bloque } .)
    *               reduce using rule 24 (Expresion -> { bloque } .)
    .               reduce using rule 24 (Expresion -> { bloque } .)
    ;               reduce using rule 24 (Expresion -> { bloque } .)
    OF              reduce using rule 24 (Expresion -> { bloque } .)
    LOOP            reduce using rule 24 (Expresion -> { bloque } .)
    THEN            reduce using rule 24 (Expresion -> { bloque } .)
    )               reduce using rule 24 (Expresion -> { bloque } .)
    }               reduce using rule 24 (Expresion -> { bloque } .)
    ,               reduce using rule 24 (Expresion -> { bloque } .)
    POOL            reduce using rule 24 (Expresion -> { bloque } .)
    ELSE            reduce using rule 24 (Expresion -> { bloque } .)
    IN              reduce using rule 24 (Expresion -> { bloque } .)
    FI              reduce using rule 24 (Expresion -> { bloque } .)


state 92

    (56) bloque -> Expresion ; . bloque
    (59) bloque -> Expresion ; .
    (56) bloque -> . Expresion ; bloque
    (57) bloque -> . error ;
    (58) bloque -> . error ; Expresion ;
    (59) bloque -> . Expresion ;
    (20) Expresion -> . BOOL_CONST
    (21) Expresion -> . STR_CONST
    (22) Expresion -> . INT_CONST
    (23) Expresion -> . OBJECTID
    (24) Expresion -> . { bloque }
    (25) Expresion -> . NEW TYPEID
    (26) Expresion -> . CASE Expresion OF plusExpresion ESAC
    (27) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (28) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (29) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (30) Expresion -> . optExpresion ( )
    (31) Expresion -> . optExpresion ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (34) Expresion -> . ~ Expresion
    (35) Expresion -> . ISVOID Expresion
    (36) Expresion -> . NOT Expresion
    (37) Expresion -> . ( Expresion )
    (38) Expresion -> . Expresion = Expresion
    (39) Expresion -> . Expresion < Expresion
    (40) Expresion -> . Expresion LE Expresion
    (41) Expresion -> . Expresion - Expresion
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . Expresion / Expresion
    (44) Expresion -> . Expresion * Expresion
    (45) Expresion -> . OBJECTID ASSIGN Expresion
    (48) optExpresion -> . Expresion . OBJECTID
    (49) optExpresion -> . OBJECTID
    }               reduce using rule 59 (bloque -> Expresion ; .)
    error           shift and go to state 68
    BOOL_CONST      shift and go to state 39
    STR_CONST       shift and go to state 40
    INT_CONST       shift and go to state 41
    OBJECTID        shift and go to state 42
    {               shift and go to state 43
    NEW             shift and go to state 44
    CASE            shift and go to state 45
    LET             shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    Expresion                      shift and go to state 67
    bloque                         shift and go to state 105
    optExpresion                   shift and go to state 49

state 93

    (57) bloque -> error ; .
    (58) bloque -> error ; . Expresion ;
    (20) Expresion -> . BOOL_CONST
    (21) Expresion -> . STR_CONST
    (22) Expresion -> . INT_CONST
    (23) Expresion -> . OBJECTID
    (24) Expresion -> . { bloque }
    (25) Expresion -> . NEW TYPEID
    (26) Expresion -> . CASE Expresion OF plusExpresion ESAC
    (27) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (28) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (29) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (30) Expresion -> . optExpresion ( )
    (31) Expresion -> . optExpresion ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (34) Expresion -> . ~ Expresion
    (35) Expresion -> . ISVOID Expresion
    (36) Expresion -> . NOT Expresion
    (37) Expresion -> . ( Expresion )
    (38) Expresion -> . Expresion = Expresion
    (39) Expresion -> . Expresion < Expresion
    (40) Expresion -> . Expresion LE Expresion
    (41) Expresion -> . Expresion - Expresion
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . Expresion / Expresion
    (44) Expresion -> . Expresion * Expresion
    (45) Expresion -> . OBJECTID ASSIGN Expresion
    (48) optExpresion -> . Expresion . OBJECTID
    (49) optExpresion -> . OBJECTID
    }               reduce using rule 57 (bloque -> error ; .)
    BOOL_CONST      shift and go to state 39
    STR_CONST       shift and go to state 40
    INT_CONST       shift and go to state 41
    OBJECTID        shift and go to state 42
    {               shift and go to state 43
    NEW             shift and go to state 44
    CASE            shift and go to state 45
    LET             shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    Expresion                      shift and go to state 106
    optExpresion                   shift and go to state 49

state 94

    (26) Expresion -> CASE Expresion OF . plusExpresion ESAC
    (54) plusExpresion -> . OBJECTID : TYPEID DARROW Expresion ; plusExpresion
    (55) plusExpresion -> . OBJECTID : TYPEID DARROW Expresion ;
    OBJECTID        shift and go to state 108

    plusExpresion                  shift and go to state 107

state 95

    (27) Expresion -> LET OBJECTID : . TYPEID optArrow starFormal IN Expresion
    TYPEID          shift and go to state 109


state 96

    (28) Expresion -> WHILE Expresion LOOP . Expresion POOL
    (20) Expresion -> . BOOL_CONST
    (21) Expresion -> . STR_CONST
    (22) Expresion -> . INT_CONST
    (23) Expresion -> . OBJECTID
    (24) Expresion -> . { bloque }
    (25) Expresion -> . NEW TYPEID
    (26) Expresion -> . CASE Expresion OF plusExpresion ESAC
    (27) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (28) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (29) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (30) Expresion -> . optExpresion ( )
    (31) Expresion -> . optExpresion ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (34) Expresion -> . ~ Expresion
    (35) Expresion -> . ISVOID Expresion
    (36) Expresion -> . NOT Expresion
    (37) Expresion -> . ( Expresion )
    (38) Expresion -> . Expresion = Expresion
    (39) Expresion -> . Expresion < Expresion
    (40) Expresion -> . Expresion LE Expresion
    (41) Expresion -> . Expresion - Expresion
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . Expresion / Expresion
    (44) Expresion -> . Expresion * Expresion
    (45) Expresion -> . OBJECTID ASSIGN Expresion
    (48) optExpresion -> . Expresion . OBJECTID
    (49) optExpresion -> . OBJECTID
    BOOL_CONST      shift and go to state 39
    STR_CONST       shift and go to state 40
    INT_CONST       shift and go to state 41
    OBJECTID        shift and go to state 42
    {               shift and go to state 43
    NEW             shift and go to state 44
    CASE            shift and go to state 45
    LET             shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    Expresion                      shift and go to state 110
    optExpresion                   shift and go to state 49

state 97

    (29) Expresion -> IF Expresion THEN . Expresion ELSE Expresion FI
    (20) Expresion -> . BOOL_CONST
    (21) Expresion -> . STR_CONST
    (22) Expresion -> . INT_CONST
    (23) Expresion -> . OBJECTID
    (24) Expresion -> . { bloque }
    (25) Expresion -> . NEW TYPEID
    (26) Expresion -> . CASE Expresion OF plusExpresion ESAC
    (27) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (28) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (29) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (30) Expresion -> . optExpresion ( )
    (31) Expresion -> . optExpresion ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (34) Expresion -> . ~ Expresion
    (35) Expresion -> . ISVOID Expresion
    (36) Expresion -> . NOT Expresion
    (37) Expresion -> . ( Expresion )
    (38) Expresion -> . Expresion = Expresion
    (39) Expresion -> . Expresion < Expresion
    (40) Expresion -> . Expresion LE Expresion
    (41) Expresion -> . Expresion - Expresion
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . Expresion / Expresion
    (44) Expresion -> . Expresion * Expresion
    (45) Expresion -> . OBJECTID ASSIGN Expresion
    (48) optExpresion -> . Expresion . OBJECTID
    (49) optExpresion -> . OBJECTID
    BOOL_CONST      shift and go to state 39
    STR_CONST       shift and go to state 40
    INT_CONST       shift and go to state 41
    OBJECTID        shift and go to state 42
    {               shift and go to state 43
    NEW             shift and go to state 44
    CASE            shift and go to state 45
    LET             shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    Expresion                      shift and go to state 111
    optExpresion                   shift and go to state 49

state 98

    (30) Expresion -> optExpresion ( ) .
    @               reduce using rule 30 (Expresion -> optExpresion ( ) .)
    =               reduce using rule 30 (Expresion -> optExpresion ( ) .)
    <               reduce using rule 30 (Expresion -> optExpresion ( ) .)
    LE              reduce using rule 30 (Expresion -> optExpresion ( ) .)
    -               reduce using rule 30 (Expresion -> optExpresion ( ) .)
    +               reduce using rule 30 (Expresion -> optExpresion ( ) .)
    /               reduce using rule 30 (Expresion -> optExpresion ( ) .)
    *               reduce using rule 30 (Expresion -> optExpresion ( ) .)
    .               reduce using rule 30 (Expresion -> optExpresion ( ) .)
    ;               reduce using rule 30 (Expresion -> optExpresion ( ) .)
    OF              reduce using rule 30 (Expresion -> optExpresion ( ) .)
    LOOP            reduce using rule 30 (Expresion -> optExpresion ( ) .)
    THEN            reduce using rule 30 (Expresion -> optExpresion ( ) .)
    )               reduce using rule 30 (Expresion -> optExpresion ( ) .)
    }               reduce using rule 30 (Expresion -> optExpresion ( ) .)
    ,               reduce using rule 30 (Expresion -> optExpresion ( ) .)
    POOL            reduce using rule 30 (Expresion -> optExpresion ( ) .)
    ELSE            reduce using rule 30 (Expresion -> optExpresion ( ) .)
    IN              reduce using rule 30 (Expresion -> optExpresion ( ) .)
    FI              reduce using rule 30 (Expresion -> optExpresion ( ) .)


state 99

    (31) Expresion -> optExpresion ( listaExpresiones . )
    )               shift and go to state 112


state 100

    (46) listaExpresiones -> Expresion . , listaExpresiones
    (47) listaExpresiones -> Expresion .
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (38) Expresion -> Expresion . = Expresion
    (39) Expresion -> Expresion . < Expresion
    (40) Expresion -> Expresion . LE Expresion
    (41) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    (43) Expresion -> Expresion . / Expresion
    (44) Expresion -> Expresion . * Expresion
    (48) optExpresion -> Expresion . . OBJECTID
    ,               shift and go to state 113
    )               reduce using rule 47 (listaExpresiones -> Expresion .)
    @               shift and go to state 56
    =               shift and go to state 58
    <               shift and go to state 59
    LE              shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    .               shift and go to state 57


state 101

    (37) Expresion -> ( Expresion ) .
    @               reduce using rule 37 (Expresion -> ( Expresion ) .)
    =               reduce using rule 37 (Expresion -> ( Expresion ) .)
    <               reduce using rule 37 (Expresion -> ( Expresion ) .)
    LE              reduce using rule 37 (Expresion -> ( Expresion ) .)
    -               reduce using rule 37 (Expresion -> ( Expresion ) .)
    +               reduce using rule 37 (Expresion -> ( Expresion ) .)
    /               reduce using rule 37 (Expresion -> ( Expresion ) .)
    *               reduce using rule 37 (Expresion -> ( Expresion ) .)
    .               reduce using rule 37 (Expresion -> ( Expresion ) .)
    ;               reduce using rule 37 (Expresion -> ( Expresion ) .)
    OF              reduce using rule 37 (Expresion -> ( Expresion ) .)
    LOOP            reduce using rule 37 (Expresion -> ( Expresion ) .)
    THEN            reduce using rule 37 (Expresion -> ( Expresion ) .)
    )               reduce using rule 37 (Expresion -> ( Expresion ) .)
    }               reduce using rule 37 (Expresion -> ( Expresion ) .)
    ,               reduce using rule 37 (Expresion -> ( Expresion ) .)
    POOL            reduce using rule 37 (Expresion -> ( Expresion ) .)
    ELSE            reduce using rule 37 (Expresion -> ( Expresion ) .)
    IN              reduce using rule 37 (Expresion -> ( Expresion ) .)
    FI              reduce using rule 37 (Expresion -> ( Expresion ) .)


state 102

    (15) Metodo -> OBJECTID ( listaFormales ) : TYPEID { Expresion . } ;
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (38) Expresion -> Expresion . = Expresion
    (39) Expresion -> Expresion . < Expresion
    (40) Expresion -> Expresion . LE Expresion
    (41) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    (43) Expresion -> Expresion . / Expresion
    (44) Expresion -> Expresion . * Expresion
    (48) optExpresion -> Expresion . . OBJECTID
    }               shift and go to state 114
    @               shift and go to state 56
    =               shift and go to state 58
    <               shift and go to state 59
    LE              shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    .               shift and go to state 57


state 103

    (16) Metodo -> OBJECTID ( ) : TYPEID { Expresion } . ;
    ;               shift and go to state 115


state 104

    (32) Expresion -> Expresion @ TYPEID . . OBJECTID ( listaExpresiones )
    (33) Expresion -> Expresion @ TYPEID . . OBJECTID ( )
    OBJECTID        shift and go to state 116


state 105

    (56) bloque -> Expresion ; bloque .
    }               reduce using rule 56 (bloque -> Expresion ; bloque .)


state 106

    (58) bloque -> error ; Expresion . ;
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (38) Expresion -> Expresion . = Expresion
    (39) Expresion -> Expresion . < Expresion
    (40) Expresion -> Expresion . LE Expresion
    (41) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    (43) Expresion -> Expresion . / Expresion
    (44) Expresion -> Expresion . * Expresion
    (48) optExpresion -> Expresion . . OBJECTID
    ;               shift and go to state 117
    @               shift and go to state 56
    =               shift and go to state 58
    <               shift and go to state 59
    LE              shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    .               shift and go to state 57


state 107

    (26) Expresion -> CASE Expresion OF plusExpresion . ESAC
    ESAC            shift and go to state 118


state 108

    (54) plusExpresion -> OBJECTID . : TYPEID DARROW Expresion ; plusExpresion
    (55) plusExpresion -> OBJECTID . : TYPEID DARROW Expresion ;
    :               shift and go to state 119


state 109

    (27) Expresion -> LET OBJECTID : TYPEID . optArrow starFormal IN Expresion
    (50) optArrow -> . ASSIGN Expresion
    (51) optArrow -> .
    ASSIGN          shift and go to state 121
    ,               reduce using rule 51 (optArrow -> .)
    IN              reduce using rule 51 (optArrow -> .)

    optArrow                       shift and go to state 120

state 110

    (28) Expresion -> WHILE Expresion LOOP Expresion . POOL
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (38) Expresion -> Expresion . = Expresion
    (39) Expresion -> Expresion . < Expresion
    (40) Expresion -> Expresion . LE Expresion
    (41) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    (43) Expresion -> Expresion . / Expresion
    (44) Expresion -> Expresion . * Expresion
    (48) optExpresion -> Expresion . . OBJECTID
    POOL            shift and go to state 122
    @               shift and go to state 56
    =               shift and go to state 58
    <               shift and go to state 59
    LE              shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    .               shift and go to state 57


state 111

    (29) Expresion -> IF Expresion THEN Expresion . ELSE Expresion FI
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (38) Expresion -> Expresion . = Expresion
    (39) Expresion -> Expresion . < Expresion
    (40) Expresion -> Expresion . LE Expresion
    (41) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    (43) Expresion -> Expresion . / Expresion
    (44) Expresion -> Expresion . * Expresion
    (48) optExpresion -> Expresion . . OBJECTID
    ELSE            shift and go to state 123
    @               shift and go to state 56
    =               shift and go to state 58
    <               shift and go to state 59
    LE              shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    .               shift and go to state 57


state 112

    (31) Expresion -> optExpresion ( listaExpresiones ) .
    @               reduce using rule 31 (Expresion -> optExpresion ( listaExpresiones ) .)
    =               reduce using rule 31 (Expresion -> optExpresion ( listaExpresiones ) .)
    <               reduce using rule 31 (Expresion -> optExpresion ( listaExpresiones ) .)
    LE              reduce using rule 31 (Expresion -> optExpresion ( listaExpresiones ) .)
    -               reduce using rule 31 (Expresion -> optExpresion ( listaExpresiones ) .)
    +               reduce using rule 31 (Expresion -> optExpresion ( listaExpresiones ) .)
    /               reduce using rule 31 (Expresion -> optExpresion ( listaExpresiones ) .)
    *               reduce using rule 31 (Expresion -> optExpresion ( listaExpresiones ) .)
    .               reduce using rule 31 (Expresion -> optExpresion ( listaExpresiones ) .)
    ;               reduce using rule 31 (Expresion -> optExpresion ( listaExpresiones ) .)
    OF              reduce using rule 31 (Expresion -> optExpresion ( listaExpresiones ) .)
    LOOP            reduce using rule 31 (Expresion -> optExpresion ( listaExpresiones ) .)
    THEN            reduce using rule 31 (Expresion -> optExpresion ( listaExpresiones ) .)
    )               reduce using rule 31 (Expresion -> optExpresion ( listaExpresiones ) .)
    }               reduce using rule 31 (Expresion -> optExpresion ( listaExpresiones ) .)
    ,               reduce using rule 31 (Expresion -> optExpresion ( listaExpresiones ) .)
    POOL            reduce using rule 31 (Expresion -> optExpresion ( listaExpresiones ) .)
    ELSE            reduce using rule 31 (Expresion -> optExpresion ( listaExpresiones ) .)
    IN              reduce using rule 31 (Expresion -> optExpresion ( listaExpresiones ) .)
    FI              reduce using rule 31 (Expresion -> optExpresion ( listaExpresiones ) .)


state 113

    (46) listaExpresiones -> Expresion , . listaExpresiones
    (46) listaExpresiones -> . Expresion , listaExpresiones
    (47) listaExpresiones -> . Expresion
    (20) Expresion -> . BOOL_CONST
    (21) Expresion -> . STR_CONST
    (22) Expresion -> . INT_CONST
    (23) Expresion -> . OBJECTID
    (24) Expresion -> . { bloque }
    (25) Expresion -> . NEW TYPEID
    (26) Expresion -> . CASE Expresion OF plusExpresion ESAC
    (27) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (28) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (29) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (30) Expresion -> . optExpresion ( )
    (31) Expresion -> . optExpresion ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (34) Expresion -> . ~ Expresion
    (35) Expresion -> . ISVOID Expresion
    (36) Expresion -> . NOT Expresion
    (37) Expresion -> . ( Expresion )
    (38) Expresion -> . Expresion = Expresion
    (39) Expresion -> . Expresion < Expresion
    (40) Expresion -> . Expresion LE Expresion
    (41) Expresion -> . Expresion - Expresion
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . Expresion / Expresion
    (44) Expresion -> . Expresion * Expresion
    (45) Expresion -> . OBJECTID ASSIGN Expresion
    (48) optExpresion -> . Expresion . OBJECTID
    (49) optExpresion -> . OBJECTID
    BOOL_CONST      shift and go to state 39
    STR_CONST       shift and go to state 40
    INT_CONST       shift and go to state 41
    OBJECTID        shift and go to state 42
    {               shift and go to state 43
    NEW             shift and go to state 44
    CASE            shift and go to state 45
    LET             shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    Expresion                      shift and go to state 100
    listaExpresiones               shift and go to state 124
    optExpresion                   shift and go to state 49

state 114

    (15) Metodo -> OBJECTID ( listaFormales ) : TYPEID { Expresion } . ;
    ;               shift and go to state 125


state 115

    (16) Metodo -> OBJECTID ( ) : TYPEID { Expresion } ; .
    OBJECTID        reduce using rule 16 (Metodo -> OBJECTID ( ) : TYPEID { Expresion } ; .)
    }               reduce using rule 16 (Metodo -> OBJECTID ( ) : TYPEID { Expresion } ; .)


state 116

    (32) Expresion -> Expresion @ TYPEID . OBJECTID . ( listaExpresiones )
    (33) Expresion -> Expresion @ TYPEID . OBJECTID . ( )
    (               shift and go to state 126


state 117

    (58) bloque -> error ; Expresion ; .
    }               reduce using rule 58 (bloque -> error ; Expresion ; .)


state 118

    (26) Expresion -> CASE Expresion OF plusExpresion ESAC .
    @               reduce using rule 26 (Expresion -> CASE Expresion OF plusExpresion ESAC .)
    =               reduce using rule 26 (Expresion -> CASE Expresion OF plusExpresion ESAC .)
    <               reduce using rule 26 (Expresion -> CASE Expresion OF plusExpresion ESAC .)
    LE              reduce using rule 26 (Expresion -> CASE Expresion OF plusExpresion ESAC .)
    -               reduce using rule 26 (Expresion -> CASE Expresion OF plusExpresion ESAC .)
    +               reduce using rule 26 (Expresion -> CASE Expresion OF plusExpresion ESAC .)
    /               reduce using rule 26 (Expresion -> CASE Expresion OF plusExpresion ESAC .)
    *               reduce using rule 26 (Expresion -> CASE Expresion OF plusExpresion ESAC .)
    .               reduce using rule 26 (Expresion -> CASE Expresion OF plusExpresion ESAC .)
    ;               reduce using rule 26 (Expresion -> CASE Expresion OF plusExpresion ESAC .)
    OF              reduce using rule 26 (Expresion -> CASE Expresion OF plusExpresion ESAC .)
    LOOP            reduce using rule 26 (Expresion -> CASE Expresion OF plusExpresion ESAC .)
    THEN            reduce using rule 26 (Expresion -> CASE Expresion OF plusExpresion ESAC .)
    )               reduce using rule 26 (Expresion -> CASE Expresion OF plusExpresion ESAC .)
    }               reduce using rule 26 (Expresion -> CASE Expresion OF plusExpresion ESAC .)
    ,               reduce using rule 26 (Expresion -> CASE Expresion OF plusExpresion ESAC .)
    POOL            reduce using rule 26 (Expresion -> CASE Expresion OF plusExpresion ESAC .)
    ELSE            reduce using rule 26 (Expresion -> CASE Expresion OF plusExpresion ESAC .)
    IN              reduce using rule 26 (Expresion -> CASE Expresion OF plusExpresion ESAC .)
    FI              reduce using rule 26 (Expresion -> CASE Expresion OF plusExpresion ESAC .)


state 119

    (54) plusExpresion -> OBJECTID : . TYPEID DARROW Expresion ; plusExpresion
    (55) plusExpresion -> OBJECTID : . TYPEID DARROW Expresion ;
    TYPEID          shift and go to state 127


state 120

    (27) Expresion -> LET OBJECTID : TYPEID optArrow . starFormal IN Expresion
    (52) starFormal -> . , OBJECTID : TYPEID optArrow starFormal
    (53) starFormal -> .
    ,               shift and go to state 129
    IN              reduce using rule 53 (starFormal -> .)

    starFormal                     shift and go to state 128

state 121

    (50) optArrow -> ASSIGN . Expresion
    (20) Expresion -> . BOOL_CONST
    (21) Expresion -> . STR_CONST
    (22) Expresion -> . INT_CONST
    (23) Expresion -> . OBJECTID
    (24) Expresion -> . { bloque }
    (25) Expresion -> . NEW TYPEID
    (26) Expresion -> . CASE Expresion OF plusExpresion ESAC
    (27) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (28) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (29) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (30) Expresion -> . optExpresion ( )
    (31) Expresion -> . optExpresion ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (34) Expresion -> . ~ Expresion
    (35) Expresion -> . ISVOID Expresion
    (36) Expresion -> . NOT Expresion
    (37) Expresion -> . ( Expresion )
    (38) Expresion -> . Expresion = Expresion
    (39) Expresion -> . Expresion < Expresion
    (40) Expresion -> . Expresion LE Expresion
    (41) Expresion -> . Expresion - Expresion
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . Expresion / Expresion
    (44) Expresion -> . Expresion * Expresion
    (45) Expresion -> . OBJECTID ASSIGN Expresion
    (48) optExpresion -> . Expresion . OBJECTID
    (49) optExpresion -> . OBJECTID
    BOOL_CONST      shift and go to state 39
    STR_CONST       shift and go to state 40
    INT_CONST       shift and go to state 41
    OBJECTID        shift and go to state 42
    {               shift and go to state 43
    NEW             shift and go to state 44
    CASE            shift and go to state 45
    LET             shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    Expresion                      shift and go to state 130
    optExpresion                   shift and go to state 49

state 122

    (28) Expresion -> WHILE Expresion LOOP Expresion POOL .
    @               reduce using rule 28 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    =               reduce using rule 28 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    <               reduce using rule 28 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    LE              reduce using rule 28 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    -               reduce using rule 28 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    +               reduce using rule 28 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    /               reduce using rule 28 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    *               reduce using rule 28 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    .               reduce using rule 28 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    ;               reduce using rule 28 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    OF              reduce using rule 28 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    LOOP            reduce using rule 28 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    THEN            reduce using rule 28 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    )               reduce using rule 28 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    }               reduce using rule 28 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    ,               reduce using rule 28 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    POOL            reduce using rule 28 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    ELSE            reduce using rule 28 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    IN              reduce using rule 28 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    FI              reduce using rule 28 (Expresion -> WHILE Expresion LOOP Expresion POOL .)


state 123

    (29) Expresion -> IF Expresion THEN Expresion ELSE . Expresion FI
    (20) Expresion -> . BOOL_CONST
    (21) Expresion -> . STR_CONST
    (22) Expresion -> . INT_CONST
    (23) Expresion -> . OBJECTID
    (24) Expresion -> . { bloque }
    (25) Expresion -> . NEW TYPEID
    (26) Expresion -> . CASE Expresion OF plusExpresion ESAC
    (27) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (28) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (29) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (30) Expresion -> . optExpresion ( )
    (31) Expresion -> . optExpresion ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (34) Expresion -> . ~ Expresion
    (35) Expresion -> . ISVOID Expresion
    (36) Expresion -> . NOT Expresion
    (37) Expresion -> . ( Expresion )
    (38) Expresion -> . Expresion = Expresion
    (39) Expresion -> . Expresion < Expresion
    (40) Expresion -> . Expresion LE Expresion
    (41) Expresion -> . Expresion - Expresion
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . Expresion / Expresion
    (44) Expresion -> . Expresion * Expresion
    (45) Expresion -> . OBJECTID ASSIGN Expresion
    (48) optExpresion -> . Expresion . OBJECTID
    (49) optExpresion -> . OBJECTID
    BOOL_CONST      shift and go to state 39
    STR_CONST       shift and go to state 40
    INT_CONST       shift and go to state 41
    OBJECTID        shift and go to state 42
    {               shift and go to state 43
    NEW             shift and go to state 44
    CASE            shift and go to state 45
    LET             shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    Expresion                      shift and go to state 131
    optExpresion                   shift and go to state 49

state 124

    (46) listaExpresiones -> Expresion , listaExpresiones .
    )               reduce using rule 46 (listaExpresiones -> Expresion , listaExpresiones .)


state 125

    (15) Metodo -> OBJECTID ( listaFormales ) : TYPEID { Expresion } ; .
    OBJECTID        reduce using rule 15 (Metodo -> OBJECTID ( listaFormales ) : TYPEID { Expresion } ; .)
    }               reduce using rule 15 (Metodo -> OBJECTID ( listaFormales ) : TYPEID { Expresion } ; .)


state 126

    (32) Expresion -> Expresion @ TYPEID . OBJECTID ( . listaExpresiones )
    (33) Expresion -> Expresion @ TYPEID . OBJECTID ( . )
    (46) listaExpresiones -> . Expresion , listaExpresiones
    (47) listaExpresiones -> . Expresion
    (20) Expresion -> . BOOL_CONST
    (21) Expresion -> . STR_CONST
    (22) Expresion -> . INT_CONST
    (23) Expresion -> . OBJECTID
    (24) Expresion -> . { bloque }
    (25) Expresion -> . NEW TYPEID
    (26) Expresion -> . CASE Expresion OF plusExpresion ESAC
    (27) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (28) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (29) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (30) Expresion -> . optExpresion ( )
    (31) Expresion -> . optExpresion ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (34) Expresion -> . ~ Expresion
    (35) Expresion -> . ISVOID Expresion
    (36) Expresion -> . NOT Expresion
    (37) Expresion -> . ( Expresion )
    (38) Expresion -> . Expresion = Expresion
    (39) Expresion -> . Expresion < Expresion
    (40) Expresion -> . Expresion LE Expresion
    (41) Expresion -> . Expresion - Expresion
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . Expresion / Expresion
    (44) Expresion -> . Expresion * Expresion
    (45) Expresion -> . OBJECTID ASSIGN Expresion
    (48) optExpresion -> . Expresion . OBJECTID
    (49) optExpresion -> . OBJECTID
    )               shift and go to state 133
    BOOL_CONST      shift and go to state 39
    STR_CONST       shift and go to state 40
    INT_CONST       shift and go to state 41
    OBJECTID        shift and go to state 42
    {               shift and go to state 43
    NEW             shift and go to state 44
    CASE            shift and go to state 45
    LET             shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    Expresion                      shift and go to state 100
    listaExpresiones               shift and go to state 132
    optExpresion                   shift and go to state 49

state 127

    (54) plusExpresion -> OBJECTID : TYPEID . DARROW Expresion ; plusExpresion
    (55) plusExpresion -> OBJECTID : TYPEID . DARROW Expresion ;
    DARROW          shift and go to state 134


state 128

    (27) Expresion -> LET OBJECTID : TYPEID optArrow starFormal . IN Expresion
    IN              shift and go to state 135


state 129

    (52) starFormal -> , . OBJECTID : TYPEID optArrow starFormal
    OBJECTID        shift and go to state 136


state 130

    (50) optArrow -> ASSIGN Expresion .
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (38) Expresion -> Expresion . = Expresion
    (39) Expresion -> Expresion . < Expresion
    (40) Expresion -> Expresion . LE Expresion
    (41) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    (43) Expresion -> Expresion . / Expresion
    (44) Expresion -> Expresion . * Expresion
    (48) optExpresion -> Expresion . . OBJECTID
    ,               reduce using rule 50 (optArrow -> ASSIGN Expresion .)
    IN              reduce using rule 50 (optArrow -> ASSIGN Expresion .)
    @               shift and go to state 56
    =               shift and go to state 58
    <               shift and go to state 59
    LE              shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    .               shift and go to state 57


state 131

    (29) Expresion -> IF Expresion THEN Expresion ELSE Expresion . FI
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (38) Expresion -> Expresion . = Expresion
    (39) Expresion -> Expresion . < Expresion
    (40) Expresion -> Expresion . LE Expresion
    (41) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    (43) Expresion -> Expresion . / Expresion
    (44) Expresion -> Expresion . * Expresion
    (48) optExpresion -> Expresion . . OBJECTID
    FI              shift and go to state 137
    @               shift and go to state 56
    =               shift and go to state 58
    <               shift and go to state 59
    LE              shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    .               shift and go to state 57


state 132

    (32) Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones . )
    )               shift and go to state 138


state 133

    (33) Expresion -> Expresion @ TYPEID . OBJECTID ( ) .
    @               reduce using rule 33 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    =               reduce using rule 33 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    <               reduce using rule 33 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    LE              reduce using rule 33 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    -               reduce using rule 33 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    +               reduce using rule 33 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    /               reduce using rule 33 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    *               reduce using rule 33 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    .               reduce using rule 33 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    ;               reduce using rule 33 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    OF              reduce using rule 33 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    LOOP            reduce using rule 33 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    THEN            reduce using rule 33 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    )               reduce using rule 33 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    }               reduce using rule 33 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    ,               reduce using rule 33 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    POOL            reduce using rule 33 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    ELSE            reduce using rule 33 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    IN              reduce using rule 33 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    FI              reduce using rule 33 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)


state 134

    (54) plusExpresion -> OBJECTID : TYPEID DARROW . Expresion ; plusExpresion
    (55) plusExpresion -> OBJECTID : TYPEID DARROW . Expresion ;
    (20) Expresion -> . BOOL_CONST
    (21) Expresion -> . STR_CONST
    (22) Expresion -> . INT_CONST
    (23) Expresion -> . OBJECTID
    (24) Expresion -> . { bloque }
    (25) Expresion -> . NEW TYPEID
    (26) Expresion -> . CASE Expresion OF plusExpresion ESAC
    (27) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (28) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (29) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (30) Expresion -> . optExpresion ( )
    (31) Expresion -> . optExpresion ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (34) Expresion -> . ~ Expresion
    (35) Expresion -> . ISVOID Expresion
    (36) Expresion -> . NOT Expresion
    (37) Expresion -> . ( Expresion )
    (38) Expresion -> . Expresion = Expresion
    (39) Expresion -> . Expresion < Expresion
    (40) Expresion -> . Expresion LE Expresion
    (41) Expresion -> . Expresion - Expresion
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . Expresion / Expresion
    (44) Expresion -> . Expresion * Expresion
    (45) Expresion -> . OBJECTID ASSIGN Expresion
    (48) optExpresion -> . Expresion . OBJECTID
    (49) optExpresion -> . OBJECTID
    BOOL_CONST      shift and go to state 39
    STR_CONST       shift and go to state 40
    INT_CONST       shift and go to state 41
    OBJECTID        shift and go to state 42
    {               shift and go to state 43
    NEW             shift and go to state 44
    CASE            shift and go to state 45
    LET             shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    Expresion                      shift and go to state 139
    optExpresion                   shift and go to state 49

state 135

    (27) Expresion -> LET OBJECTID : TYPEID optArrow starFormal IN . Expresion
    (20) Expresion -> . BOOL_CONST
    (21) Expresion -> . STR_CONST
    (22) Expresion -> . INT_CONST
    (23) Expresion -> . OBJECTID
    (24) Expresion -> . { bloque }
    (25) Expresion -> . NEW TYPEID
    (26) Expresion -> . CASE Expresion OF plusExpresion ESAC
    (27) Expresion -> . LET OBJECTID : TYPEID optArrow starFormal IN Expresion
    (28) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (29) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (30) Expresion -> . optExpresion ( )
    (31) Expresion -> . optExpresion ( listaExpresiones )
    (32) Expresion -> . Expresion @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (34) Expresion -> . ~ Expresion
    (35) Expresion -> . ISVOID Expresion
    (36) Expresion -> . NOT Expresion
    (37) Expresion -> . ( Expresion )
    (38) Expresion -> . Expresion = Expresion
    (39) Expresion -> . Expresion < Expresion
    (40) Expresion -> . Expresion LE Expresion
    (41) Expresion -> . Expresion - Expresion
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . Expresion / Expresion
    (44) Expresion -> . Expresion * Expresion
    (45) Expresion -> . OBJECTID ASSIGN Expresion
    (48) optExpresion -> . Expresion . OBJECTID
    (49) optExpresion -> . OBJECTID
    BOOL_CONST      shift and go to state 39
    STR_CONST       shift and go to state 40
    INT_CONST       shift and go to state 41
    OBJECTID        shift and go to state 42
    {               shift and go to state 43
    NEW             shift and go to state 44
    CASE            shift and go to state 45
    LET             shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    Expresion                      shift and go to state 140
    optExpresion                   shift and go to state 49

state 136

    (52) starFormal -> , OBJECTID . : TYPEID optArrow starFormal
    :               shift and go to state 141


state 137

    (29) Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .
    @               reduce using rule 29 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    =               reduce using rule 29 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    <               reduce using rule 29 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    LE              reduce using rule 29 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    -               reduce using rule 29 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    +               reduce using rule 29 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    /               reduce using rule 29 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    *               reduce using rule 29 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    .               reduce using rule 29 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    ;               reduce using rule 29 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    OF              reduce using rule 29 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    LOOP            reduce using rule 29 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    THEN            reduce using rule 29 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    )               reduce using rule 29 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    }               reduce using rule 29 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    ,               reduce using rule 29 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    POOL            reduce using rule 29 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    ELSE            reduce using rule 29 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    IN              reduce using rule 29 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    FI              reduce using rule 29 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)


state 138

    (32) Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .
    @               reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)
    =               reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)
    <               reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)
    LE              reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)
    -               reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)
    +               reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)
    /               reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)
    *               reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)
    .               reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)
    ;               reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)
    OF              reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)
    LOOP            reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)
    THEN            reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)
    )               reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)
    }               reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)
    ,               reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)
    POOL            reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)
    ELSE            reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)
    IN              reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)
    FI              reduce using rule 32 (Expresion -> Expresion @ TYPEID . OBJECTID ( listaExpresiones ) .)


state 139

    (54) plusExpresion -> OBJECTID : TYPEID DARROW Expresion . ; plusExpresion
    (55) plusExpresion -> OBJECTID : TYPEID DARROW Expresion . ;
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (38) Expresion -> Expresion . = Expresion
    (39) Expresion -> Expresion . < Expresion
    (40) Expresion -> Expresion . LE Expresion
    (41) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    (43) Expresion -> Expresion . / Expresion
    (44) Expresion -> Expresion . * Expresion
    (48) optExpresion -> Expresion . . OBJECTID
    ;               shift and go to state 142
    @               shift and go to state 56
    =               shift and go to state 58
    <               shift and go to state 59
    LE              shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    .               shift and go to state 57


state 140

    (27) Expresion -> LET OBJECTID : TYPEID optArrow starFormal IN Expresion .
    (32) Expresion -> Expresion . @ TYPEID . OBJECTID ( listaExpresiones )
    (33) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (38) Expresion -> Expresion . = Expresion
    (39) Expresion -> Expresion . < Expresion
    (40) Expresion -> Expresion . LE Expresion
    (41) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    (43) Expresion -> Expresion . / Expresion
    (44) Expresion -> Expresion . * Expresion
    (48) optExpresion -> Expresion . . OBJECTID
    ;               reduce using rule 27 (Expresion -> LET OBJECTID : TYPEID optArrow starFormal IN Expresion .)
    OF              reduce using rule 27 (Expresion -> LET OBJECTID : TYPEID optArrow starFormal IN Expresion .)
    LOOP            reduce using rule 27 (Expresion -> LET OBJECTID : TYPEID optArrow starFormal IN Expresion .)
    THEN            reduce using rule 27 (Expresion -> LET OBJECTID : TYPEID optArrow starFormal IN Expresion .)
    )               reduce using rule 27 (Expresion -> LET OBJECTID : TYPEID optArrow starFormal IN Expresion .)
    }               reduce using rule 27 (Expresion -> LET OBJECTID : TYPEID optArrow starFormal IN Expresion .)
    ,               reduce using rule 27 (Expresion -> LET OBJECTID : TYPEID optArrow starFormal IN Expresion .)
    POOL            reduce using rule 27 (Expresion -> LET OBJECTID : TYPEID optArrow starFormal IN Expresion .)
    ELSE            reduce using rule 27 (Expresion -> LET OBJECTID : TYPEID optArrow starFormal IN Expresion .)
    IN              reduce using rule 27 (Expresion -> LET OBJECTID : TYPEID optArrow starFormal IN Expresion .)
    FI              reduce using rule 27 (Expresion -> LET OBJECTID : TYPEID optArrow starFormal IN Expresion .)
    @               shift and go to state 56
    =               shift and go to state 58
    <               shift and go to state 59
    LE              shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    .               shift and go to state 57


state 141

    (52) starFormal -> , OBJECTID : . TYPEID optArrow starFormal
    TYPEID          shift and go to state 143


state 142

    (54) plusExpresion -> OBJECTID : TYPEID DARROW Expresion ; . plusExpresion
    (55) plusExpresion -> OBJECTID : TYPEID DARROW Expresion ; .
    (54) plusExpresion -> . OBJECTID : TYPEID DARROW Expresion ; plusExpresion
    (55) plusExpresion -> . OBJECTID : TYPEID DARROW Expresion ;
    ESAC            reduce using rule 55 (plusExpresion -> OBJECTID : TYPEID DARROW Expresion ; .)
    OBJECTID        shift and go to state 108

    plusExpresion                  shift and go to state 144

state 143

    (52) starFormal -> , OBJECTID : TYPEID . optArrow starFormal
    (50) optArrow -> . ASSIGN Expresion
    (51) optArrow -> .
    ASSIGN          shift and go to state 121
    ,               reduce using rule 51 (optArrow -> .)
    IN              reduce using rule 51 (optArrow -> .)

    optArrow                       shift and go to state 145

state 144

    (54) plusExpresion -> OBJECTID : TYPEID DARROW Expresion ; plusExpresion .
    ESAC            reduce using rule 54 (plusExpresion -> OBJECTID : TYPEID DARROW Expresion ; plusExpresion .)


state 145

    (52) starFormal -> , OBJECTID : TYPEID optArrow . starFormal
    (52) starFormal -> . , OBJECTID : TYPEID optArrow starFormal
    (53) starFormal -> .
    ,               shift and go to state 129
    IN              reduce using rule 53 (starFormal -> .)

    starFormal                     shift and go to state 146

state 146

    (52) starFormal -> , OBJECTID : TYPEID optArrow starFormal .
    IN              reduce using rule 52 (starFormal -> , OBJECTID : TYPEID optArrow starFormal .)
